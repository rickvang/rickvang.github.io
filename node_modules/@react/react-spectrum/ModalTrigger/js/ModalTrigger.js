'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _autobindDecorator = require('autobind-decorator');

var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);

var _events = require('../../utils/events');

var _ModalContainer = require('../../ModalContainer');

var _ModalContainer2 = _interopRequireDefault(_ModalContainer);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModalTrigger = (0, _autobindDecorator2.default)(_class = function (_Component) {
  _inherits(ModalTrigger, _Component);

  function ModalTrigger() {
    _classCallCheck(this, ModalTrigger);

    return _possibleConstructorReturn(this, (ModalTrigger.__proto__ || Object.getPrototypeOf(ModalTrigger)).apply(this, arguments));
  }

  _createClass(ModalTrigger, [{
    key: 'show',
    value: function show() {
      var children = _react2.default.Children.toArray(this.props.children);
      var modalChild = children.find(function (c) {
        return c.props.modalContent;
      }) || children[children.length - 1];
      this.modalKey = _ModalContainer2.default.show(modalChild, this, this.props.container);
    }
  }, {
    key: 'hide',
    value: function hide() {
      if (this.modalKey) {
        _ModalContainer2.default.hide(this.modalKey);
        this.modalKey = null;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          otherProps = _objectWithoutProperties(_props, ['children']);

      children = _react2.default.Children.toArray(children);
      var triggerChild = children.find(function (c) {
        return c.props.modalTrigger;
      }) || children[0];
      var modalChild = children.find(function (c) {
        return c.props.modalContent;
      }) || children[children.length - 1];

      delete otherProps.container;
      var trigger = (0, _react.cloneElement)(triggerChild, _extends({}, otherProps, {
        onClick: (0, _events.chain)(triggerChild.props.onClick, otherProps.onClick, this.show)
      }));

      if (children.length === 2) {
        return trigger;
      }

      var Fragment = _react2.default.Fragment || 'div';

      return _react2.default.createElement(
        Fragment,
        null,
        children.map(function (child) {
          if (child === triggerChild) {
            return trigger;
          } else if (child === modalChild) {
            return null;
          } else {
            return child;
          }
        }, this)
      );
    }
  }]);

  return ModalTrigger;
}(_react.Component)) || _class;

exports.default = ModalTrigger;