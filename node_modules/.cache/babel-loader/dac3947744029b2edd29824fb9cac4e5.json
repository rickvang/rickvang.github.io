{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rvang/Desktop/Spectrum/testapp/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Provider from '@react/react-spectrum/Provider';\nimport Button from '@react/react-spectrum/Button';\nimport TableView from '@react/react-spectrum/TableView';\nimport ListDataSource from '@react/react-spectrum/ListDataSource';\nvar columns = [{\n  title: 'Active',\n  key: 'enabled',\n  width: 100,\n  announce: false\n}, {\n  title: 'Name',\n  key: 'name',\n  minWidth: 200,\n  sortable: true,\n  divider: true\n}, {\n  title: 'Created By',\n  key: 'createdBy',\n  width: 200,\n  sortable: true\n}];\n\nvar MyDataSource =\n/*#__PURE__*/\nfunction (_ListDataSource) {\n  _inherits(MyDataSource, _ListDataSource);\n\n  function MyDataSource() {\n    _classCallCheck(this, MyDataSource);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyDataSource).apply(this, arguments));\n  }\n\n  _createClass(MyDataSource, [{\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(sortDescriptor) {\n        var tableData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // load some data here\n                tableData = [{\n                  'id': 1,\n                  'name': 'Python, carpet',\n                  'enabled': true,\n                  'createdBy': 'Alexandro Hindrich'\n                }, {\n                  'id': 2,\n                  'name': 'Cormorant, flightless',\n                  'enabled': false,\n                  'createdBy': 'Felicity McRinn'\n                }, {\n                  'id': 3,\n                  'name': 'Cape cobra',\n                  'enabled': false,\n                  'createdBy': 'Emalee Worsfield'\n                }, {\n                  'id': 4,\n                  'name': 'Red lava crab',\n                  'enabled': true,\n                  'createdBy': 'Cedric Henriet'\n                }, {\n                  'id': 5,\n                  'name': 'Tiger',\n                  'enabled': true,\n                  'createdBy': 'Roselin Burk'\n                }, {\n                  'id': 6,\n                  'name': 'Blue-tongued skink',\n                  'enabled': false,\n                  'createdBy': 'Dru Kretschmer'\n                }, {\n                  'id': 7,\n                  'name': 'Springbuck',\n                  'enabled': false,\n                  'createdBy': 'Brockie Eastham'\n                }, {\n                  'id': 8,\n                  'name': 'Woodpecker, downy',\n                  'enabled': true,\n                  'createdBy': 'Lexis Bravey'\n                }, {\n                  'id': 9,\n                  'name': 'Cape white-eye',\n                  'enabled': true,\n                  'createdBy': 'Vevay Wessel'\n                }, {\n                  'id': 10,\n                  'name': 'African wild cat',\n                  'enabled': false,\n                  'createdBy': 'Melamie Klais'\n                }]; // If sortDescriptor is provided, then sort the data accordingly.\n\n                return _context.abrupt(\"return\", tableData);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function load(_x) {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n  }, {\n    key: \"loadMore\",\n    value: function () {\n      var _loadMore = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var tableData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // load more data\n                tableData = [{\n                  'id': 1,\n                  'name': 'Python, carpet',\n                  'enabled': true,\n                  'createdBy': 'Alexandro Hindrich'\n                }, {\n                  'id': 2,\n                  'name': 'Cormorant, flightless',\n                  'enabled': false,\n                  'createdBy': 'Felicity McRinn'\n                }, {\n                  'id': 3,\n                  'name': 'Cape cobra',\n                  'enabled': false,\n                  'createdBy': 'Emalee Worsfield'\n                }, {\n                  'id': 4,\n                  'name': 'Red lava crab',\n                  'enabled': true,\n                  'createdBy': 'Cedric Henriet'\n                }, {\n                  'id': 5,\n                  'name': 'Tiger',\n                  'enabled': true,\n                  'createdBy': 'Roselin Burk'\n                }, {\n                  'id': 6,\n                  'name': 'Blue-tongued skink',\n                  'enabled': false,\n                  'createdBy': 'Dru Kretschmer'\n                }, {\n                  'id': 7,\n                  'name': 'Springbuck',\n                  'enabled': false,\n                  'createdBy': 'Brockie Eastham'\n                }, {\n                  'id': 8,\n                  'name': 'Woodpecker, downy',\n                  'enabled': true,\n                  'createdBy': 'Lexis Bravey'\n                }, {\n                  'id': 9,\n                  'name': 'Cape white-eye',\n                  'enabled': true,\n                  'createdBy': 'Vevay Wessel'\n                }, {\n                  'id': 10,\n                  'name': 'African wild cat',\n                  'enabled': false,\n                  'createdBy': 'Melamie Klais'\n                }];\n                return _context2.abrupt(\"return\", tableData);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadMore() {\n        return _loadMore.apply(this, arguments);\n      }\n\n      return loadMore;\n    }()\n  }]);\n\n  return MyDataSource;\n}(ListDataSource);\n\nfunction renderCell(column, data) {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"data[column.key]\");\n}\n\nvar testTable = React.createElement(Provider, {\n  theme: \"light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}, React.createElement(Button, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, \"Hello World\"), React.createElement(TableView, {\n  columns: columns,\n  dataSource: new MyDataSource(),\n  renderCell: renderCell,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}));\nReactDOM.render(testTable, document.getElementById('root'));","map":{"version":3,"sources":["/Users/rvang/Desktop/Spectrum/testapp/src/index.js"],"names":["React","ReactDOM","Provider","Button","TableView","ListDataSource","columns","title","key","width","announce","minWidth","sortable","divider","MyDataSource","sortDescriptor","tableData","renderCell","column","data","testTable","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Provider from '@react/react-spectrum/Provider';\nimport Button from '@react/react-spectrum/Button';\nimport TableView from '@react/react-spectrum/TableView';\nimport ListDataSource from '@react/react-spectrum/ListDataSource';\n\n\n\nlet columns = [\n  {\n    title: 'Active',\n    key: 'enabled',\n    width: 100,\n    announce: false\n  },\n  {\n    title: 'Name',\n    key: 'name',\n    minWidth: 200,\n    sortable: true,\n    divider: true\n  },\n  {\n    title: 'Created By',\n    key: 'createdBy',\n    width: 200,\n    sortable: true\n  }\n];\n\nclass MyDataSource extends ListDataSource {\n  async load(sortDescriptor) {\n    // load some data here\n    let tableData = [\n      {'id': 1, 'name': 'Python, carpet', 'enabled': true, 'createdBy': 'Alexandro Hindrich'},\n      {'id': 2, 'name': 'Cormorant, flightless', 'enabled': false, 'createdBy': 'Felicity McRinn'},\n      {'id': 3, 'name': 'Cape cobra', 'enabled': false, 'createdBy': 'Emalee Worsfield'},\n      {'id': 4, 'name': 'Red lava crab', 'enabled': true, 'createdBy': 'Cedric Henriet'},\n      {'id': 5, 'name': 'Tiger', 'enabled': true, 'createdBy': 'Roselin Burk'},\n      {'id': 6, 'name': 'Blue-tongued skink', 'enabled': false, 'createdBy': 'Dru Kretschmer'},\n      {'id': 7, 'name': 'Springbuck', 'enabled': false, 'createdBy': 'Brockie Eastham'},\n      {'id': 8, 'name': 'Woodpecker, downy', 'enabled': true, 'createdBy': 'Lexis Bravey'},\n      {'id': 9, 'name': 'Cape white-eye', 'enabled': true, 'createdBy': 'Vevay Wessel'},\n      {'id': 10, 'name': 'African wild cat', 'enabled': false, 'createdBy': 'Melamie Klais'},\n    ];\n    \n    // If sortDescriptor is provided, then sort the data accordingly.\n    return tableData\n  }\n\n  async loadMore() {\n    // load more data\n    let tableData = [\n      {'id': 1, 'name': 'Python, carpet', 'enabled': true, 'createdBy': 'Alexandro Hindrich'},\n      {'id': 2, 'name': 'Cormorant, flightless', 'enabled': false, 'createdBy': 'Felicity McRinn'},\n      {'id': 3, 'name': 'Cape cobra', 'enabled': false, 'createdBy': 'Emalee Worsfield'},\n      {'id': 4, 'name': 'Red lava crab', 'enabled': true, 'createdBy': 'Cedric Henriet'},\n      {'id': 5, 'name': 'Tiger', 'enabled': true, 'createdBy': 'Roselin Burk'},\n      {'id': 6, 'name': 'Blue-tongued skink', 'enabled': false, 'createdBy': 'Dru Kretschmer'},\n      {'id': 7, 'name': 'Springbuck', 'enabled': false, 'createdBy': 'Brockie Eastham'},\n      {'id': 8, 'name': 'Woodpecker, downy', 'enabled': true, 'createdBy': 'Lexis Bravey'},\n      {'id': 9, 'name': 'Cape white-eye', 'enabled': true, 'createdBy': 'Vevay Wessel'},\n      {'id': 10, 'name': 'African wild cat', 'enabled': false, 'createdBy': 'Melamie Klais'},\n    ];\n    \n    return tableData;\n  }\n}\n\nfunction renderCell(column, data) {\n  return <span>data[column.key]</span>;\n}\n\nlet testTable = (\n  <Provider theme=\"light\">\n    <Button>Hello World</Button>\n    <TableView\n      columns={columns}\n      dataSource={new MyDataSource()}\n      renderCell={renderCell} />\n  </Provider>\n);\n\nReactDOM.render(testTable, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}