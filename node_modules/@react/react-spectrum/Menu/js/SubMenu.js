'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _autobindDecorator = require('autobind-decorator');

var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _createId = require('../../utils/createId');

var _createId2 = _interopRequireDefault(_createId);

var _Menu = require('./Menu');

var _Menu2 = _interopRequireDefault(_Menu);

var _MenuItem = require('./MenuItem');

var _MenuItem2 = _interopRequireDefault(_MenuItem);

var _OverlayTrigger = require('../../OverlayTrigger');

var _OverlayTrigger2 = _interopRequireDefault(_OverlayTrigger);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * A menu item that has a sub menu under it that is opened on hover.
 */
var SubMenu = (0, _autobindDecorator2.default)(_class = function (_Component) {
  _inherits(SubMenu, _Component);

  function SubMenu() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SubMenu);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SubMenu.__proto__ || Object.getPrototypeOf(SubMenu)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      opened: false
    }, _this.menuId = (0, _createId2.default)(), _this.subMenuId = (0, _createId2.default)(), _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SubMenu, [{
    key: 'handleKeyDown',
    value: function handleKeyDown(event) {
      var onKeyDown = this.props.onKeyDown;

      switch (event.key) {
        case 'ArrowLeft':
        case 'Left':
          event.preventDefault();
          this.setState({ opened: false });
          break;

        case 'Enter':
        case ' ':
        case 'ArrowRight':
        case 'Right':
          event.preventDefault();
          this.setState({ opened: true });
          break;
      }
      if (onKeyDown) {
        onKeyDown(event);
      }
    }
  }, {
    key: 'handleSubMenuKeyDown',
    value: function handleSubMenuKeyDown(event) {
      switch (event.key) {
        case 'ArrowLeft':
        case 'Left':
          event.preventDefault();
          this.setState({ opened: false });
          break;
      }
    }
  }, {
    key: 'hide',
    value: function hide() {
      var _this2 = this;

      this.hideAnimationFrame = requestAnimationFrame(function () {
        return _this2.setState({ opened: false });
      });
    }
  }, {
    key: 'show',
    value: function show() {
      var _this3 = this;

      if (this.hideAnimationFrame) {
        cancelAnimationFrame(this.hideAnimationFrame);
      }
      requestAnimationFrame(function () {
        return _this3.setState({ opened: true });
      });
      if (this.props._onNestedSubmenuOpen) {
        this.props._onNestedSubmenuOpen();
      }
    }
  }, {
    key: 'cloneItem',
    value: function cloneItem(item) {
      var props = _extends({}, item.props, {
        onKeyDown: this.handleSubMenuKeyDown
      });
      if (item.type === SubMenu) {
        props._onNestedSubmenuOpen = this.show;
      }
      return (0, _react.cloneElement)(item, props);
    }
  }, {
    key: 'onExited',
    value: function onExited() {
      _reactDom2.default.findDOMNode(this.menuItem).focus();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var _props = this.props,
          children = _props.children,
          onSelect = _props.onSelect,
          label = _props.label,
          className = _props.className,
          otherProps = _objectWithoutProperties(_props, ['children', 'onSelect', 'label', 'className']);

      return _react2.default.createElement(
        _OverlayTrigger2.default,
        {
          placement: 'right top',
          offset: -10,
          crossOffset: -4,
          selected: false,
          show: this.state.opened,
          onExited: this.onExited },
        _react2.default.createElement(
          _MenuItem2.default,
          _extends({
            id: this.menuId,
            className: (0, _classnames2.default)({
              'is-open': this.state.opened
            }, className),
            ref: function ref(r) {
              return _this4.menuItem = r;
            },
            'aria-haspopup': 'menu',
            'aria-expanded': this.state.opened,
            'aria-owns': this.subMenuId
          }, otherProps, {
            onKeyDown: otherProps.disabled ? undefined : this.handleKeyDown,
            onMouseEnter: this.show,
            onMouseLeave: this.hide,
            hasNestedMenu: true }),
          label
        ),
        _react2.default.createElement(
          _Menu2.default,
          {
            id: this.subMenuId,
            onSelect: onSelect,
            autoFocus: true,
            'aria-labelledby': this.menuId,
            onMouseEnter: this.show,
            onMouseLeave: this.hide },
          _react2.default.Children.toArray(children).map(this.cloneItem)
        )
      );
    }
  }]);

  return SubMenu;
}(_react.Component)) || _class;

SubMenu.displayName = 'SubMenu';
SubMenu.propTypes = _extends({}, _MenuItem2.default.propTypes, {

  /**
   * A custom classname to be applied to the menu item
   */
  className: _propTypes2.default.string,

  /**
   * A select handler for the submenu, triggered whenever an item is selected.
   */
  onSelect: _propTypes2.default.func
});
exports.default = SubMenu;