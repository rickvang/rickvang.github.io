{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = Icon;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nif (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {\n  require('../../spectrum-css/icon/index.css');\n\n  require('../../spectrum-css/icon/index-diff.css');\n} else if (process.env.SCALE_LARGE) {\n  require('../../spectrum-css/icon/index-lg.css');\n} else {\n  require('../../spectrum-css/icon/index.css');\n}\n\nvar SIZES = {\n  XXS: 18,\n  XS: 24,\n  S: 18,\n  M: 24,\n  L: 18,\n  XL: 24,\n  XXL: 24\n};\n\nfunction Icon(_ref) {\n  var icon = _ref.icon,\n      _ref$size = _ref.size,\n      size = _ref$size === undefined ? 'M' : _ref$size,\n      className = _ref.className,\n      children = _ref.children,\n      alt = _ref.alt,\n      otherProps = _objectWithoutProperties(_ref, ['icon', 'size', 'className', 'children', 'alt']);\n\n  var sizeKey = SIZES[size];\n  var svg = icon && icon[sizeKey] || icon || children;\n\n  if (typeof svg === 'string') {\n    throw new Error('String icon names are deprecated. Please import icons from react-spectrum/Icon/IconName and render as <IconName />.');\n  }\n\n  return _react2.default.cloneElement(svg, _extends({\n    focusable: 'false',\n    'aria-label': alt,\n    'aria-hidden': alt ? null : 'true',\n    role: 'img',\n    className: (0, _classnames2.default)(svg.props.className, 'spectrum-Icon', _defineProperty({}, 'spectrum-Icon--size' + size, size), className)\n  }, otherProps));\n}\n\nIcon.displayName = 'Icon';","map":null,"metadata":{},"sourceType":"script"}