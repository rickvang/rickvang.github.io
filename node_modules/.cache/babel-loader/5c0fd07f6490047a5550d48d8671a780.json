{"ast":null,"code":"import _classCallCheck from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rvang/Desktop/Spectrum/testapp/src/Prototypes/TableClickAffordance/Proto1/Proto1.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ProtoShell from './Elements/Shell';\nimport ProtoNav from './Elements/SideNav';\nimport ProtoTableView from './Elements/TableView';\nimport ProtoHeader from './Elements/Breadcrumb';\nimport \"./Proto1.scss\";\n\nvar Proto1 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Proto1, _Component);\n\n  function Proto1() {\n    _classCallCheck(this, Proto1);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Proto1).apply(this, arguments));\n  }\n\n  _createClass(Proto1, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"proto1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(ProtoShell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"Container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Container-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Container-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Proto1\"), React.createElement(ProtoHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(ProtoTableView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), React.createElement(\"nav\", {\n        className: \"Container-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(ProtoNav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })), React.createElement(\"aside\", {\n        className: \"Container-rRail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"adsadsadsadsadsadsadsadsadsadsadsadsadsadsadsadsads\"))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(document.getElementsByClassName('spectrum-Table-cell'));\n      console.log(document.getElementsByClassName('spectrum-Table-row'));\n      var node = document.createElement(\"LI\"); // Create a <li> node\n\n      var textnode = document.createTextNode(\"Water\"); // Create a text node\n\n      node.appendChild(textnode); // Append the text to <li>\n\n      document.getElementById(\"myList\").appendChild(node); // Append <li> to <ul> with id=\"myList\"            // Create a <li> node\n\n      var getCells = document.querySelectorAll('.spectrum-Table-cell');\n      Array.from(getCells).forEach(function (element) {});\n    }\n  }]);\n\n  return Proto1;\n}(Component);\n\nexport default Proto1;","map":{"version":3,"sources":["/Users/rvang/Desktop/Spectrum/testapp/src/Prototypes/TableClickAffordance/Proto1/Proto1.js"],"names":["React","Component","withRouter","ProtoShell","ProtoNav","ProtoTableView","ProtoHeader","Proto1","console","log","document","getElementsByClassName","node","createElement","textnode","createTextNode","appendChild","getElementById","getCells","querySelectorAll","Array","from","forEach","element"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,OAAO,eAAP;;IAGMC,M;;;;;;;;;;;;;6BAEO;AACL,aACI;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ,EAMI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/B,CANJ,EAOI;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAPJ,CADJ,CAFJ,CADJ;AAgBH;;;wCACmB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,sBAAT,CAAgC,qBAAhC,CAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,sBAAT,CAAgC,oBAAhC,CAAZ;AAEA,UAAIC,IAAI,GAAGF,QAAQ,CAACG,aAAT,CAAuB,IAAvB,CAAX,CAJgB,CAIyC;;AACzD,UAAIC,QAAQ,GAAGJ,QAAQ,CAACK,cAAT,CAAwB,OAAxB,CAAf,CALgB,CAKyC;;AACzDH,MAAAA,IAAI,CAACI,WAAL,CAAiBF,QAAjB,EANgB,CAMyC;;AACzDJ,MAAAA,QAAQ,CAACO,cAAT,CAAwB,QAAxB,EAAkCD,WAAlC,CAA8CJ,IAA9C,EAPgB,CAOyC;;AACzD,UAAIM,QAAQ,GAAGR,QAAQ,CAACS,gBAAT,CAA0B,sBAA1B,CAAf;AACAC,MAAAA,KAAK,CAACC,IAAN,CAAWH,QAAX,EAAqBI,OAArB,CAA6B,UAAAC,OAAO,EAAI,CAGvC,CAHD;AAKH;;;;EAlCgBtB,S;;AAoCrB,eAAeM,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport ProtoShell from './Elements/Shell';\nimport ProtoNav from './Elements/SideNav';\nimport ProtoTableView from './Elements/TableView';\nimport ProtoHeader from './Elements/Breadcrumb';\n\nimport \"./Proto1.scss\";\n\n\nclass Proto1 extends Component {\n    \n    render() {\n        return (\n            <div id=\"proto1\">\n                <ProtoShell></ProtoShell>\n                <div className=\"Container\">\n                    <div className=\"Container-body\">\n                        <div className=\"Container-content\">\n                            <h1>Proto1</h1>\n                            <ProtoHeader></ProtoHeader>\n                            <ProtoTableView></ProtoTableView>\n                        </div>\n                        <nav className=\"Container-nav\"><ProtoNav></ProtoNav></nav>\n                        <aside className=\"Container-rRail\">adsadsadsadsadsadsadsadsadsadsadsadsadsadsadsadsads</aside>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    componentDidMount() {\n        console.log(document.getElementsByClassName('spectrum-Table-cell'));\n        console.log(document.getElementsByClassName('spectrum-Table-row'));\n        \n        var node = document.createElement(\"LI\");                 // Create a <li> node\n        var textnode = document.createTextNode(\"Water\");         // Create a text node\n        node.appendChild(textnode);                              // Append the text to <li>\n        document.getElementById(\"myList\").appendChild(node);     // Append <li> to <ul> with id=\"myList\"            // Create a <li> node\n        let getCells = document.querySelectorAll('.spectrum-Table-cell');\n        Array.from(getCells).forEach(element => {\n\n            \n        });\n\n    }\n}\nexport default Proto1;\n"]},"metadata":{},"sourceType":"module"}