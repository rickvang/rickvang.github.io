{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class;\n\nvar _autobindDecorator = require('autobind-decorator');\n\nvar _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _collectionView = require('@react/collection-view');\n\nvar _loadingLayout = require('./loadingLayout');\n\nvar _loadingLayout2 = _interopRequireDefault(_loadingLayout);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _Provider = require('../Provider');\n\nvar _Provider2 = _interopRequireDefault(_Provider);\n\nvar _proxyObject = require('./proxyObject');\n\nvar _proxyObject2 = _interopRequireDefault(_proxyObject);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Wait = require('../Wait');\n\nvar _Wait2 = _interopRequireDefault(_Wait);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CollectionView = (0, _autobindDecorator2.default)(_class = function (_React$Component) {\n  _inherits(CollectionView, _React$Component);\n\n  function CollectionView(props) {\n    _classCallCheck(this, CollectionView);\n\n    var _this = _possibleConstructorReturn(this, (CollectionView.__proto__ || Object.getPrototypeOf(CollectionView)).call(this, props));\n\n    _this.isLoading = false;\n    _this.hasMore = true;\n    _this.state = {\n      delegate: Object.assign({}, (0, _proxyObject2.default)(_this), (0, _proxyObject2.default)(props.dataSource)),\n      isDropTarget: false\n    };\n    return _this;\n  } // These come from the parent Provider. Used to set the correct props\n  // to the provider that wraps the drag view.\n\n\n  _createClass(CollectionView, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.props.layout.component = this;\n\n      if (this.collection) {\n        this.collection.setLayout((0, _loadingLayout2.default)(this.props.layout));\n      }\n\n      this.setupDataSource(this.props.dataSource);\n      this.reloadData();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(props) {\n      if (props.layout !== this.props.layout) {\n        props.layout.component = this;\n\n        if (this.collection) {\n          this.collection.setLayout((0, _loadingLayout2.default)(props.layout), props.animateLayoutChanges);\n        }\n      }\n\n      if (props.dataSource !== this.props.dataSource) {\n        this.setState({\n          delegate: Object.assign({}, (0, _proxyObject2.default)(this), (0, _proxyObject2.default)(props.dataSource))\n        });\n        this.teardownDataSource(this.props.dataSource);\n        this.setupDataSource(props.dataSource);\n        this.reloadData(props);\n      } else if ('sortDescriptor' in props && !this.isEqualSortDescriptor(props.sortDescriptor, this.props.sortDescriptor)) {\n        // TODO: should this actually update here or is it up to the user to call performSort themselves.\n        this.updateSort(props.sortDescriptor);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      // Re-render empty views on prop update in case renderEmptyView would change.\n      if (this.collection) {\n        this.collection.reloadSupplementaryViewsOfType('empty-view');\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.teardownDataSource(this.props.dataSource);\n    }\n  }, {\n    key: 'setupDataSource',\n    value: function setupDataSource(dataSource) {\n      dataSource.on('reloadData', this.reloadData);\n    }\n  }, {\n    key: 'teardownDataSource',\n    value: function teardownDataSource(dataSource) {\n      dataSource.removeListener('reloadData', this.reloadData);\n    }\n  }, {\n    key: 'isEqualSortDescriptor',\n    value: function isEqualSortDescriptor(a, b) {\n      if (!a || !b) {\n        return !a === !b;\n      }\n\n      return a.column === b.column && a.direction === b.direction;\n    }\n  }, {\n    key: 'reloadData',\n    value: function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.performLoad(function () {\n                  return props.dataSource.performLoad(props.sortDescriptor);\n                });\n\n              case 2:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function reloadData() {\n        return _ref.apply(this, arguments);\n      }\n\n      return reloadData;\n    }()\n  }, {\n    key: 'updateSort',\n    value: function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(sortDescriptor) {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.performLoad(function () {\n                  return _this2.props.dataSource.performSort(sortDescriptor);\n                });\n\n              case 2:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function updateSort(_x2) {\n        return _ref2.apply(this, arguments);\n      }\n\n      return updateSort;\n    }()\n  }, {\n    key: 'performLoad',\n    value: function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(fn) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.isLoading) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt('return');\n\n              case 2:\n                _context3.prev = 2;\n                this.isLoading = true;\n\n                if (this.collection) {\n                  this.collection.relayout();\n                }\n\n                _context3.next = 7;\n                return fn();\n\n              case 7:\n                _context3.prev = 7;\n                this.isLoading = false;\n\n                if (this.collection) {\n                  this.collection.relayout();\n                }\n\n                return _context3.finish(7);\n\n              case 11:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2,, 7, 11]]);\n      }));\n\n      function performLoad(_x3) {\n        return _ref3.apply(this, arguments);\n      }\n\n      return performLoad;\n    }()\n  }, {\n    key: 'onScroll',\n    value: function onScroll(offset) {\n      var _this3 = this;\n\n      if (this.props.onScroll) {\n        this.props.onScroll(offset);\n      }\n\n      if (!this.collection) {\n        return;\n      }\n\n      var scrollOffset = this.collection.contentSize.height - this.collection.size.height * 2;\n\n      if (this.hasMore && this.collection.contentOffset.y > scrollOffset) {\n        this.performLoad(_asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee4() {\n          var res;\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return _this3.props.dataSource.performLoadMore();\n\n                case 2:\n                  res = _context4.sent;\n\n                  if (typeof res === 'boolean') {\n                    _this3.hasMore = res;\n                  }\n\n                case 4:\n                case 'end':\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, _this3);\n        })));\n      }\n    }\n  }, {\n    key: 'dropTargetUpdated',\n    value: function dropTargetUpdated(target) {\n      // Highlight the entire collection view if the drop position is between, but the default\n      // drop position from props is \"on\". This means the drop was over a non-target item.\n      // Also do this if the drop position is \"between\" and the collection view is empty.\n      var isDropTarget = target && target.type === 'item' && target.indexPath.section === 0 && target.indexPath.index === 0 && target.dropPosition === _collectionView.DragTarget.DROP_BETWEEN && (this.props.dropPosition === 'on' || this.collection.getSectionLength(0) === 0);\n\n      if (isDropTarget && !this.state.isDropTarget) {\n        this.setState({\n          isDropTarget: true\n        });\n      } else if (this.state.isDropTarget) {\n        this.setState({\n          isDropTarget: false\n        });\n      }\n    }\n  }, {\n    key: 'renderItemView',\n    value: function renderItemView(type, data) {\n      return this.props.renderItemView(type, data);\n    }\n  }, {\n    key: 'renderDragView',\n    value: function renderDragView(target) {\n      var dragView = void 0;\n      var style = {\n        background: 'transparent'\n      }; // Use custom drag renderer if provided,\n      // otherwise just get the existing item view.\n\n      if (this.props.renderDragView) {\n        dragView = this.props.renderDragView(target, this.collection.selectedIndexPaths);\n      } else {\n        // Get the item wrapper view from collection-view. The first child is the actual item component.\n        var view = this.collection.getItemView(target.indexPath);\n        dragView = [].concat(_toConsumableArray(view.children))[0];\n        style.width = view.layoutInfo.rect.width;\n        style.height = view.layoutInfo.rect.height;\n      } // Wrap in a spectrum provider so spectrum components are themed correctly.\n\n\n      return _react2.default.createElement(_Provider2.default, _extends({}, this.context, {\n        style: style\n      }), dragView);\n    }\n  }, {\n    key: 'renderSupplementaryView',\n    value: function renderSupplementaryView(type) {\n      if (type === 'loading-indicator') {\n        return _react2.default.createElement(_Wait2.default, {\n          centered: true,\n          size: 'M'\n        });\n      }\n\n      if (type === 'empty-view' && this.props.renderEmptyView) {\n        return this.props.renderEmptyView();\n      }\n\n      if (this.props.renderSupplementaryView) {\n        return this.props.renderSupplementaryView(type);\n      }\n\n      return _react2.default.createElement('div', null);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props = this.props,\n          className = _props.className,\n          otherProps = _objectWithoutProperties(_props, ['className']);\n\n      delete otherProps.layout;\n      return _react2.default.createElement(_collectionView.EditableCollectionView, _extends({}, otherProps, {\n        ref: function ref(c) {\n          return _this4.collection = c;\n        },\n        className: (0, _classnames2.default)(className, {\n          'is-drop-target': this.state.isDropTarget\n        }),\n        delegate: this.state.delegate,\n        onScroll: this.onScroll\n      }));\n    }\n  }]);\n\n  return CollectionView;\n}(_react2.default.Component)) || _class;\n\nCollectionView.contextTypes = {\n  theme: _propTypes2.default.string,\n  scale: _propTypes2.default.string,\n  locale: _propTypes2.default.string\n};\nexports.default = CollectionView;","map":null,"metadata":{},"sourceType":"script"}