'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = StepList;

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _TabListBase = require('../../TabList/js/TabListBase');

var _TabListBase2 = _interopRequireDefault(_TabListBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require('../../spectrum-css/steplist/index.css');

  require('../../spectrum-css/steplist/index-diff.css');
} else if (process.env.SCALE_LARGE) {
  require('../../spectrum-css/steplist/index-lg.css');
} else {
  require('../../spectrum-css/steplist/index.css');
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require('../../spectrum-css/steplist/multiStops/light.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require('../../spectrum-css/steplist/multiStops/dark.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require('../../spectrum-css/steplist/multiStops/lightest.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require('../../spectrum-css/steplist/multiStops/darkest.css');


var SMALL = 'S';
var LARGE = 'L';
var ON = 'on';

function StepList(_ref) {
  var className = _ref.className,
      _ref$interaction = _ref.interaction,
      interaction = _ref$interaction === undefined ? ON : _ref$interaction,
      _ref$size = _ref.size,
      size = _ref$size === undefined ? LARGE : _ref$size,
      otherProps = _objectWithoutProperties(_ref, ['className', 'interaction', 'size']);

  return _react2.default.createElement(_TabListBase2.default, _extends({}, otherProps, {
    className: (0, _classnames2.default)('spectrum-Steplist', {
      'spectrum-Steplist--interactive': interaction === ON,
      'spectrum-Steplist--small': size === SMALL
    }, className),
    disabled: interaction !== ON,
    'aria-multiselectable': false,
    childMappingFunction: function childMappingFunction() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return getChildProps.apply(undefined, [size].concat(args));
    } }));
}

function getChildProps(size, tabList, child, index) {
  return {
    complete: +tabList.state.selectedIndex > index,
    size: size
  };
}

StepList.displayName = 'StepList';

StepList.propTypes = {
  /** Class to add to the step list */
  className: _propTypes2.default.string,

  /** Index of the selected step (uncontrolled state) */
  defaultSelectedIndex: _propTypes2.default.number,

  /** Turn step list interaction (clickable to progress) on or off */
  interaction: _propTypes2.default.oneOf([ON, 'off']),

  /** Index of the selected step */
  selectedIndex: _propTypes2.default.number,

  /** Size of the steps and step list */
  size: _propTypes2.default.oneOf(['S', 'L'])
};

StepList.defaultProps = {
  interaction: ON,
  size: LARGE
};