'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _autobindDecorator = require('autobind-decorator');

var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _filterDOMProps = require('../../utils/filterDOMProps');

var _filterDOMProps2 = _interopRequireDefault(_filterDOMProps);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require('../../spectrum-css/dropzone/index.css');

  require('../../spectrum-css/dropzone/index-diff.css');
} else if (process.env.SCALE_LARGE) {
  require('../../spectrum-css/dropzone/index-lg.css');
} else {
  require('../../spectrum-css/dropzone/index.css');
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require('../../spectrum-css/dropzone/multiStops/light.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require('../../spectrum-css/dropzone/multiStops/dark.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require('../../spectrum-css/dropzone/multiStops/lightest.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require('../../spectrum-css/dropzone/multiStops/darkest.css');

/**
 * A DropZone component is an area that accepts drag and drop of files and other objects.
 */
var DropZone = (0, _autobindDecorator2.default)(_class = function (_React$Component) {
  _inherits(DropZone, _React$Component);

  function DropZone(props) {
    _classCallCheck(this, DropZone);

    var _this = _possibleConstructorReturn(this, (DropZone.__proto__ || Object.getPrototypeOf(DropZone)).call(this, props));

    _this.state = {
      draggingOver: false
    };
    _this.debouncedDragLeave = null;
    return _this;
  }

  _createClass(DropZone, [{
    key: 'clearDebouncedDragLeave',
    value: function clearDebouncedDragLeave() {
      if (this.debouncedDragLeave) {
        clearTimeout(this.debouncedDragLeave);
        this.debouncedDragLeave = null;
      }
    }
  }, {
    key: 'onDragOver',
    value: function onDragOver(e) {
      if (this.props.shouldAccept && !this.props.shouldAccept(e)) {
        e.dataTransfer.dropEffect = 'none';
        return;
      }

      e.preventDefault();

      this.clearDebouncedDragLeave();

      if (!this.state.draggingOver) {
        this.setState({
          draggingOver: true
        });
      }

      e.dataTransfer.dropEffect = this.props.dropEffect;

      if (this.props.onDragOver) {
        this.props.onDragOver(e);
      }
    }
  }, {
    key: 'onDragLeave',
    value: function onDragLeave(e) {
      var _this2 = this;

      this.clearDebouncedDragLeave();

      this.debouncedDragLeave = setTimeout(function () {
        if (_this2.state.draggingOver) {
          _this2.setState({
            draggingOver: false
          });
        }

        if (_this2.props.onDragLeave) {
          _this2.props.onDragLeave(e);
        }
      }, 100);
    }
  }, {
    key: 'onDrop',
    value: function onDrop(e) {
      e.preventDefault();

      this.clearDebouncedDragLeave();

      if (this.state.draggingOver) {
        this.setState({
          draggingOver: false
        });
      }

      if (this.props.onDrop) {
        this.props.onDrop(e);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          className = _props.className,
          otherProps = _objectWithoutProperties(_props, ['children', 'className']);

      return _react2.default.createElement(
        'div',
        _extends({}, (0, _filterDOMProps2.default)(otherProps), {
          className: (0, _classnames2.default)('spectrum-Dropzone', {
            'is-dragged': this.state.draggingOver
          }, className),
          onDrop: this.onDrop,
          onDragOver: this.onDragOver,
          onDragLeave: this.onDragLeave }),
        children
      );
    }
  }]);

  return DropZone;
}(_react2.default.Component)) || _class;

DropZone.defaultProps = {
  dropEffect: 'copy'
};
DropZone.propTypes = {
  /** Controls the cursor displayed when dragging over the drop zone */
  dropEffect: _propTypes2.default.oneOf(['copy', 'move', 'link', 'none']),

  /** A function that should return a boolean indicating whether a drop is accepted */
  shouldAccept: _propTypes2.default.func,

  /** A callback that is called when dragging over the drop zone */
  onDragOver: _propTypes2.default.func,

  /** A callback that is called when a drop occurs */
  onDrop: _propTypes2.default.func,

  /** Custom className to apply to this component */
  className: _propTypes2.default.string
};
exports.default = DropZone;