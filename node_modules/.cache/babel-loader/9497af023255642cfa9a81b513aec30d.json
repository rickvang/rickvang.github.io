{"ast":null,"code":"'use strict';\n\nimport _regeneratorRuntime from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/regenerator\";\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _collectionView = require('@react/collection-view');\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/*\n * TableViewDataSource is the super class for all data sources used by TableView.\n * @deprecated\n */\n\n\nvar TableViewDataSource = function (_DataSource) {\n  _inherits(TableViewDataSource, _DataSource);\n\n  function TableViewDataSource() {\n    _classCallCheck(this, TableViewDataSource);\n\n    var _this = _possibleConstructorReturn(this, (TableViewDataSource.__proto__ || Object.getPrototypeOf(TableViewDataSource)).call(this));\n\n    console.warn('TableViewDataSource is deprecated and will be removed in the next major version of react-spectrum. Please switch to the new TableView API using ListDataSource. See http://react-spectrum.corp.adobe.com/components/TableView for details.');\n    _this.columns = _this.getColumns();\n    _this.sortColumn = null;\n    _this.sortDir = -1;\n    return _this;\n  }\n\n  _createClass(TableViewDataSource, [{\n    key: 'getNumberOfSections',\n    value: function getNumberOfSections() {\n      return 1;\n    }\n  }, {\n    key: 'getSectionLength',\n    value: function getSectionLength(section) {\n      return this.getNumberOfRows(section);\n    }\n  }, {\n    key: 'getItem',\n    value: function getItem(section, index) {\n      var _this2 = this;\n\n      return this.columns.map(function (column) {\n        return _this2.getCell(column, index, section);\n      });\n    }\n    /**\n     * Returns a list of columns in the TableView\n     * @return {object[]}\n     * @abstract\n     */\n\n  }, {\n    key: 'getColumns',\n    value: function getColumns() {\n      throw new Error('getColumns must be implemented by subclasses');\n    }\n    /**\n     * Returns the number of rows in the TableView\n     * @return {number}\n     * @abstract\n     */\n\n  }, {\n    key: 'getNumberOfRows',\n    value: function getNumberOfRows(section) {\n      throw new Error('getNumberOfRows must be implemented by subclasses');\n    }\n    /**\n     * Returns the data for a cell in the TableView\n     * @return {any}\n     * @abstract\n     */\n\n  }, {\n    key: 'getCell',\n    value: function getCell(column, row, section) {\n      throw new Error('getCell must be implemented by subclasses');\n    }\n  }, {\n    key: 'getSectionHeader',\n    value: function getSectionHeader(section) {\n      return null;\n    }\n  }, {\n    key: 'performSort',\n    value: function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(sortDescriptor) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.sortColumn = sortDescriptor.column;\n                this.sortDir = sortDescriptor.direction;\n                this.sort(this.sortColumn, this.sortDir);\n\n              case 3:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function performSort(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return performSort;\n    }()\n  }, {\n    key: 'performLoad',\n    value: function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function performLoad() {\n        return _ref2.apply(this, arguments);\n      }\n\n      return performLoad;\n    }()\n  }, {\n    key: 'performLoadMore',\n    value: function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.loadMore();\n\n              case 2:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function performLoadMore() {\n        return _ref3.apply(this, arguments);\n      }\n\n      return performLoadMore;\n    }()\n    /**\n     * Called by the TableView when scrolling near the bottom. You can use this\n     * opportunity to load more data, e.g. for infinite scrolling.\n     * @abstract\n     */\n\n  }, {\n    key: 'loadMore',\n    value: function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function loadMore() {\n        return _ref4.apply(this, arguments);\n      }\n\n      return loadMore;\n    }()\n  }, {\n    key: 'sort',\n\n    /**\n     * Called by the TableView when a column header is clicked. You should sort your data\n     * accordingly and call `reloadData`.\n     * @param {object} column\n     * @param {number} dir\n     * @abstract\n     */\n    value: function sort(column, dir) {\n      throw new Error('sort must be implemented by subclasses');\n    }\n    /**\n     * Reloads the data in the TableView\n     */\n\n  }, {\n    key: 'reloadData',\n    value: function reloadData() {\n      this.emit('reloadSection', 0, false);\n    }\n  }]);\n\n  return TableViewDataSource;\n}(_collectionView.DataSource);\n\nexports.default = TableViewDataSource;","map":{"version":3,"sources":["/Users/rvang/Desktop/Spectrum/testapp/src/Prototypes/TableClickAffordance/Proto1/Elements/TableView/js/TableViewDataSource.js"],"names":["Object","defineProperty","exports","value","default","undefined","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_collectionView","require","_asyncToGenerator","fn","gen","apply","arguments","Promise","resolve","reject","step","arg","info","error","done","then","err","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","TableViewDataSource","_DataSource","_this","getPrototypeOf","console","warn","columns","getColumns","sortColumn","sortDir","getNumberOfSections","getSectionLength","section","getNumberOfRows","getItem","index","_this2","map","column","getCell","Error","row","getSectionHeader","_ref","mark","_callee","sortDescriptor","wrap","_callee$","_context","prev","next","direction","sort","stop","performSort","_x","_ref2","_callee2","_callee2$","_context2","performLoad","_ref3","_callee3","_callee3$","_context3","loadMore","performLoadMore","_ref4","_callee4","_callee4$","_context4","dir","reloadData","emit","DataSource"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _collectionView = require('@react/collection-view');\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/*\n * TableViewDataSource is the super class for all data sources used by TableView.\n * @deprecated\n */\nvar TableViewDataSource = function (_DataSource) {\n  _inherits(TableViewDataSource, _DataSource);\n\n  function TableViewDataSource() {\n    _classCallCheck(this, TableViewDataSource);\n\n    var _this = _possibleConstructorReturn(this, (TableViewDataSource.__proto__ || Object.getPrototypeOf(TableViewDataSource)).call(this));\n\n    console.warn('TableViewDataSource is deprecated and will be removed in the next major version of react-spectrum. Please switch to the new TableView API using ListDataSource. See http://react-spectrum.corp.adobe.com/components/TableView for details.');\n    _this.columns = _this.getColumns();\n    _this.sortColumn = null;\n    _this.sortDir = -1;\n    return _this;\n  }\n\n  _createClass(TableViewDataSource, [{\n    key: 'getNumberOfSections',\n    value: function getNumberOfSections() {\n      return 1;\n    }\n  }, {\n    key: 'getSectionLength',\n    value: function getSectionLength(section) {\n      return this.getNumberOfRows(section);\n    }\n  }, {\n    key: 'getItem',\n    value: function getItem(section, index) {\n      var _this2 = this;\n\n      return this.columns.map(function (column) {\n        return _this2.getCell(column, index, section);\n      });\n    }\n\n    /**\n     * Returns a list of columns in the TableView\n     * @return {object[]}\n     * @abstract\n     */\n\n  }, {\n    key: 'getColumns',\n    value: function getColumns() {\n      throw new Error('getColumns must be implemented by subclasses');\n    }\n\n    /**\n     * Returns the number of rows in the TableView\n     * @return {number}\n     * @abstract\n     */\n\n  }, {\n    key: 'getNumberOfRows',\n    value: function getNumberOfRows(section) {\n      throw new Error('getNumberOfRows must be implemented by subclasses');\n    }\n\n    /**\n     * Returns the data for a cell in the TableView\n     * @return {any}\n     * @abstract\n     */\n\n  }, {\n    key: 'getCell',\n    value: function getCell(column, row, section) {\n      throw new Error('getCell must be implemented by subclasses');\n    }\n  }, {\n    key: 'getSectionHeader',\n    value: function getSectionHeader(section) {\n      return null;\n    }\n  }, {\n    key: 'performSort',\n    value: function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(sortDescriptor) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.sortColumn = sortDescriptor.column;\n                this.sortDir = sortDescriptor.direction;\n                this.sort(this.sortColumn, this.sortDir);\n\n              case 3:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function performSort(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return performSort;\n    }()\n  }, {\n    key: 'performLoad',\n    value: function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function performLoad() {\n        return _ref2.apply(this, arguments);\n      }\n\n      return performLoad;\n    }()\n  }, {\n    key: 'performLoadMore',\n    value: function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.loadMore();\n\n              case 2:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function performLoadMore() {\n        return _ref3.apply(this, arguments);\n      }\n\n      return performLoadMore;\n    }()\n\n    /**\n     * Called by the TableView when scrolling near the bottom. You can use this\n     * opportunity to load more data, e.g. for infinite scrolling.\n     * @abstract\n     */\n\n  }, {\n    key: 'loadMore',\n    value: function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function loadMore() {\n        return _ref4.apply(this, arguments);\n      }\n\n      return loadMore;\n    }()\n  }, {\n    key: 'sort',\n\n\n    /**\n     * Called by the TableView when a column header is clicked. You should sort your data\n     * accordingly and call `reloadData`.\n     * @param {object} column\n     * @param {number} dir\n     * @abstract\n     */\n    value: function sort(column, dir) {\n      throw new Error('sort must be implemented by subclasses');\n    }\n\n    /**\n     * Reloads the data in the TableView\n     */\n\n  }, {\n    key: 'reloadData',\n    value: function reloadData() {\n      this.emit('reloadSection', 0, false);\n    }\n  }]);\n\n  return TableViewDataSource;\n}(_collectionView.DataSource);\n\nexports.default = TableViewDataSource;"]},"metadata":{},"sourceType":"module"}