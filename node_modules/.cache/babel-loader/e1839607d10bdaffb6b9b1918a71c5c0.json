{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.modalManager = exports.Modal = exports.default = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _autobindDecorator = require('autobind-decorator');\n\nvar _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);\n\nvar _Modal = require('react-overlays/lib/Modal');\n\nvar _Modal2 = _interopRequireDefault(_Modal);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _closest = require('dom-helpers/query/closest');\n\nvar _closest2 = _interopRequireDefault(_closest);\n\nvar _filterDOMProps = require('../../utils/filterDOMProps');\n\nvar _filterDOMProps2 = _interopRequireDefault(_filterDOMProps);\n\nvar _ModalManager = require('./ModalManager');\n\nvar _ModalManager2 = _interopRequireDefault(_ModalManager);\n\nvar _OpenTransition = require('../../utils/OpenTransition');\n\nvar _OpenTransition2 = _interopRequireDefault(_OpenTransition);\n\nvar _PortalContainer = require('../../PortalContainer');\n\nvar _PortalContainer2 = _interopRequireDefault(_PortalContainer);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nif (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {\n  require('../../spectrum-css/underlay/index.css');\n\n  require('../../spectrum-css/underlay/index-diff.css');\n} else if (process.env.SCALE_LARGE) {\n  require('../../spectrum-css/underlay/index-lg.css');\n} else {\n  require('../../spectrum-css/underlay/index.css');\n}\n\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require('../../spectrum-css/underlay/multiStops/light.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require('../../spectrum-css/underlay/multiStops/dark.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require('../../spectrum-css/underlay/multiStops/lightest.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require('../../spectrum-css/underlay/multiStops/darkest.css');\nvar MANAGER_SINGLETON = new _ModalManager2.default({\n  handleContainerOverflow: false\n});\nvar MODAL_KEY = 1;\n\nvar ModalContainer = function () {\n  function ModalContainer() {\n    _classCallCheck(this, ModalContainer);\n  }\n\n  _createClass(ModalContainer, null, [{\n    key: 'show',\n    value: function show(content, context, container) {\n      var key = MODAL_KEY++; // If container is not specified, look for the provider of context\n\n      if (!container && context) {\n        container = function container() {\n          return (0, _closest2.default)(_reactDom2.default.findDOMNode(context), '.react-spectrum-provider');\n        };\n      } else if (!container) {\n        container = function container() {\n          return document.querySelector('.react-spectrum-provider') || document.body;\n        };\n      }\n\n      var modal = _react2.default.createElement(Modal, {\n        container: container,\n        key: key,\n        onHide: this.hide.bind(this, key),\n        onClose: content.props.onClose\n      }, content);\n\n      _PortalContainer2.default.add(modal, context);\n\n      return key;\n    }\n  }, {\n    key: 'hide',\n    value: function hide(key) {\n      _PortalContainer2.default.remove({\n        key: key\n      });\n    }\n  }]);\n\n  return ModalContainer;\n}();\n\nexports.default = ModalContainer;\n\nvar Modal = exports.Modal = (0, _autobindDecorator2.default)(_class = function (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  function Modal() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Modal.__proto__ || Object.getPrototypeOf(Modal)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      show: true\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Modal, [{\n    key: 'onClose',\n    value: function onClose() {\n      this.setState({\n        show: false\n      });\n\n      if (this.props.onClose) {\n        this.props.onClose();\n      }\n    }\n  }, {\n    key: 'onEntering',\n    value: function onEntering() {\n      // Make sure that autoFocus actually moves focus to the Modal.\n      if (this.baseModal.lastFocus === document.activeElement) {\n        this.baseModal.autoFocus();\n      }\n    }\n  }, {\n    key: 'backdropMode',\n    value: function backdropMode() {\n      // I am sorry for this atrocity. I needed a way to detect when not to have a backdrop.\n      var fullscreenTakeover = this.props.children.props.mode === 'fullscreenTakeover';\n      /*\n       * backdropClickable (bc)\n       *     bc | !bc\n       *     ---|------\n       *      t |static\n       * if fullscreenTakeover, then always false\n       */\n\n      var backdropClickable = this.props.children.props.backdropClickable;\n      var backdrop = 'static';\n\n      if (backdropClickable) {\n        backdrop = true;\n      }\n\n      if (fullscreenTakeover) {\n        backdrop = false;\n      }\n\n      return backdrop;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var backdrop = this.backdropMode();\n      var role = this.props.children.props.role;\n      var hasDialogRole = role && role.indexOf('dialog') !== -1; // The z-index here should match the one in Overlay\n\n      return _react2.default.createElement(_Modal2.default, {\n        container: this.props.container,\n        style: {\n          zIndex: 100000,\n          position: 'relative'\n        },\n        show: this.state.show,\n        ref: function ref(baseModal) {\n          return _this2.baseModal = baseModal;\n        },\n        onEntering: this.onEntering,\n        onExited: this.props.onHide,\n        onHide: this.onClose,\n        backdrop: backdrop,\n        manager: MANAGER_SINGLETON,\n        renderBackdrop: function renderBackdrop(props) {\n          return _react2.default.createElement(Underlay, props);\n        },\n        transition: _OpenTransition2.default,\n        backdropTransition: _OpenTransition2.default,\n        role: hasDialogRole ? 'presentation' : 'dialog',\n        'aria-modal': null\n      }, (0, _react.cloneElement)(this.props.children, {\n        onClose: this.onClose\n      }));\n    }\n  }]);\n\n  return Modal;\n}(_react2.default.Component)) || _class;\n\nvar Underlay = function (_React$Component2) {\n  _inherits(Underlay, _React$Component2);\n\n  function Underlay() {\n    _classCallCheck(this, Underlay);\n\n    return _possibleConstructorReturn(this, (Underlay.__proto__ || Object.getPrototypeOf(Underlay)).apply(this, arguments));\n  }\n\n  _createClass(Underlay, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          open = _props.open,\n          props = _objectWithoutProperties(_props, ['open']);\n\n      return _react2.default.createElement('div', _extends({}, (0, _filterDOMProps2.default)(props), {\n        className: (0, _classnames2.default)('spectrum-Underlay', {\n          'is-open': open\n        })\n      }));\n    }\n  }]);\n\n  return Underlay;\n}(_react2.default.Component);\n\nexports.modalManager = MANAGER_SINGLETON;","map":null,"metadata":{},"sourceType":"script"}