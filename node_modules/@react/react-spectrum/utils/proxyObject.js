'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = proxy;

var _react = require('react');

/**
 * Creates a proxy object containing all of the methods of the input object
 * bound to that object, such that calling them still applies to the input
 * object. This allows combining the methods of two objects without mutating
 * either one.
 */
function proxy(obj) {
  var res = {};
  if (!obj) {
    return res;
  }

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = getAllPropertyNames(obj)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var key = _step.value;

      if (typeof obj[key] === 'function') {
        res[key] = obj[key].bind(obj);
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return res;
}

function getAllPropertyNames(obj) {
  var props = [];

  do {
    props = props.concat(Object.getOwnPropertyNames(obj));
  } while ((obj = Object.getPrototypeOf(obj)) && obj !== Object.prototype && obj !== _react.Component.prototype);

  return props;
}