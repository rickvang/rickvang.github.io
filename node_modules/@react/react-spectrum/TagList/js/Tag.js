'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _desc, _value, _class;

var _autobindDecorator = require('autobind-decorator');

var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);

var _Avatar = require('../../Avatar');

var _Avatar2 = _interopRequireDefault(_Avatar);

var _Button = require('../../Button');

var _Button2 = _interopRequireDefault(_Button);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _icon = require('../../utils/icon');

var _CrossSmall = require('../../Icon/core/CrossSmall');

var _CrossSmall2 = _interopRequireDefault(_CrossSmall);

var _filterDOMProps = require('../../utils/filterDOMProps');

var _filterDOMProps2 = _interopRequireDefault(_filterDOMProps);

var _intl = require('../../utils/intl');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var intlMessages = {
  'cs-CZ': _interopRequireDefault(require('./../intl/cs-CZ.json')).default,
  'da-DK': _interopRequireDefault(require('./../intl/da-DK.json')).default,
  'de-DE': _interopRequireDefault(require('./../intl/de-DE.json')).default,
  'en-US': _interopRequireDefault(require('./../intl/en-US.json')).default,
  'es-ES': _interopRequireDefault(require('./../intl/es-ES.json')).default,
  'fi-FI': _interopRequireDefault(require('./../intl/fi-FI.json')).default,
  'fr-FR': _interopRequireDefault(require('./../intl/fr-FR.json')).default,
  'it-IT': _interopRequireDefault(require('./../intl/it-IT.json')).default,
  'ja-JP': _interopRequireDefault(require('./../intl/ja-JP.json')).default,
  'ko-KR': _interopRequireDefault(require('./../intl/ko-KR.json')).default,
  'nb-NO': _interopRequireDefault(require('./../intl/nb-NO.json')).default,
  'nl-NL': _interopRequireDefault(require('./../intl/nl-NL.json')).default,
  'pl-PL': _interopRequireDefault(require('./../intl/pl-PL.json')).default,
  'pt-BR': _interopRequireDefault(require('./../intl/pt-BR.json')).default,
  'ru-RU': _interopRequireDefault(require('./../intl/ru-RU.json')).default,
  'sv-SE': _interopRequireDefault(require('./../intl/sv-SE.json')).default,
  'tr-TR': _interopRequireDefault(require('./../intl/tr-TR.json')).default,
  'zh-CN': _interopRequireDefault(require('./../intl/zh-CN.json')).default,
  'zh-TW': _interopRequireDefault(require('./../intl/zh-TW.json')).default
};

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require('../../spectrum-css/tags/index.css');

  require('../../spectrum-css/tags/index-diff.css');
} else if (process.env.SCALE_LARGE) {
  require('../../spectrum-css/tags/index-lg.css');
} else {
  require('../../spectrum-css/tags/index.css');
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require('../../spectrum-css/tags/multiStops/light.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require('../../spectrum-css/tags/multiStops/dark.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require('../../spectrum-css/tags/multiStops/lightest.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require('../../spectrum-css/tags/multiStops/darkest.css');

var formatMessage = (0, _intl.messageFormatter)(intlMessages);

/**
 * A tag is used to categorize content and display filters.
 */
var Tag = (_class = function (_React$Component) {
  _inherits(Tag, _React$Component);

  function Tag(props) {
    _classCallCheck(this, Tag);

    var _this = _possibleConstructorReturn(this, (Tag.__proto__ || Object.getPrototypeOf(Tag)).call(this, props));

    _this.state = {
      tagFocused: false
    };
    return _this;
  }

  _createClass(Tag, [{
    key: 'handleButtonFocus',
    value: function handleButtonFocus(e) {
      this.setState({ tagFocused: true });
    }
  }, {
    key: 'handleButtonBlur',
    value: function handleButtonBlur(e) {
      this.setState({ tagFocused: false });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          value = _props.value,
          children = _props.children,
          avatar = _props.avatar,
          icon = _props.icon,
          _props$closable = _props.closable,
          closable = _props$closable === undefined ? false : _props$closable,
          _props$disabled = _props.disabled,
          disabled = _props$disabled === undefined ? false : _props$disabled,
          _props$selected = _props.selected,
          selected = _props$selected === undefined ? false : _props$selected,
          _props$invalid = _props.invalid,
          invalid = _props$invalid === undefined ? false : _props$invalid,
          className = _props.className,
          _props$onClose = _props.onClose,
          onClose = _props$onClose === undefined ? function () {} : _props$onClose,
          tabIndex = _props.tabIndex,
          role = _props.role,
          otherProps = _objectWithoutProperties(_props, ['value', 'children', 'avatar', 'icon', 'closable', 'disabled', 'selected', 'invalid', 'className', 'onClose', 'tabIndex', 'role']);

      var tag = this.tag;
      var tagFocused = this.state.tagFocused;

      var removeString = formatMessage('Remove');
      var childContent = children || value;
      var ariaLabel = childContent ? removeString + ': ' + childContent : { removeString: removeString };

      function handleKeyDown(e) {
        switch (e.keyCode) {
          case 46: // delete
          case 8: // backspace
          case 32:
            // space
            onClose(value || children, e);
            e.preventDefault();
            break;
        }
      }
      function handleButtonClick(e) {
        onClose(value || children, e);
        // If the button is clicked and this is a gridcell it must be a mouse event
        // Set focus to the tag rather than the button as that is where focus manager
        // expects it to be
        if (role === 'gridcell') {
          if (tag) {
            tag.focus();
          }
        }
      }

      return _react2.default.createElement(
        'div',
        _extends({
          ref: function ref(t) {
            _this2.tag = t;
          },
          className: (0, _classnames2.default)('spectrum-Tags-item', {
            'is-selected': selected,
            'is-disabled': disabled,
            'spectrum-Tags-item--deletable': closable,
            'is-invalid': invalid
          }, { 'focus-ring': tagFocused }, className),
          tabIndex: tabIndex,
          'aria-selected': !disabled && selected,
          onKeyDown: !disabled && closable ? function (e) {
            handleKeyDown(e);
          } : null
        }, (0, _filterDOMProps2.default)(otherProps), {
          role: role === 'gridcell' ? 'row' : undefined }),
        avatar && _react2.default.createElement(_Avatar2.default, { alt: '', src: avatar, 'aria-hidden': 'true' }),
        (0, _icon.cloneIcon)(icon, {
          size: 'S',
          className: 'spectrum-Tags-itemIcon'
        }),
        _react2.default.createElement(
          'span',
          {
            role: role,
            className: 'spectrum-Tags-itemLabel' },
          childContent
        ),
        closable && _react2.default.createElement(
          'span',
          { role: role },
          _react2.default.createElement(_Button2.default, {
            tabIndex: role === 'gridcell' || disabled ? '-1' : undefined,
            'aria-label': ariaLabel,
            className: 'spectrum-ClearButton--small',
            variant: 'clear',
            icon: _react2.default.createElement(_CrossSmall2.default, null),
            title: removeString,
            onClick: !disabled ? function (e) {
              handleButtonClick(e);
            } : null,
            onBlur: this.handleButtonBlur,
            onFocus: this.handleButtonFocus })
        )
      );
    }
  }]);

  return Tag;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'handleButtonFocus', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleButtonFocus'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'handleButtonBlur', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleButtonBlur'), _class.prototype)), _class);
Tag.propTypes = {
  /** Avatar to use in the tag */
  avatar: _propTypes2.default.string,

  /** Whether the tag is removable from the tag list */
  closeable: _propTypes2.default.bool,

  /** Whether the tag is disabled from user interaction */
  disabled: _propTypes2.default.bool,

  /** Icon to use in the tag */
  icon: _propTypes2.default.string,

  /** Whether the tag is selected */
  selected: _propTypes2.default.bool
};
Tag.defaultProps = {
  closeable: false,
  disabled: false,
  selected: false
};
exports.default = Tag;