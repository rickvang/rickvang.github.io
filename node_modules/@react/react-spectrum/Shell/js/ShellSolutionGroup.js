"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ShellSolutionGroup = function (_Component) {
  _inherits(ShellSolutionGroup, _Component);

  function ShellSolutionGroup() {
    _classCallCheck(this, ShellSolutionGroup);

    return _possibleConstructorReturn(this, (ShellSolutionGroup.__proto__ || Object.getPrototypeOf(ShellSolutionGroup)).apply(this, arguments));
  }

  _createClass(ShellSolutionGroup, [{
    key: "renderPrimarySolutions",
    value: function renderPrimarySolutions(children) {
      var entitledChildren = children.filter(function (child) {
        return child.props && child.props.entitled;
      });
      var unentitledChildren = children.filter(function (child) {
        return child.props && child.props.entitled == null;
      });

      return _react2.default.createElement(
        "div",
        { className: "coral-Shell-solutions-container" },
        _react2.default.createElement(
          "div",
          { className: "coral-Shell-solutions" },
          entitledChildren
        ),
        _react2.default.createElement(
          "div",
          { className: "coral-Shell-solutions" },
          unentitledChildren
        )
      );
    }
  }, {
    key: "renderSecondarySolutions",
    value: function renderSecondarySolutions(children) {
      return _react2.default.createElement(
        "div",
        { className: "coral-Shell-solutions coral-Shell-solutions--secondary" },
        _react2.default.Children.map(children, function (child) {
          return _react2.default.cloneElement(child, {
            target: '_blank'
          });
        })
      );
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          secondary = _props.secondary,
          children = _props.children;


      if (secondary) {
        return this.renderSecondarySolutions(children);
      }
      return this.renderPrimarySolutions(children);
    }
  }]);

  return ShellSolutionGroup;
}(_react.Component);

ShellSolutionGroup.defaultProps = {
  secondary: false
};
exports.default = ShellSolutionGroup;


ShellSolutionGroup.displayName = 'ShellSolutionGroup';