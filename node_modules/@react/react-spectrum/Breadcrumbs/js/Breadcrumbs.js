'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ChevronRightSmall = require('../../Icon/core/ChevronRightSmall');

var _ChevronRightSmall2 = _interopRequireDefault(_ChevronRightSmall);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _icon = require('../../utils/icon');

var _intl = require('../../utils/intl');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('../style/index.css');

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var intlMessages = {
  'cs-CZ': _interopRequireDefault(require('./../intl/cs-CZ.json')).default,
  'da-DK': _interopRequireDefault(require('./../intl/da-DK.json')).default,
  'de-DE': _interopRequireDefault(require('./../intl/de-DE.json')).default,
  'en-US': _interopRequireDefault(require('./../intl/en-US.json')).default,
  'es-ES': _interopRequireDefault(require('./../intl/es-ES.json')).default,
  'fi-FI': _interopRequireDefault(require('./../intl/fi-FI.json')).default,
  'fr-FR': _interopRequireDefault(require('./../intl/fr-FR.json')).default,
  'it-IT': _interopRequireDefault(require('./../intl/it-IT.json')).default,
  'ja-JP': _interopRequireDefault(require('./../intl/ja-JP.json')).default,
  'ko-KR': _interopRequireDefault(require('./../intl/ko-KR.json')).default,
  'nb-NO': _interopRequireDefault(require('./../intl/nb-NO.json')).default,
  'nl-NL': _interopRequireDefault(require('./../intl/nl-NL.json')).default,
  'pl-PL': _interopRequireDefault(require('./../intl/pl-PL.json')).default,
  'pt-BR': _interopRequireDefault(require('./../intl/pt-BR.json')).default,
  'ru-RU': _interopRequireDefault(require('./../intl/ru-RU.json')).default,
  'sv-SE': _interopRequireDefault(require('./../intl/sv-SE.json')).default,
  'tr-TR': _interopRequireDefault(require('./../intl/tr-TR.json')).default,
  'zh-CN': _interopRequireDefault(require('./../intl/zh-CN.json')).default,
  'zh-TW': _interopRequireDefault(require('./../intl/zh-TW.json')).default
};

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require('../../spectrum-css/breadcrumb/index.css');

  require('../../spectrum-css/breadcrumb/index-diff.css');
} else if (process.env.SCALE_LARGE) {
  require('../../spectrum-css/breadcrumb/index-lg.css');
} else {
  require('../../spectrum-css/breadcrumb/index.css');
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require('../../spectrum-css/breadcrumb/multiStops/light.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require('../../spectrum-css/breadcrumb/multiStops/dark.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require('../../spectrum-css/breadcrumb/multiStops/lightest.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require('../../spectrum-css/breadcrumb/multiStops/darkest.css');


var formatMessage = (0, _intl.messageFormatter)(intlMessages);

var Breadcrumbs = function (_React$Component) {
  _inherits(Breadcrumbs, _React$Component);

  function Breadcrumbs() {
    _classCallCheck(this, Breadcrumbs);

    return _possibleConstructorReturn(this, (Breadcrumbs.__proto__ || Object.getPrototypeOf(Breadcrumbs)).apply(this, arguments));
  }

  _createClass(Breadcrumbs, [{
    key: 'handleFocus',
    value: function handleFocus(e) {
      e.target.classList.add('focus-ring');
    }
  }, {
    key: 'handleBlur',
    value: function handleBlur(e) {
      e.target.classList.remove('focus-ring');
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          items = _props.items,
          icon = _props.icon,
          onBreadcrumbClick = _props.onBreadcrumbClick,
          className = _props.className,
          variant = _props.variant,
          ariaLevel = _props.ariaLevel,
          id = _props.id,
          otherProps = _objectWithoutProperties(_props, ['items', 'icon', 'onBreadcrumbClick', 'className', 'variant', 'ariaLevel', 'id']);

      var isTitleVariant = variant === Breadcrumbs.variant.TITLE;
      var isCurrent = function isCurrent(i) {
        return i === items.length - 1;
      };

      var getLinkMarkup = function getLinkMarkup(item, i) {
        var Element = !item.href ? 'div' : 'a';
        return _react2.default.createElement(
          Element,
          {
            className: 'spectrum-Breadcrumbs-itemLink',
            role: !item.href ? 'link' : null,
            href: !isCurrent(i) ? item.href : null,
            target: !isCurrent(i) && item.href ? '_self' : null,
            onClick: items.length > 1 && !isCurrent(i) ? onBreadcrumbClick.bind(null, item, items.length - i - 1) : undefined,
            onFocus: items.length > 1 && !isCurrent(i) ? _this2.handleFocus.bind(_this2) : null,
            onBlur: items.length > 1 && !isCurrent(i) ? _this2.handleBlur.bind(_this2) : null,
            'aria-current': isCurrent(i) ? 'page' : null,
            tabIndex: !item.href && !isCurrent(i) ? 0 : null },
          item.label
        );
      };

      if (!otherProps['aria-label']) {
        otherProps['aria-label'] = formatMessage('Breadcrumbs');
      }

      return _react2.default.createElement(
        'nav',
        {
          id: id,
          'aria-label': otherProps['aria-label'],
          'aria-labelledby': otherProps['aria-labelledby'] },
        (0, _icon.cloneIcon)(icon, { size: 'S', className: 'react-spectrum-Breadcrumbs-icon' }),
        _react2.default.createElement(
          'ul',
          {
            className: (0, _classnames2.default)('spectrum-Breadcrumbs', {
              'spectrum-Breadcrumbs--title': isTitleVariant
            }, className) },
          items.map(function (item, i) {
            return _react2.default.createElement(
              'li',
              { key: 'spectrum-Breadcrumb-' + i, className: 'spectrum-Breadcrumbs-item' },
              isCurrent(i) && isTitleVariant ? _react2.default.createElement(
                'h1',
                { className: 'spectrum-Heading--pageTitle', 'aria-level': ariaLevel },
                getLinkMarkup(item, i)
              ) : getLinkMarkup(item, i),
              !isCurrent(i) && _react2.default.createElement(_ChevronRightSmall2.default, { size: null, className: 'spectrum-Breadcrumbs-itemSeparator' })
            );
          })
        )
      );
    }
  }]);

  return Breadcrumbs;
}(_react2.default.Component);

Breadcrumbs.variant = {
  NONE: 'none',
  TITLE: 'title'
};
Breadcrumbs.propTypes = {
  /**
   * Array of item objects included in list of breadcrumbs.
   * Each item must have a label string property, which will serve as the rendered text for the breadcrumb.
   * Each item may also have an href string property, which should be a valid URL to open the breadcrumb location.
   */
  items: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.shape({
    href: _propTypes2.default.string,
    label: _propTypes2.default.string.isRequired
  }), _propTypes2.default.shape({
    label: _propTypes2.default.string.isRequired
  })])),

  /**
   * For best results, use a React Spectrum Icon
   */
  icon: _propTypes2.default.node,

  /**
   * Will set the last breadcrumb on a new line and give it a <h> tag
   */
  variant: _propTypes2.default.oneOf([Breadcrumbs.variant.NONE, Breadcrumbs.variant.TITLE]),

  /**
   * Will not change the appearance
   */
  ariaLevel: _propTypes2.default.number,

  /**
   * Called when a breadcrumb is clicked with an object containing the label of the clicked breadcrumb
   * @callback Breadcrumbs~onBreadcrumbClick
   * @param {Object} event - Event object
   * @param {string} event.label - label of breadcrumb clicked
   */
  onBreadcrumbClick: _propTypes2.default.func
};
Breadcrumbs.defaultProps = {
  items: [],
  icon: null,
  variant: Breadcrumbs.variant.NONE,
  ariaLevel: null,
  onBreadcrumbClick: function onBreadcrumbClick() {}
};
exports.default = Breadcrumbs;