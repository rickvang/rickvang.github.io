'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ShellHeaderActions = function (_Component) {
  _inherits(ShellHeaderActions, _Component);

  function ShellHeaderActions() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ShellHeaderActions);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ShellHeaderActions.__proto__ || Object.getPrototypeOf(ShellHeaderActions)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      openIndex: -1
    }, _this.handleMenuOpen = function (e, index) {
      _this.setState({ openIndex: index });
    }, _this.handleMenuClose = function () {
      _this.setState({ openIndex: -1 });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ShellHeaderActions, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          className = _props.className,
          children = _props.children,
          betaFeedback = _props.betaFeedback,
          otherProps = _objectWithoutProperties(_props, ['className', 'children', 'betaFeedback']);

      var openIndex = this.state.openIndex;


      var index = 0;

      return _react2.default.createElement(
        'div',
        _extends({
          className: (0, _classnames2.default)('coral3-Shell-header-actions', className)
        }, otherProps),
        betaFeedback,
        _react2.default.createElement(
          'div',
          { className: 'coral3-Shell-menubar' },
          children && _react2.default.Children.map(children, function (child) {
            if ((typeof child === 'undefined' ? 'undefined' : _typeof(child)) === 'object' && child && child.type) {
              // Is this a react element?
              var childProps = child.type.name === 'Button' ? {} : {
                onOpen: _this2.handleMenuOpen,
                onClose: _this2.handleMenuClose,
                defaultOpen: index === openIndex,
                index: index++
              };
              return _react2.default.cloneElement(child, childProps);
            }

            // Otherwise, the child is a string
            return child;
          })
        )
      );
    }
  }]);

  return ShellHeaderActions;
}(_react.Component);

exports.default = ShellHeaderActions;


ShellHeaderActions.displayName = 'ShellHeaderActions';