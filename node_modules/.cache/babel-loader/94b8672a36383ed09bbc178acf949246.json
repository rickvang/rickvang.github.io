{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _src = require('../src');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ReactReusableView = function (_ReusableView) {\n  _inherits(ReactReusableView, _ReusableView);\n\n  function ReactReusableView(type) {\n    _classCallCheck(this, ReactReusableView);\n\n    var _this = _possibleConstructorReturn(this, (ReactReusableView.__proto__ || Object.getPrototypeOf(ReactReusableView)).call(this));\n\n    _this.type = type;\n    _this.states = {};\n\n    _this.addClass(type);\n\n    return _this;\n  }\n\n  _createClass(ReactReusableView, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var element = void 0;\n\n      if (this.layoutInfo.type === 'item') {\n        element = this.collectionView.delegate.renderItemView(this.type, this.content);\n      } else {\n        element = this.collectionView.delegate.renderSupplementaryView(this.layoutInfo.type, this.layoutInfo.section, this.layoutInfo.index);\n      }\n\n      var props = Object.assign({\n        onLoad: this.onLoad.bind(this, this.content),\n        onResize: this.onLoad.bind(this, this.content),\n        collectionView: this.collectionView,\n        layoutInfo: this.layoutInfo,\n        reusableView: this,\n        ref: function ref(component) {\n          return _this2.component = component;\n        }\n      }, this.states);\n      element = _react2.default.cloneElement(element, props);\n      this.replaceChildren(element);\n    }\n  }, {\n    key: 'onLoad',\n    value: function onLoad(content) {\n      if (this.content === content && this.collectionView) {\n        var indexPath = this.collectionView.indexPathForView(this);\n\n        if (indexPath) {\n          this.collectionView.updateItemSize(indexPath);\n        }\n      }\n    }\n  }, {\n    key: 'applyLayoutInfo',\n    value: function applyLayoutInfo(layoutInfo) {\n      if (this.component && typeof this.component.componentWillLayout === 'function') {\n        this.component.componentWillLayout(layoutInfo);\n      }\n\n      _get(ReactReusableView.prototype.__proto__ || Object.getPrototypeOf(ReactReusableView.prototype), 'applyLayoutInfo', this).call(this, layoutInfo);\n    }\n  }, {\n    key: 'addState',\n    value: function addState(state) {\n      if (!this.states[state]) {\n        this.states[state] = true;\n        this.contentChanged = true;\n      }\n\n      _get(ReactReusableView.prototype.__proto__ || Object.getPrototypeOf(ReactReusableView.prototype), 'addState', this).call(this, state);\n    }\n  }, {\n    key: 'removeState',\n    value: function removeState(state) {\n      if (this.states[state]) {\n        delete this.states[state];\n        this.contentChanged = true;\n      }\n\n      _get(ReactReusableView.prototype.__proto__ || Object.getPrototypeOf(ReactReusableView.prototype), 'removeState', this).call(this, state);\n    }\n    /**\n     * Sets focus to rendered component element of reusable view.\n     */\n\n  }, {\n    key: 'focus',\n    value: function focus() {\n      if (this.component && typeof this.component.focus === 'function') {\n        this.component.focus();\n      } else {\n        _get(ReactReusableView.prototype.__proto__ || Object.getPrototypeOf(ReactReusableView.prototype), 'focus', this).call(this);\n      }\n    }\n  }]);\n\n  return ReactReusableView;\n}(_src.ReusableView);\n\nexports.default = ReactReusableView;","map":null,"metadata":{},"sourceType":"script"}