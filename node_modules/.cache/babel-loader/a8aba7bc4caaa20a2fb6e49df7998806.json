{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rvang/Desktop/Spectrum/testapp/src/Prototypes/TableClickAffordance/Proto3/Elements/TableView.js\";\nimport React from 'react';\nimport { TableView } from '@react/react-spectrum/TableView';\nimport ListDataSource from '@react/react-spectrum/ListDataSource';\nimport Switch from '@react/react-spectrum/Switch';\nvar columns = [{\n  title: 'Name',\n  key: 'name',\n  maxWidth: 200,\n  sortable: true // divider: true\n\n}, {\n  title: 'Habitat',\n  key: 'habitat',\n  maxWidth: 200,\n  sortable: true,\n  divider: true\n}, {\n  title: 'Notes',\n  key: 'notes',\n  minWidth: 300,\n  announce: false\n}];\n\nvar TableDS =\n/*#__PURE__*/\nfunction (_ListDataSource) {\n  _inherits(TableDS, _ListDataSource);\n\n  function TableDS() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableDS);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableDS)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.tableData = [{\n      'id': 1,\n      'name': 'Jacob',\n      'notes': \"-\",\n      'habitat': 'South Pole'\n    }, {\n      'id': 2,\n      'name': 'Ginger',\n      'notes': \"-\",\n      'habitat': 'South Pole'\n    }, {\n      'id': 3,\n      'name': 'Skipper',\n      'notes': \"-\",\n      'habitat': 'South Pole'\n    }, {\n      'id': 4,\n      'name': 'Ozzie',\n      'notes': \"-\",\n      'habitat': 'South Pole'\n    }, {\n      'id': 5,\n      'name': 'Maryann',\n      'notes': \"-\",\n      'habitat': 'South Pole'\n    }, {\n      'id': 6,\n      'name': 'Misty',\n      'notes': \"-\",\n      'habitat': 'South Pole'\n    }, {\n      'id': 7,\n      'name': 'Fred',\n      'notes': \"-\",\n      'habitat': 'South Pole'\n    }, {\n      'id': 8,\n      'name': 'Petal',\n      'notes': \"-\",\n      'habitat': 'South Pole'\n    }, {\n      'id': 9,\n      'name': 'Happy',\n      'notes': \"-\",\n      'habitat': 'South Pole'\n    }, {\n      'id': 10,\n      'name': 'African wild cat',\n      'notes': \"-\",\n      'habitat': 'South Pole'\n    }];\n    return _this;\n  }\n\n  _createClass(TableDS, [{\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(sortDescriptor) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = this.tableData;\n\n                if (sortDescriptor) {\n                  data.sort(function (a, b) {\n                    return a[sortDescriptor.column.key] < b[sortDescriptor.column.key] ? -sortDescriptor.direction : sortDescriptor.direction;\n                  });\n                }\n\n                return _context.abrupt(\"return\", data);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function load(_x) {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n  }, {\n    key: \"loadMore\",\n    value: function () {\n      var _loadMore = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", new Promise(function (resolve) {\n                  setTimeout(function () {\n                    resolve(_this2.data);\n                  }, 2000);\n                }));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadMore() {\n        return _loadMore.apply(this, arguments);\n      }\n\n      return loadMore;\n    }()\n  }]);\n\n  return TableDS;\n}(ListDataSource);\n\nfunction renderCell(column, data, rowFocused) {\n  if (column.key === 'enabled') {\n    // Determine how to set tabIndex of Switch based on focused state of row.\n    // var tabIndex = rowFocused ? 0 : -1;\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Penguin\"); // <Switch\n    //   defaultChecked={data[column.key] == null ? data : data[column.key]}\n    //   onChange={() => {}}\n    //   tabIndex={tabIndex}\n    //   title={column.title}/>\n    // );\n  }\n\n  return React.createElement(\"span\", {\n    className: column.key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, '' + (data[column.key] || data));\n}\n\nvar ProtoTableView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProtoTableView, _React$Component);\n\n  _createClass(ProtoTableView, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          height: \"370px\",\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(TableView, {\n        columns: columns,\n        dataSource: new TableDS(),\n        renderCell: renderCell,\n        allowsSelection: false,\n        allowsMultipleSelection: true // canReorderItems={true}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  function ProtoTableView() {\n    _classCallCheck(this, ProtoTableView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProtoTableView).call(this));\n  }\n\n  _createClass(ProtoTableView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // debugger\n      // refresh to get content\n      var resizeTable = new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          window.dispatchEvent(new Event('resize'));\n          resolve(console.log('promRes'));\n        }, 100);\n      });\n      resizeTable.then(function () {\n        setTimeout(function () {\n          //call a hidden button created by ProtoScrubber.js to clear the page\n          document.getElementById('PrototypeScrubber').click(); //Add Custom Functionality here----------------------------------------- \n\n          var getEachRow = document.querySelectorAll('.spectrum-Table-cell[aria-colindex=\"1\"], .spectrum-Table-cell[aria-colindex=\"2\"],.spectrum-Table-cell[aria-colindex=\"4\"], .spectrum-Table-cell[aria-colindex=\"3\"]');\n          Array.from(getEachRow).forEach(function (el) {\n            el.onclick = function () {\n              //Toggle Checkbox\n              console.log('clickyclack'); // if (('input').checked === false) {\n\n              console.log(el);\n\n              if (el.parentElement.classList.contains('is-selected')) {\n                el.parentElement.classList.remove('is-selected');\n                document.querySelector('.Container-rRail').style = 'max-width:0;border:none;';\n                window.dispatchEvent(new Event('resize'));\n              } else {\n                el.parentElement.classList.add('is-selected');\n                document.querySelector('.Container-rRail').style = 'max-width:300px;border-left:1px solid #c1c1c1;padding: 12px';\n                window.dispatchEvent(new Event('resize'));\n              }\n\n              ; // Event.stopPropagation();\n              // el.parentElement\n              //   document.querySelector('.Container-rRail').style = 'max-width:0;border:none;';\n              //   window.dispatchEvent(new Event('resize'));\n              // } else {\n              //   document.querySelector('.Container-rRail').style = 'max-width:300px;border-left:1px solid #c1c1c1;padding: 12px';\n              //   window.dispatchEvent(new Event('resize'));\n              // }\n            };\n          });\n          var getNameElements = document.querySelectorAll('.spectrum-Table-cell .name');\n          Array.from(getNameElements).forEach(function (el) {\n            el.style.color = \"rgb(20, 115, 230)\";\n            el.cursor = \"pointer\";\n\n            el.onclick = function () {\n              window.location.assign(\"/proto3\");\n            };\n          }); //Makes the Table resize automatically\n\n          document.querySelector('.spectrum--light .spectrum-Table-body').firstChild.style.width = '100%'; // End Add Custom Functionality----------------------------------------\n        }, 200);\n      });\n    }\n  }]);\n\n  return ProtoTableView;\n}(React.Component);\n\nexport { ProtoTableView as default };","map":{"version":3,"sources":["/Users/rvang/Desktop/Spectrum/testapp/src/Prototypes/TableClickAffordance/Proto3/Elements/TableView.js"],"names":["React","TableView","ListDataSource","Switch","columns","title","key","maxWidth","sortable","divider","minWidth","announce","TableDS","tableData","sortDescriptor","data","sort","a","b","column","direction","Promise","resolve","setTimeout","renderCell","rowFocused","ProtoTableView","height","width","resizeTable","reject","window","dispatchEvent","Event","console","log","then","document","getElementById","click","getEachRow","querySelectorAll","Array","from","forEach","el","onclick","parentElement","classList","contains","remove","querySelector","style","add","getNameElements","color","cursor","location","assign","firstChild","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {TableView} from '@react/react-spectrum/TableView';\nimport ListDataSource from '@react/react-spectrum/ListDataSource';\nimport Switch from '@react/react-spectrum/Switch';\n\n\n\n\nlet columns = [\n  {\n    title: 'Name',\n    key: 'name',\n    maxWidth: 200,\n    sortable: true,\n    // divider: true\n  },\n  {\n    title: 'Habitat',\n    key: 'habitat',\n    maxWidth: 200,\n    sortable: true,\n    divider: true\n\n  },\n  {\n    title: 'Notes',\n    key: 'notes',\n    minWidth: 300,\n    announce: false\n  },\n];\n\nclass TableDS extends ListDataSource {\n  tableData = [\n    { 'id': 1, 'name': 'Jacob', 'notes': \"-\", 'habitat': 'South Pole' },\n    { 'id': 2, 'name': 'Ginger', 'notes': \"-\", 'habitat': 'South Pole' },\n    { 'id': 3, 'name': 'Skipper', 'notes': \"-\", 'habitat': 'South Pole' },\n    { 'id': 4, 'name': 'Ozzie', 'notes': \"-\", 'habitat': 'South Pole' },\n    { 'id': 5, 'name': 'Maryann', 'notes': \"-\", 'habitat': 'South Pole' },\n    { 'id': 6, 'name': 'Misty', 'notes': \"-\", 'habitat': 'South Pole' },\n    { 'id': 7, 'name': 'Fred', 'notes': \"-\", 'habitat': 'South Pole' },\n    { 'id': 8, 'name': 'Petal', 'notes': \"-\", 'habitat': 'South Pole' },\n    { 'id': 9, 'name': 'Happy', 'notes': \"-\", 'habitat': 'South Pole' },\n    { 'id': 10, 'name': 'African wild cat', 'notes': \"-\", 'habitat': 'South Pole' },\n  ]\n\n\n  async load(sortDescriptor) {\n    let data = this.tableData;\n    if (sortDescriptor) {\n      data.sort((a, b) => a[sortDescriptor.column.key] < b[sortDescriptor.column.key] ? -sortDescriptor.direction : sortDescriptor.direction);\n    }\n    return data;\n  }\n\n  async loadMore() {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(this.data);\n      }, 2000);\n    });\n  }\n}\n\n\nfunction renderCell(column, data, rowFocused) {\n  if (column.key === 'enabled') {\n    // Determine how to set tabIndex of Switch based on focused state of row.\n    // var tabIndex = rowFocused ? 0 : -1;\n    return <span>Penguin</span>\n      // <Switch\n      //   defaultChecked={data[column.key] == null ? data : data[column.key]}\n      //   onChange={() => {}}\n      //   tabIndex={tabIndex}\n      //   title={column.title}/>\n    // );\n  }\n\n  return <span className={column.key}>{'' + (data[column.key] || data)}</span>;\n}\n  \n\nexport default class ProtoTableView extends React.Component {\n  \n  render(){\n      return (\n        <div style = {{height:\"370px\", width:\"100%\"}}>\n        <TableView\n        columns={columns}\n        dataSource={new TableDS()}\n        renderCell={renderCell}\n        allowsSelection={false}\n        allowsMultipleSelection={true}\n        // canReorderItems={true}\n    \n        />\n        </div>\n      )\n    }\n    constructor(){\n      super();\n    }\n\n    componentDidMount() {\n// debugger\n      // refresh to get content\n      let resizeTable = new Promise ((resolve, reject) => {\n        setTimeout(() => {\n          window.dispatchEvent(new Event('resize'));\n          resolve (console.log('promRes'))\n        }, 100);\n      })\n      resizeTable.then(()=>{\n        setTimeout(() => {\n          //call a hidden button created by ProtoScrubber.js to clear the page\n          document.getElementById('PrototypeScrubber').click();\n\n          //Add Custom Functionality here----------------------------------------- \n\n\n\n\n          const getEachRow = document.querySelectorAll('.spectrum-Table-cell[aria-colindex=\"1\"], .spectrum-Table-cell[aria-colindex=\"2\"],.spectrum-Table-cell[aria-colindex=\"4\"], .spectrum-Table-cell[aria-colindex=\"3\"]')\n\n          Array.from(getEachRow).forEach(\n            (el) => {\n              el.onclick = () => {\n                //Toggle Checkbox\n                console.log('clickyclack')\n                // if (('input').checked === false) {\n                console.log(el);\n                \n                if (el.parentElement.classList.contains('is-selected')){\n                  el.parentElement.classList.remove('is-selected');\n                     document.querySelector('.Container-rRail').style = 'max-width:0;border:none;';\n                  window.dispatchEvent(new Event('resize'));\n                }else{\n                  el.parentElement.classList.add('is-selected');\n                  document.querySelector('.Container-rRail').style = 'max-width:300px;border-left:1px solid #c1c1c1;padding: 12px';\n                  window.dispatchEvent(new Event('resize'));\n                };\n                \n                // Event.stopPropagation();\n\n                // el.parentElement\n                //   document.querySelector('.Container-rRail').style = 'max-width:0;border:none;';\n                //   window.dispatchEvent(new Event('resize'));\n                // } else {\n                //   document.querySelector('.Container-rRail').style = 'max-width:300px;border-left:1px solid #c1c1c1;padding: 12px';\n                //   window.dispatchEvent(new Event('resize'));\n                // }\n              }\n            }\n          )\n\n          const getNameElements = document.querySelectorAll('.spectrum-Table-cell .name');\n\n          Array.from(getNameElements).forEach(\n            (el) => {\n              el.style.color = \"rgb(20, 115, 230)\";\n              el.cursor = \"pointer\";\n              el.onclick = () => {\n                window.location.assign(\"/proto3\");\n                \n              }\n            }\n          )\n\n\n          //Makes the Table resize automatically\n          document.querySelector('.spectrum--light .spectrum-Table-body').firstChild.style.width = '100%';\n\n          // End Add Custom Functionality----------------------------------------\n\n        }, 200);\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}