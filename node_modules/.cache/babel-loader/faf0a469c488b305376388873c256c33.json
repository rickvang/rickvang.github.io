{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _transition = require('../../utils/transition');\n\nvar _Portal = require('react-overlays/lib/Portal');\n\nvar _Portal2 = _interopRequireDefault(_Portal);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _RootCloseWrapper = require('react-overlays/lib/RootCloseWrapper');\n\nvar _RootCloseWrapper2 = _interopRequireDefault(_RootCloseWrapper);\n\nrequire('../style/ShellMenu.css');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ShellMenu = function (_Component) {\n  _inherits(ShellMenu, _Component);\n\n  function ShellMenu(props) {\n    _classCallCheck(this, ShellMenu);\n\n    var _this = _possibleConstructorReturn(this, (ShellMenu.__proto__ || Object.getPrototypeOf(ShellMenu)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var open = props.open,\n        defaultOpen = props.defaultOpen;\n    _this.state = {\n      open: open !== undefined ? open : defaultOpen,\n      visible: false\n    };\n    return _this;\n  }\n\n  _createClass(ShellMenu, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if ('open' in nextProps) {\n        this.setState({\n          open: nextProps.open\n        });\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.menuRef) {\n        this.menuRef.removeEventListener((0, _transition.getTransitionEvent)(), this.handleTransitionEnd);\n      }\n    }\n  }, {\n    key: 'bindMenuRef',\n    value: function bindMenuRef(ref) {\n      if (this.menuRef) {\n        this.menuRef.removeEventListener((0, _transition.getTransitionEvent)(), this.handleTransitionEnd);\n      }\n\n      this.menuRef = ref;\n\n      if (this.menuRef) {\n        this.menuRef.addEventListener((0, _transition.getTransitionEvent)(), this.handleTransitionEnd);\n      }\n    }\n  }, {\n    key: 'setOpen',\n    value: function setOpen(open) {\n      if (!('open' in this.props)) {\n        this.setState({\n          open: open\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          placement = _props.placement,\n          animateFrom = _props.animateFrom,\n          full = _props.full,\n          dark = _props.dark,\n          top = _props.top,\n          target = _props.target,\n          children = _props.children;\n      var _state = this.state,\n          open = _state.open,\n          visible = _state.visible;\n      var zIndex = void 0;\n\n      if (open) {\n        zIndex = top ? 10018 : 10015;\n      } else {\n        zIndex = top ? 10017 : 10010;\n      }\n\n      return _react2.default.createElement('span', null, _react2.default.createElement('span', {\n        ref: function ref(el) {\n          _this2.targetRef = el;\n        }\n      }, _react2.default.cloneElement(target, {\n        onClick: this.handleTargetClick\n      })), _react2.default.createElement(_Portal2.default, null, _react2.default.createElement(_RootCloseWrapper2.default, {\n        onRootClose: this.handleMenuClose,\n        disabled: !open\n      }, _react2.default.createElement('div', {\n        ref: function ref(el) {\n          _this2.bindMenuRef(el);\n        },\n        style: {\n          zIndex: zIndex\n        },\n        className: (0, _classnames2.default)('coral3-Shell-menu', 'coral3-Shell-menu--placement-' + placement, 'coral3-Shell-menu--from-' + animateFrom, {\n          'coral3-Shell-menu--full': full,\n          'is-open': open,\n          'coral--dark': dark,\n          'is-visible': open || visible\n        })\n      }, children))));\n    }\n  }]);\n\n  return ShellMenu;\n}(_react.Component);\n\nShellMenu.defaultProps = {\n  defaultOpen: false,\n  placement: 'right',\n  // top, right\n  animateFrom: 'right',\n  // top, right\n  full: false,\n  dark: false,\n  top: false,\n  // if true, appears on top of the other menus\n  onOpen: function onOpen() {},\n  onClose: function onClose() {},\n  onVisible: function onVisible() {},\n  onHidden: function onHidden() {}\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.handleTransitionEnd = function (e) {\n    if (e.propertyName !== 'transform') {\n      return;\n    }\n\n    var _props2 = _this3.props,\n        onVisible = _props2.onVisible,\n        onHidden = _props2.onHidden;\n    var open = _this3.state.open;\n\n    if (open) {\n      onVisible();\n    } else {\n      onHidden();\n    }\n\n    _this3.setState({\n      visible: open\n    });\n  };\n\n  this.handleMenuToggle = function (e) {\n    var open = _this3.state.open;\n\n    if (open) {\n      _this3.handleMenuClose(e);\n    } else {\n      _this3.handleMenuOpen(e);\n    }\n  };\n\n  this.handleTargetClick = function (e) {\n    var open = _this3.state.open; // If it's already open, close it.\n\n    if (open) {\n      _this3.handleMenuClose();\n    } else {\n      _this3.handleMenuOpen();\n    }\n\n    e.preventDefault();\n  };\n\n  this.handleMenuOpen = function () {\n    var _props3 = _this3.props,\n        onOpen = _props3.onOpen,\n        index = _props3.index;\n\n    _this3.setOpen(true);\n\n    onOpen(index);\n  };\n\n  this.handleMenuClose = function () {\n    var _props4 = _this3.props,\n        onClose = _props4.onClose,\n        index = _props4.index;\n\n    _this3.setOpen(false);\n\n    onClose(index);\n  };\n};\n\nexports.default = ShellMenu;\nShellMenu.displayName = 'ShellMenu';","map":null,"metadata":{},"sourceType":"script"}