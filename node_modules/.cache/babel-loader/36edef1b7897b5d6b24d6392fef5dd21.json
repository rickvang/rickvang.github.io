{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = tween;\n\nvar _Point = require('./Point');\n\nvar _Point2 = _interopRequireDefault(_Point);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // use high res timer if available\n\n\nvar perf = global.performance;\nvar perfNow = perf && (perf.now || perf.webkitNow || perf.msNow || perf.mozNow);\nvar getTime = perfNow ? perfNow.bind(perf) : function () {\n  return Date.now ? Date.now() : new Date().getTime();\n}; // check if we need to get the time each frame (see below)\n\nvar fixTs = false;\n(0, _raf2.default)(function (t) {\n  fixTs = t > 1e12 !== getTime() > 1e12;\n});\n\nfunction tween(begin, end, duration, ease, fn) {\n  var canceled = false;\n  var raf_id = void 0;\n  var promise = new Promise(function (resolve) {\n    var start = getTime();\n    var diffX = end.x - begin.x;\n    var diffY = end.y - begin.y;\n    raf_id = (0, _raf2.default)(function run(t) {\n      // if we're using a high res timer, make sure timestamp is not the old epoch-based value.\n      // http://updates.html5rocks.com/2012/05/requestAnimationFrame-API-now-with-sub-millisecond-precision\n      if (fixTs) {\n        t = getTime();\n      } // check if we're done\n\n\n      var delta = t - start;\n\n      if (delta > duration) {\n        fn(end);\n        resolve();\n      } else {\n        // call frame callback after computing eased time and get the next frame\n        var proceed = fn(new _Point2.default(begin.x + diffX * ease(delta / duration), begin.y + diffY * ease(delta / duration)));\n\n        if (proceed !== false && !canceled) {\n          raf_id = (0, _raf2.default)(run);\n        }\n      }\n    });\n  });\n\n  promise.cancel = function () {\n    canceled = true;\n\n    _raf2.default.cancel(raf_id);\n  };\n\n  return promise;\n} // easing functions\n\n\ntween.linear = function (t) {\n  return t;\n};\n\ntween.easeOut = function (t) {\n  return Math.sin(t * Math.PI / 2);\n};","map":null,"metadata":{},"sourceType":"script"}