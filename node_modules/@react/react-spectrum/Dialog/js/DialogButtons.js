'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = DialogButtons;

var _Button = require('../../Button');

var _Button2 = _interopRequireDefault(_Button);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('../style/index.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var BUTTON_VARIANTS = {
  confirmation: 'cta',
  information: 'primary',
  error: 'primary',
  destructive: 'warning'
};

function DialogButtons(_ref) {
  var autoFocusButton = _ref.autoFocusButton,
      confirmLabel = _ref.confirmLabel,
      secondaryLabel = _ref.secondaryLabel,
      cancelLabel = _ref.cancelLabel,
      confirmDisabled = _ref.confirmDisabled,
      onConfirm = _ref.onConfirm,
      onCancel = _ref.onCancel,
      className = _ref.className,
      variant = _ref.variant,
      otherProps = _objectWithoutProperties(_ref, ['autoFocusButton', 'confirmLabel', 'secondaryLabel', 'cancelLabel', 'confirmDisabled', 'onConfirm', 'onCancel', 'className', 'variant']);

  var confirmVariant = BUTTON_VARIANTS[variant] || 'primary';

  return _react2.default.createElement(
    'div',
    {
      className: (0, _classnames2.default)('react-spectrum-Dialog-buttons', className) },
    cancelLabel && _react2.default.createElement(_Button2.default, {
      variant: 'secondary',
      label: cancelLabel,
      onClick: onCancel,
      autoFocus: autoFocusButton === 'cancel' }),
    secondaryLabel && _react2.default.createElement(_Button2.default, {
      variant: 'secondary',
      label: secondaryLabel,
      onClick: onConfirm ? onConfirm.bind(null, 'secondary') : null,
      autoFocus: autoFocusButton === 'secondary',
      disabled: confirmDisabled || null }),
    confirmLabel && _react2.default.createElement(_Button2.default, {
      variant: confirmVariant,
      label: confirmLabel,
      onClick: onConfirm ? onConfirm.bind(null, 'primary') : null,
      autoFocus: autoFocusButton === 'confirm',
      disabled: confirmDisabled || null })
  );
}