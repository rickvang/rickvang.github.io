{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class;\n\nvar _autobindDecorator = require('autobind-decorator');\n\nvar _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _CollectionView = require('../../utils/CollectionView');\n\nvar _CollectionView2 = _interopRequireDefault(_CollectionView);\n\nvar _createId = require('../../utils/createId');\n\nvar _createId2 = _interopRequireDefault(_createId);\n\nvar _collectionView = require('@react/collection-view');\n\nvar _ListDataSource = require('../../ListDataSource');\n\nvar _ListDataSource2 = _interopRequireDefault(_ListDataSource);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _TableCell = require('./TableCell');\n\nvar _TableCell2 = _interopRequireDefault(_TableCell);\n\nvar _TableRow = require('./TableRow');\n\nvar _TableRow2 = _interopRequireDefault(_TableRow);\n\nvar _TableViewDataSource = require('./TableViewDataSource');\n\nvar _TableViewDataSource2 = _interopRequireDefault(_TableViewDataSource);\n\nvar _TableViewLayout = require('./TableViewLayout');\n\nvar _TableViewLayout2 = _interopRequireDefault(_TableViewLayout);\n\nrequire('../style/index.css');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nif (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {\n  require('../../spectrum-css/table/index.css');\n\n  require('../../spectrum-css/table/index-diff.css');\n} else if (process.env.SCALE_LARGE) {\n  require('../../spectrum-css/table/index-lg.css');\n} else {\n  require('../../spectrum-css/table/index.css');\n}\n\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require('../../spectrum-css/table/multiStops/light.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require('../../spectrum-css/table/multiStops/dark.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require('../../spectrum-css/table/multiStops/lightest.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require('../../spectrum-css/table/multiStops/darkest.css');\n\nvar columnShape = _propTypes2.default.shape({\n  title: _propTypes2.default.string.isRequired,\n  sortable: _propTypes2.default.bool,\n  width: _propTypes2.default.number,\n  minWidth: _propTypes2.default.number,\n  maxWidth: _propTypes2.default.number,\n  // resizable: PropTypes.bool,\n  divider: _propTypes2.default.bool,\n  align: _propTypes2.default.oneOf(['left', 'center', 'right'])\n});\n\nvar sortDescriptorShape = _propTypes2.default.shape({\n  column: columnShape.isRequired,\n  direction: _propTypes2.default.oneOf([-1, 1]).isRequired\n});\n\nvar TableView = (0, _autobindDecorator2.default)(_class = function (_Component) {\n  _inherits(TableView, _Component);\n\n  function TableView(props) {\n    _classCallCheck(this, TableView);\n\n    var _this = _possibleConstructorReturn(this, (TableView.__proto__ || Object.getPrototypeOf(TableView)).call(this, props));\n\n    _this.tableViewId = (0, _createId2.default)();\n    var rowHeight = Math.max(48, Math.min(72, props.rowHeight));\n    _this.layout = new _TableViewLayout2.default({\n      rowHeight: rowHeight\n    });\n    _this.state = {\n      columns: _this.props.columns || _this.props.defaultColumns || _this.props.dataSource.getColumns(),\n      sortDescriptor: _this.props.sortDescriptor || _this.props.defaultSortDescriptor || _this.props.dataSource.sortColumn && {\n        // backward compatibility\n        column: _this.props.dataSource.sortColumn,\n        direction: _this.props.dataSource.sortDirection\n      }\n    };\n    return _this;\n  }\n\n  _createClass(TableView, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(props) {\n      if (props.columns && props.columns !== this.props.columns) {\n        this.setState({\n          columns: this.props.columns\n        });\n      }\n\n      if (props.sortDescriptor && props.sortDescriptor !== this.props.sortDescriptor) {\n        this.setState({\n          sortDescriptor: props.sortDescriptor\n        });\n      }\n    }\n  }, {\n    key: 'setSelectAll',\n    value: function setSelectAll(select) {\n      if (select) {\n        this.collection.selectAll();\n      } else {\n        this.collection.clearSelection();\n      }\n    }\n  }, {\n    key: 'renderHeader',\n    value: function renderHeader() {\n      var _props = this.props,\n          _props$id = _props.id,\n          id = _props$id === undefined ? this.tableViewId : _props$id,\n          allowsMultipleSelection = _props.allowsMultipleSelection,\n          allowsSelection = _props.allowsSelection;\n      var numRows = this.getRowCount();\n      var allItemsSelected = this.collection && this.collection.selectedIndexPaths.length === numRows && numRows > 0;\n      return _react2.default.createElement('div', {\n        role: 'rowgroup'\n      }, _react2.default.createElement(_TableRow2.default, {\n        tableId: id,\n        isHeaderRow: true,\n        columns: this.state.columns,\n        renderCell: this.renderColumnHeader,\n        allowsMultipleSelection: allowsSelection && allowsMultipleSelection,\n        allowsSelection: allowsSelection,\n        selected: allItemsSelected,\n        onSelectChange: this.setSelectAll,\n        onCellClick: this.sortByColumn,\n        collectionView: this.collection\n      }));\n    }\n  }, {\n    key: 'renderItemView',\n    value: function renderItemView(type, data) {\n      var _props2 = this.props,\n          _props2$id = _props2.id,\n          id = _props2$id === undefined ? this.tableViewId : _props2$id,\n          allowsMultipleSelection = _props2.allowsMultipleSelection,\n          allowsSelection = _props2.allowsSelection,\n          onCellClick = _props2.onCellClick,\n          onCellDoubleClick = _props2.onCellDoubleClick;\n      return _react2.default.createElement(_TableRow2.default, {\n        tableId: id,\n        columns: this.state.columns,\n        renderCell: this.renderCell.bind(this, data),\n        allowsMultipleSelection: allowsSelection && allowsMultipleSelection,\n        allowsSelection: allowsSelection,\n        onCellClick: onCellClick,\n        onCellDoubleClick: onCellDoubleClick,\n        collectionView: this.collection\n      });\n    }\n  }, {\n    key: 'renderColumnHeader',\n    value: function renderColumnHeader(column, columnIndex, rowFocused) {\n      var _props3 = this.props,\n          allowsSelection = _props3.allowsSelection,\n          allowsMultipleSelection = _props3.allowsMultipleSelection,\n          renderColumnHeader = _props3.renderColumnHeader;\n      return _react2.default.createElement(_TableCell2.default, {\n        isHeaderRow: true,\n        column: column,\n        sortDir: this.state.sortDescriptor && this.state.sortDescriptor.column === column ? this.state.sortDescriptor.direction : null,\n        allowsMultipleSelection: allowsSelection && allowsMultipleSelection,\n        rowFocused: rowFocused\n      }, renderColumnHeader ? renderColumnHeader(column) : column.title);\n    }\n  }, {\n    key: 'renderCell',\n    value: function renderCell(data, column, columnIndex, rowFocused) {\n      // For backwards compatibility with TableViewDataSource, support\n      // getting per-cell data instead of per-row data.\n      if (this.props.dataSource instanceof _TableViewDataSource2.default) {\n        data = data[columnIndex];\n      }\n\n      return _react2.default.createElement(_TableCell2.default, {\n        column: column,\n        'aria-colindex': columnIndex,\n        rowFocused: rowFocused\n      }, this.props.renderCell(column, data, rowFocused));\n    }\n  }, {\n    key: 'renderSupplementaryView',\n    value: function renderSupplementaryView(type) {\n      if (type === 'insertion-indicator') {\n        return _react2.default.createElement('div', {\n          className: 'react-spectrum-TableView-insertionIndicator'\n        });\n      }\n\n      return _react2.default.createElement('div', null);\n    }\n  }, {\n    key: 'sortByColumn',\n    value: function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(column) {\n        var dir, sortDescriptor;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (column.sortable) {\n                  dir = TableView.SORT_ASCENDING;\n\n                  if (this.state.sortDescriptor && this.state.sortDescriptor.column === column) {\n                    dir = -this.state.sortDescriptor.direction;\n                  }\n\n                  sortDescriptor = {\n                    column: column,\n                    direction: dir\n                  };\n\n                  if (this.props.onSortChange) {\n                    this.props.onSortChange(sortDescriptor);\n                  }\n\n                  if (!('sortDescriptor' in this.props)) {\n                    this.setState({\n                      sortDescriptor: sortDescriptor\n                    });\n                  }\n                }\n\n              case 1:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function sortByColumn(_x) {\n        return _ref.apply(this, arguments);\n      }\n\n      return sortByColumn;\n    }()\n  }, {\n    key: 'onSelectionChange',\n    value: function onSelectionChange(selectedIndexPaths) {\n      // Force update to properly set the state of the Select All checkbox\n      this.forceUpdate();\n\n      if (this.props.onSelectionChange) {\n        this.props.onSelectionChange(selectedIndexPaths);\n      }\n    }\n  }, {\n    key: 'getRowCount',\n    value: function getRowCount() {\n      var dataSource = this.props.dataSource;\n      var count = 0;\n      var numSections = dataSource.getNumberOfSections();\n\n      for (var section = 0; section < numSections; section++) {\n        count += dataSource.getSectionLength(section);\n      }\n\n      return count;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props4 = this.props,\n          allowsMultipleSelection = _props4.allowsMultipleSelection,\n          allowsSelection = _props4.allowsSelection,\n          className = _props4.className,\n          dataSource = _props4.dataSource,\n          _props4$id = _props4.id,\n          id = _props4$id === undefined ? this.tableViewId : _props4$id,\n          quiet = _props4.quiet,\n          otherProps = _objectWithoutProperties(_props4, ['allowsMultipleSelection', 'allowsSelection', 'className', 'dataSource', 'id', 'quiet']);\n\n      var tableClasses = (0, _classnames2.default)(className, 'react-spectrum-TableView', 'spectrum-Table', {\n        'spectrum-Table--quiet': quiet\n      });\n      var rowCount = this.getRowCount(0) + 1;\n      var colCount = this.state.columns.length;\n\n      if (allowsSelection) {\n        colCount += 1;\n      }\n\n      return _react2.default.createElement('div', {\n        id: id,\n        className: tableClasses,\n        role: 'grid',\n        'aria-rowcount': rowCount,\n        'aria-colcount': colCount,\n        'aria-label': otherProps['aria-label'],\n        'aria-labelledby': otherProps['aria-labelledby'],\n        'aria-describedby': otherProps['aria-describedby'],\n        'aria-multiselectable': allowsSelection && allowsMultipleSelection || null\n      }, this.renderHeader(), _react2.default.createElement(_CollectionView2.default, _extends({}, this.props, {\n        ref: function ref(c) {\n          return _this2.collection = c ? c.collection : null;\n        },\n        role: 'rowgroup',\n        className: 'spectrum-Table-body react-spectrum-TableView-body',\n        layout: this.layout,\n        dataSource: dataSource,\n        renderItemView: this.renderItemView,\n        renderSupplementaryView: this.renderSupplementaryView,\n        canSelectItems: allowsSelection,\n        allowsMultipleSelection: allowsMultipleSelection,\n        sortDescriptor: this.state.sortDescriptor,\n        selectionMode: 'toggle',\n        keyboardMode: 'focus',\n        onSelectionChanged: this.onSelectionChange\n      })));\n    }\n  }]);\n\n  return TableView;\n}(_react.Component)) || _class;\n\nTableView.propTypes = {\n  /** The columns to display in the table view (controlled). */\n  columns: _propTypes2.default.arrayOf(columnShape),\n\n  /** The initial columns to display in the table view (uncontrolled). */\n  defaultColumns: _propTypes2.default.arrayOf(columnShape),\n\n  /** The datasource for the table view. Should be a subclass of `ListDataSource`. */\n  dataSource: _propTypes2.default.instanceOf(_ListDataSource2.default).isRequired,\n\n  /** A function which renders a cell. Passed a column object and cell data. */\n  renderCell: _propTypes2.default.func.isRequired,\n\n  /** An optional function which overrides the rendering for a column header. Passed the column object. */\n  renderColumnHeader: _propTypes2.default.func,\n\n  /** An optional function which is called to render the contents of the table body when there are no rows. */\n  renderEmptyView: _propTypes2.default.func,\n\n  /** Whether to allow the user to select items */\n  allowsSelection: _propTypes2.default.bool,\n\n  /** Whether to allow multiple selection of items */\n  allowsMultipleSelection: _propTypes2.default.bool,\n\n  /** A function that is called when the selection changes. Passed an IndexPathSet object. */\n  onSelectionChange: _propTypes2.default.func,\n\n  /** Sets the selected rows. Should be an IndexPathSet object or an array of IndexPaths. */\n  selectedIndexPaths: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.instanceOf(_collectionView.IndexPath)), _propTypes2.default.instanceOf(_collectionView.IndexPathSet)]),\n\n  /** The sort column and direction (controlled). */\n  sortDescriptor: sortDescriptorShape,\n\n  /** The initial sort column and direction (uncontrolled). */\n  defaultSortDescriptor: sortDescriptorShape,\n\n  /** A function that is called when the sort descriptor changes. */\n  onSortChange: _propTypes2.default.func,\n\n  /** A function that is called when a cell is clicked. Passed a column object and row index. */\n  onCellClick: _propTypes2.default.func,\n\n  /* A function that is called when a cell is double clicked. Passed a column object and row index. */\n  onCellDoubleClick: _propTypes2.default.func,\n\n  /** Whether to use the spectrum quiet variant. */\n  quiet: _propTypes2.default.bool,\n\n  /** The height each row should be in the table. It has a maximum of 72 */\n  rowHeight: _propTypes2.default.number,\n\n  /** Whether the user can drag rows from the table. */\n  canDragItems: _propTypes2.default.bool,\n\n  /** A function which renders the view to display under the cursor during drag and drop. */\n  renderDragView: _propTypes2.default.func,\n\n  /**\n   * Whether the TableView accepts drops.\n   * If `true`, the table accepts all types of drops. Alternatively,\n   * it can be set to an array of accepted drop types.\n   */\n  acceptsDrops: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.arrayOf(_propTypes2.default.string)]),\n\n  /**\n   * Whether drops should appear on top of rows, or between them. If you want to customize this\n   * or mix the modes, you can override `getDropTarget` on the data source.\n   */\n  dropPosition: _propTypes2.default.oneOf(['on', 'between'])\n};\nTableView.defaultProps = {\n  allowsSelection: true,\n  allowsMultipleSelection: true,\n  canDragItems: false,\n  acceptsDrops: false,\n  dropPosition: 'between'\n};\nTableView.SORT_ASCENDING = 1;\nTableView.SORT_DESCENDING = -1;\nexports.default = TableView;","map":null,"metadata":{},"sourceType":"script"}