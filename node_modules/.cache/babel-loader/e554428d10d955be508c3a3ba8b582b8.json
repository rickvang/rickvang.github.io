{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d = require('d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _d3Timeline = require('../lib/d3-timeline/src/d3-timeline.js');\n\nvar _d3Timeline2 = _interopRequireDefault(_d3Timeline);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Package is not published on NPM and is included manually\n// Libary modified to decorate passed in d3 object\n\n\n(0, _d3Timeline2.default)(d3);\n\nvar Timeline = function (_React$Component) {\n  _inherits(Timeline, _React$Component);\n\n  function Timeline() {\n    _classCallCheck(this, Timeline);\n\n    return _possibleConstructorReturn(this, (Timeline.__proto__ || Object.getPrototypeOf(Timeline)).apply(this, arguments));\n  }\n\n  _createClass(Timeline, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initTime = Date.now();\n      this.appStates = this.timestampStates([], this.props.computedStates, this.initTime);\n      this.renderChart(this.appStates, this.initTime);\n      this.renderLoop();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      this.appStates = this.timestampStates(this.appStates, nextProps.computedStates, this.initTime); // Set the active state to active color\n      // @PERF - Track previously active state and mutate array to avoid this map\n\n      this.appStates = this.appStates.map(function (state, i) {\n        state.type = nextProps.actionsById[i].action.type;\n        state.times[0].ind === nextProps.currentStateIndex ? state.times[0].visibilityState = 'active' : state.times[0].visibilityState = 'inactive';\n        return state;\n      });\n      this.renderChart(this.appStates, this.initTime);\n    }\n  }, {\n    key: 'renderLoop',\n    value: function renderLoop() {\n      var _this2 = this;\n\n      this.renderChart(this.appStates, this.initTime);\n      setTimeout(function () {\n        return _this2.renderLoop();\n      }, this.props.refreshRate);\n    }\n  }, {\n    key: 'timestampStates',\n    value: function timestampStates(currentStates, nextStates, initTime) {\n      var i = currentStates.length; // If we have committed a jump back in time, erase all subsequent states.\n\n      if (i > nextStates.length) {\n        currentStates = currentStates.slice(0, nextStates.length);\n      } // Otherwise we timestamp and add subsequent states\n\n\n      for (i; i < nextStates.length; i++) {\n        var nextState = {\n          times: [{\n            'ind': i,\n            'starting_time': Date.now(),\n            'ending_time': Date.now() + 1,\n            'display': 'circle'\n          }]\n        };\n        currentStates[i] = nextState;\n      }\n\n      ;\n      return currentStates;\n    } // @PERF - Group states as they are timestamped to improve performance on renders\n\n  }, {\n    key: 'groupStates',\n    value: function groupStates(states, field) {\n      // Groups states together on specified field\n      return states.reduce(function (mem, state) {\n        for (var i = 0; i < mem.length; i++) {\n          if (mem[i].label === state[field]) {\n            mem[i].times.push(state.times[0]);\n            return mem;\n          }\n        }\n\n        mem.push({\n          label: state[field],\n          times: [state.times[0]]\n        });\n        return mem;\n      }, []);\n    }\n  }, {\n    key: 'renderChart',\n    value: function renderChart(states, initTime) {\n      var _this3 = this;\n\n      var colorScale = d3.scale.ordinal().range(['#FF4081', '#ef9b0f', '#3F51B5']).domain(['active', 'hover', 'inactive']);\n      var xEnd = Date.now();\n      var xRange = this.props.xRange;\n      var xStart = xEnd - xRange; // Must redeclare chart each render. Otherwise it runs into issues -- it must contain state of the previous data.\n\n      var chart = d3.timeline().tickFormat({\n        format: d3.time.format('%S'),\n        tickTime: d3.time.seconds,\n        tickInterval: 5,\n        tickSize: 3\n      }).relativeTime().beginning(xStart).ending(xEnd).colors(colorScale).colorProperty('visibilityState').click(function (d, i, datum) {\n        _this3.props.jumpToState(d.ind);\n      });\n\n      if (this.props.groupBy !== 'all' && this.props.groupBy !== undefined) {\n        chart.stack(true);\n        states = this.groupStates(states, this.props.groupBy);\n      }\n\n      d3.select(\"#timeline\").select('svg').remove();\n      chart(d3.select(\"#timeline\").append(\"svg\").attr(\"width\", document.getElementById('timeline').offsetWidth).datum(states));\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate() {\n      // The rendering of this component is handled by D3\n      return false;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('div', null, _react2.default.createElement('div', {\n        id: 'timeline'\n      }));\n    }\n  }]);\n\n  return Timeline;\n}(_react2.default.Component);\n\nTimeline.propTypes = {\n  computedStates: _react.PropTypes.array.isRequired,\n  jumpToState: _react.PropTypes.func.isRequired,\n  currentStateIndex: _react.PropTypes.number.isRequired\n};\n;\nexports.default = Timeline;","map":null,"metadata":{},"sourceType":"script"}