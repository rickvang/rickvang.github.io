{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class;\n\nvar _autobindDecorator = require('autobind-decorator');\n\nvar _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);\n\nvar _events = require('../../utils/events');\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _createId = require('../../utils/createId');\n\nvar _createId2 = _interopRequireDefault(_createId);\n\nvar _filterDOMProps = require('../../utils/filterDOMProps');\n\nvar _filterDOMProps2 = _interopRequireDefault(_filterDOMProps);\n\nvar _FocusManager = require('../../utils/FocusManager');\n\nvar _FocusManager2 = _interopRequireDefault(_FocusManager);\n\nvar _focusRing = require('../../utils/focusRing');\n\nvar _focusRing2 = _interopRequireDefault(_focusRing);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nif (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {\n  require('../../spectrum-css/sidenav/index.css');\n\n  require('../../spectrum-css/sidenav/index-diff.css');\n} else if (process.env.SCALE_LARGE) {\n  require('../../spectrum-css/sidenav/index-lg.css');\n} else {\n  require('../../spectrum-css/sidenav/index.css');\n}\n\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require('../../spectrum-css/sidenav/multiStops/light.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require('../../spectrum-css/sidenav/multiStops/dark.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require('../../spectrum-css/sidenav/multiStops/lightest.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require('../../spectrum-css/sidenav/multiStops/darkest.css');\nvar SIDENAV_ITEM_SELECTOR = '.spectrum-SideNav-itemLink:not(.is-hidden):not(.is-disabled)';\nvar SELECTED_SIDENAV_ITEM_SELECTOR = SIDENAV_ITEM_SELECTOR + '.is-selected';\n\nvar isNestedSelected = function isNestedSelected(props, value) {\n  return props.children && props.children.filter(function (c) {\n    var children = c.props.children;\n\n    if (children && typeof children !== 'string') {\n      return isNestedSelected(c.props, value);\n    }\n\n    return c.props.value === value;\n  }).length !== 0;\n};\n\nvar SideNav = (0, _autobindDecorator2.default)(_class = (0, _focusRing2.default)(_class = function (_Component) {\n  _inherits(SideNav, _Component);\n\n  function SideNav(props) {\n    _classCallCheck(this, SideNav);\n\n    var _this = _possibleConstructorReturn(this, (SideNav.__proto__ || Object.getPrototypeOf(SideNav)).call(this, props));\n\n    _this.state = {\n      value: _this.props.defaultValue || _this.props.value\n    };\n    _this.id = (0, _createId2.default)();\n    return _this;\n  }\n\n  _createClass(SideNav, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var value = nextProps.value;\n\n      if (value !== this.props.value) {\n        this.setState({\n          value: value\n        });\n      }\n    }\n  }, {\n    key: 'isSelected',\n    value: function isSelected(child) {\n      return child.props.value === this.state.value;\n    }\n  }, {\n    key: 'isDefaultSelected',\n    value: function isDefaultSelected(child) {\n      return child.props.value === this.props.defaultValue;\n    }\n  }, {\n    key: 'onSelect',\n    value: function onSelect(value, e) {\n      if (this.props.value === undefined) {\n        this.setState({\n          value: value\n        });\n      }\n\n      this.props.onSelect(value, e);\n    }\n  }, {\n    key: 'isDefaultExpanded',\n    value: function isDefaultExpanded(child) {\n      if (child.props.defaultExpanded !== undefined) {\n        return child.props.defaultExpanded;\n      } // Expand nested sidenav if any item is selected\n\n\n      return Array.isArray(child.props.children) && isNestedSelected(child.props, this.state.value);\n    }\n  }, {\n    key: 'getListRole',\n    value: function getListRole() {\n      var _props = this.props,\n          variant = _props.variant,\n          role = _props.role;\n\n      if (variant === 'multiLevel') {\n        return role === 'none' ? 'group' : 'tree';\n      }\n\n      return undefined;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props2 = this.props,\n          className = _props2.className,\n          children = _props2.children,\n          hidden = _props2.hidden,\n          variant = _props2.variant,\n          _props2$id = _props2.id,\n          id = _props2$id === undefined ? this.id : _props2$id,\n          role = _props2.role,\n          manageTabIndex = _props2.manageTabIndex,\n          typeToSelect = _props2.typeToSelect,\n          _props2$ariaLevel = _props2.ariaLevel,\n          ariaLevel = _props2$ariaLevel === undefined ? 1 : _props2$ariaLevel,\n          autoFocus = _props2.autoFocus,\n          otherProps = _objectWithoutProperties(_props2, ['className', 'children', 'hidden', 'variant', 'id', 'role', 'manageTabIndex', 'typeToSelect', 'ariaLevel', 'autoFocus']);\n\n      var isMultiLevel = variant === 'multiLevel';\n      var Element = role !== 'none' ? 'nav' : 'div';\n      delete otherProps.value;\n      return _react2.default.createElement(Element, {\n        id: id,\n        hidden: hidden,\n        'aria-hidden': hidden,\n        role: role,\n        'aria-label': role !== 'none' ? otherProps['aria-label'] : undefined,\n        'aria-labelledby': role !== 'none' ? otherProps['aria-labelledby'] : undefined,\n        className: className\n      }, _react2.default.createElement(_FocusManager2.default, {\n        itemSelector: SIDENAV_ITEM_SELECTOR,\n        selectedItemSelector: SELECTED_SIDENAV_ITEM_SELECTOR,\n        manageTabIndex: isMultiLevel || manageTabIndex,\n        typeToSelect: isMultiLevel || typeToSelect,\n        autoFocus: autoFocus\n      }, _react2.default.createElement('ul', _extends({\n        className: (0, _classnames2.default)('spectrum-SideNav', {\n          'spectrum-SideNav--multiLevel': isMultiLevel\n        }),\n        role: this.getListRole(),\n        id: id + '-list'\n      }, (0, _filterDOMProps2.default)(otherProps)), _react.Children.map(children, function (child) {\n        return (0, _react.cloneElement)(child, {\n          role: isMultiLevel ? 'treeitem' : undefined,\n          hidden: hidden,\n          manageTabIndex: manageTabIndex,\n          ariaLevel: isMultiLevel ? ariaLevel : undefined,\n          _nestedNavValue: _this2.state.value,\n          _isSelected: _this2.isSelected(child),\n          onSelect: (0, _events.chain)(child.props.onSelect, _this2.onSelect),\n          defaultExpanded: _this2.isDefaultExpanded(child)\n        });\n      }))));\n    }\n  }]);\n\n  return SideNav;\n}(_react.Component)) || _class) || _class;\n\nSideNav.propTypes = {\n  /**\n   * The variant of sidenav to display\n   */\n  variant: _propTypes2.default.oneOf(['default', 'multiLevel']),\n\n  /**\n   * Whether SideNav should use roving tabIndex so that only one item can receive focus at a time. With multiLevel, this defaults to true.\n   */\n  manageTabIndex: _propTypes2.default.bool,\n\n  /**\n   * Whether SideNav should use alphanumeric search to locate next item to focus. With multiLevel, this defaults to true.\n   */\n  typeToSelect: _propTypes2.default.bool,\n\n  /**\n   * Custom className of sidenav to apply\n   */\n  className: _propTypes2.default.string,\n\n  /**\n   * Value of selected Sidenav Item (use for controlled selection)\n   */\n  value: _propTypes2.default.string,\n\n  /**\n   * Value of selected Sidenav Item at initialization\n   */\n  defaultValue: _propTypes2.default.string,\n\n  /**\n   * Whether to automatically set focus to the seleted item when the component mounts.\n   */\n  autoFocus: _propTypes2.default.bool,\n\n  /**\n   * A select handler for the sidenav\n   */\n  onSelect: _propTypes2.default.func\n};\nSideNav.defaultProps = {\n  variant: 'default',\n  manageTabIndex: false,\n  typeToSelect: false,\n  autoFocus: false,\n  onSelect: function onSelect() {}\n};\nexports.default = SideNav;","map":null,"metadata":{},"sourceType":"script"}