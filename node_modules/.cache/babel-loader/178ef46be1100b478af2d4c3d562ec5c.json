{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rvang/Desktop/Spectrum/testapp/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Provider from '@react/react-spectrum/Provider';\nimport { TableView } from '@react/react-spectrum/TableView';\nimport ListDataSource from '@react/react-spectrum/ListDataSource';\nimport Switch from '@react/react-spectrum/Switch';\nimport { TagList } from '@react/react-spectrum/TagList';\nimport Search from '@react/react-spectrum/Search';\nvar columns = [{\n  title: 'Active',\n  key: 'enabled',\n  width: 100,\n  announce: false\n}, {\n  title: 'Name',\n  key: 'name',\n  minWidth: 200,\n  sortable: true,\n  divider: true\n}, {\n  title: 'Created By',\n  key: 'createdBy',\n  width: 200,\n  sortable: true\n}]; // var ds = new TableDS();\n\nvar MyDataSource =\n/*#__PURE__*/\nfunction (_ListDataSource) {\n  _inherits(MyDataSource, _ListDataSource);\n\n  function MyDataSource() {\n    _classCallCheck(this, MyDataSource);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyDataSource).apply(this, arguments));\n  }\n\n  _createClass(MyDataSource, [{\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(sortDescriptor) {\n        var getTestJson, testJson;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('http://127.0.0.1:8887/testapi.json');\n\n              case 2:\n                getTestJson = _context.sent;\n                _context.next = 5;\n                return getTestJson.json();\n\n              case 5:\n                testJson = _context.sent;\n                _context.next = 8;\n                return testJson;\n\n              case 8:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function load(_x) {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n  }, {\n    key: \"loadMore\",\n    value: function () {\n      var _loadMore = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\");\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadMore() {\n        return _loadMore.apply(this, arguments);\n      }\n\n      return loadMore;\n    }()\n  }]);\n\n  return MyDataSource;\n}(ListDataSource);\n\nfunction renderCell(column, data, rowFocused) {\n  if (column.key === 'enabled') {\n    // Determine how to set tabIndex of Switch based on focused state of row.\n    var tabIndex = rowFocused ? 0 : -1;\n    return React.createElement(Switch, {\n      defaultChecked: data[column.key] == null ? data : data[column.key],\n      onChange: function onChange() {},\n      tabIndex: tabIndex,\n      title: column.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, data[column.key]);\n}\n\nvar SourceList =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(SourceList, _React$PureComponent);\n\n  function SourceList() {\n    _classCallCheck(this, SourceList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SourceList).apply(this, arguments));\n  }\n\n  _createClass(SourceList, [{\n    key: \"render\",\n    value: function render() {\n      var ds = new MyDataSource();\n      return React.createElement(\"div\", {\n        style: {\n          height: '442px',\n          padding: '16px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Search, {\n        placeholder: \"Enter text\",\n        style: {\n          display: \"block\"\n        },\n        onSubmit: function onSubmit() {\n          document.getElementsByClassName(\"spectrum-Tags\")[0].style.maxHeight = \"initial\";\n          document.getElementsByClassName(\"spectrum-Tags\")[0].style.visibility = \"visible\";\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          transition: \"slide-down 2s ease\",\n          maxHeight: \"0\",\n          visibility: \"hidden\",\n          display: \"block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(TagList, {\n        readOnly: true,\n        onClose: function onClose(e) {\n          return console.log(e);\n        },\n        values: [\"Leonardo\", \"Donatello\", \"Michelangelo\", \"Raphael\"],\n        onClick: function onClick(e) {\n          console.log(e.target.innerHTML);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(TableView, {\n        columns: columns,\n        dataSource: ds,\n        renderCell: renderCell,\n        style: {\n          display: \"block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      setTimeout(function () {\n        window.dispatchEvent(new Event('resize'));\n      }, 100);\n    }\n  }]);\n\n  return SourceList;\n}(React.PureComponent);\n\nReactDOM.render(React.createElement(Provider, {\n  theme: \"light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}, React.createElement(SourceList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n})), document.getElementById('root'));","map":{"version":3,"sources":["/Users/rvang/Desktop/Spectrum/testapp/src/index.js"],"names":["React","ReactDOM","Provider","TableView","ListDataSource","Switch","TagList","Search","columns","title","key","width","announce","minWidth","sortable","divider","MyDataSource","sortDescriptor","fetch","getTestJson","json","testJson","renderCell","column","data","rowFocused","tabIndex","SourceList","ds","height","padding","display","document","getElementsByClassName","style","maxHeight","visibility","transition","e","console","log","target","innerHTML","setTimeout","window","dispatchEvent","Event","PureComponent","render","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Provider from '@react/react-spectrum/Provider';\nimport {TableView} from '@react/react-spectrum/TableView';\nimport ListDataSource from '@react/react-spectrum/ListDataSource';\nimport Switch from '@react/react-spectrum/Switch';\nimport {TagList} from '@react/react-spectrum/TagList';\nimport Search from '@react/react-spectrum/Search';\n\n\n\nlet columns = [\n  {\n    title: 'Active',\n    key: 'enabled',\n    width: 100,\n    announce: false\n  },\n  {\n    title: 'Name',\n    key: 'name',\n    minWidth: 200,\n    sortable: true,\n    divider: true\n  },\n  {\n    title: 'Created By',\n    key: 'createdBy',\n    width: 200,\n    sortable: true\n  }\n];\n\n\n// var ds = new TableDS();\n\nclass MyDataSource extends ListDataSource {\n  \n\n  async load(sortDescriptor) {\n    // load some data here\n    const getTestJson = await fetch('http://127.0.0.1:8887/testapi.json');\n    const testJson = await getTestJson.json();\n    // If sortDescriptor is provided, then sort the data accordingly.\n    return await testJson;\n  }\n  \n  async loadMore() {\n    // load more data\n    return ;\n  }\n}\n\nfunction renderCell(column, data, rowFocused) {\n  if (column.key === 'enabled') {\n    // Determine how to set tabIndex of Switch based on focused state of row.\n    var tabIndex = rowFocused ? 0 : -1;\n\n    return (\n      <Switch\n        defaultChecked={data[column.key] == null ? data : data[column.key]}\n        onChange={() => {}}\n        tabIndex={tabIndex}\n        title={column.title} />\n    );\n  }\n  return <span>{data[column.key]}</span>;\n}\n\nclass SourceList extends React.PureComponent {\n\n  render() {\n    let ds = new MyDataSource();\n\n      return (\n      <div style={{height: '442px', padding: '16px'}}>\n        \n        <Search placeholder=\"Enter text\" style={{display:\"block\"}} onSubmit={function(){document.getElementsByClassName(\"spectrum-Tags\")[0].style.maxHeight = \"initial\";document.getElementsByClassName(\"spectrum-Tags\")[0].style.visibility = \"visible\";}}/>\n        <div style={{ transition:\"slide-down 2s ease\", maxHeight:\"0\", visibility:\"hidden\", display:\"block\"}}>\n        <TagList readOnly onClose={e => console.log(e)} values={[\"Leonardo\", \"Donatello\", \"Michelangelo\", \"Raphael\"]} onClick={e=>{console.log(e.target.innerHTML)}} />\n        </div>\n        <hr></hr>\n        <TableView\n          columns={columns}\n          dataSource={ds}\n          renderCell={renderCell}\n          style={{display:\"block\"}} \n        />\n      </div>);\n  }\n\n  componentDidMount() {\n      setTimeout(() => {\n          window.dispatchEvent(new Event('resize'));\n      },100);\n  }\n}\n\nReactDOM.render(<Provider theme='light'><SourceList /></Provider>, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}