{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadingLayout;\n\nvar _collectionView = require('@react/collection-view');\n/*\n * Adds support for a loading spinner and empty views to a collection-view layout\n */\n\n\nfunction loadingLayout(layout) {\n  var getLayoutInfo = layout.getLayoutInfo,\n      getVisibleLayoutInfos = layout.getVisibleLayoutInfos,\n      validate = layout.validate,\n      getContentSize = layout.getContentSize;\n  var emptyView = null;\n  var loadingIndicator = null;\n\n  layout.getLayoutInfo = function (type, section, index) {\n    if (type === 'empty-view') {\n      return emptyView;\n    }\n\n    if (type === 'loading-indicator') {\n      return loadingIndicator;\n    }\n\n    return getLayoutInfo.call(this, type, section, index);\n  };\n\n  layout.getVisibleLayoutInfos = function (rect) {\n    var layoutInfos = getVisibleLayoutInfos.call(this, rect);\n\n    if (emptyView) {\n      layoutInfos.push(emptyView);\n    }\n\n    if (loadingIndicator) {\n      layoutInfos.push(loadingIndicator);\n    }\n\n    return layoutInfos;\n  };\n\n  layout.validate = function (invalidationContext) {\n    validate.call(this, invalidationContext);\n    var count = this.collectionView.getSectionLength(0);\n    var isLoading = this.component.isLoading;\n\n    if (isLoading) {\n      loadingIndicator = new _collectionView.LayoutInfo('loading-indicator');\n\n      if (count === 0) {\n        loadingIndicator.rect = new _collectionView.Rect(0, 0, this.collectionView.size.width, this.collectionView.size.height);\n      } else {\n        loadingIndicator.rect = new _collectionView.Rect(0, getContentSize.call(this).height, this.collectionView.size.width, 100);\n      }\n    } else {\n      loadingIndicator = null;\n\n      if (count === 0) {\n        emptyView = new _collectionView.LayoutInfo('empty-view');\n        emptyView.rect = new _collectionView.Rect(0, 0, this.collectionView.size.width, this.collectionView.size.height);\n      } else {\n        emptyView = null;\n      }\n    }\n  };\n\n  layout.getContentSize = function () {\n    var size = getContentSize.call(this);\n    var count = this.collectionView.getSectionLength(0);\n\n    if (loadingIndicator && count > 0) {\n      size.height += loadingIndicator.rect.height;\n    }\n\n    return size;\n  };\n\n  return layout;\n}","map":null,"metadata":{},"sourceType":"script"}