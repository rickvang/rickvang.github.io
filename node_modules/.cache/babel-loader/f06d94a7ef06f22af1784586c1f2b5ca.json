{"ast":null,"code":"import _classCallCheck from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rvang/Desktop/Spectrum/testapp/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Provider from '@react/react-spectrum/Provider';\nimport Greeting from './Components/section1';\nimport { TableView } from '@react/react-spectrum/TableView';\nimport ListDataSource from '@react/react-spectrum/ListDataSource';\nimport Switch from '@react/react-spectrum/Switch';\nimport { TagList } from '@react/react-spectrum/TagList';\nimport Search from '@react/react-spectrum/Search';\nimport Button from '@react/react-spectrum/Button';\nvar columns = [{\n  title: 'Active',\n  key: 'enabled',\n  width: 100,\n  announce: false\n}, {\n  title: 'Name',\n  key: 'name',\n  minWidth: 200,\n  sortable: true,\n  divider: true\n}, {\n  title: 'Created By',\n  key: 'createdBy',\n  width: 200,\n  sortable: true\n}]; // var ds = new TableDS();\n// class MyDataSource extends ListDataSource {\n//   async load(sortDescriptor) {\n//     // load some data here\n//     const getTestJson = await fetch('http://127.0.0.1:8887/testapi.json');\n//     const testJson = await getTestJson.json();\n//     // If sortDescriptor is provided, then sort the data accordingly.\n//     return await testJson;\n//   }\n//   async loadMore() {\n//     // load more data\n//     return ;\n//   }\n// }\n// function renderCell(column, data, rowFocused) {\n//   if (column.key === 'enabled') {\n//     // Determine how to set tabIndex of Switch based on focused state of row.\n//     var tabIndex = rowFocused ? 0 : -1;\n//     return (\n//       <Switch\n//         defaultChecked={data[column.key] == null ? data : data[column.key]}\n//         onChange={() => {}}\n//         tabIndex={tabIndex}\n//         title={column.title} />\n//     );\n//   }\n//   return <span>{data[column.key]}</span>;\n// }\n\nvar SourceList =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(SourceList, _React$PureComponent);\n\n  function SourceList() {\n    _classCallCheck(this, SourceList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SourceList).apply(this, arguments));\n  }\n\n  _createClass(SourceList, [{\n    key: \"render\",\n    value: function render() {\n      // let ds = new MyDataSource();\n      // function slideUpDown(el) {\n      //   var elem = document.getElementsByClassName('spectrum-Tags')[0];\n      //   var elemTransition = \"all .2s ease-in-out\";\n      //   var elemHeight = \"32px\";\n      //   if (elem.style.height === elemHeight){\n      //     elem.style.transition = elemTransition;\n      //     elem.style.height = \"0px\";\n      //   }else{  \n      //     elem.style.transition = elemTransition;\n      //     elem.style.height = elemHeight;\n      //   }\n      // }\n      return React.createElement(\"div\", {\n        style: {\n          height: '100vh',\n          width: '100vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"header here\"), React.createElement(Greeting, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Greeting, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), \"something else here\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"something else here\"));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      setTimeout(function () {\n        window.dispatchEvent(new Event('resize'));\n      }, 100);\n    }\n  }]);\n\n  return SourceList;\n}(React.PureComponent);\n\nReactDOM.render(React.createElement(Provider, {\n  theme: \"light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108\n  },\n  __self: this\n}, React.createElement(SourceList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108\n  },\n  __self: this\n})), document.getElementById('root'));","map":{"version":3,"sources":["/Users/rvang/Desktop/Spectrum/testapp/src/index.js"],"names":["React","ReactDOM","Provider","Greeting","TableView","ListDataSource","Switch","TagList","Search","Button","columns","title","key","width","announce","minWidth","sortable","divider","SourceList","height","setTimeout","window","dispatchEvent","Event","PureComponent","render","document","getElementById"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,SAAR,QAAwB,iCAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,SAAQC,OAAR,QAAsB,+BAAtB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AAIA,IAAIC,OAAO,GAAG,CACZ;AACEC,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,GAAG,EAAE,SAFP;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CADY,EAOZ;AACEH,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,GAAG,EAAE,MAFP;AAGEG,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,QAAQ,EAAE,IAJZ;AAKEC,EAAAA,OAAO,EAAE;AALX,CAPY,EAcZ;AACEN,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,GAAG,EAAE,WAFP;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEG,EAAAA,QAAQ,EAAE;AAJZ,CAdY,CAAd,C,CAuBA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEME,U;;;;;;;;;;;;;6BAEK;AACP;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,aACA;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBN,UAAAA,KAAK,EAAC;AAAxB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,yBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BALF,CADA;AAQD;;;wCAEmB;AAChBO,MAAAA,UAAU,CAAC,YAAM;AACbC,QAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,KAAJ,CAAU,QAAV,CAArB;AACH,OAFS,EAER,GAFQ,CAAV;AAGH;;;;EAjCsBvB,KAAK,CAACwB,a;;AAoC/BvB,QAAQ,CAACwB,MAAT,CAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxB,CAAhB,EAAmEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAnE","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Provider from '@react/react-spectrum/Provider';\nimport Greeting from './Components/section1';\nimport {TableView} from '@react/react-spectrum/TableView';\nimport ListDataSource from '@react/react-spectrum/ListDataSource';\nimport Switch from '@react/react-spectrum/Switch';\nimport {TagList} from '@react/react-spectrum/TagList';\nimport Search from '@react/react-spectrum/Search';\nimport Button from '@react/react-spectrum/Button';\n\n\n\nlet columns = [\n  {\n    title: 'Active',\n    key: 'enabled',\n    width: 100,\n    announce: false\n  },\n  {\n    title: 'Name',\n    key: 'name',\n    minWidth: 200,\n    sortable: true,\n    divider: true\n  },\n  {\n    title: 'Created By',\n    key: 'createdBy',\n    width: 200,\n    sortable: true\n  }\n];\n\n\n// var ds = new TableDS();\n\n// class MyDataSource extends ListDataSource {\n  \n\n//   async load(sortDescriptor) {\n//     // load some data here\n//     const getTestJson = await fetch('http://127.0.0.1:8887/testapi.json');\n//     const testJson = await getTestJson.json();\n//     // If sortDescriptor is provided, then sort the data accordingly.\n//     return await testJson;\n//   }\n  \n//   async loadMore() {\n//     // load more data\n//     return ;\n//   }\n// }\n\n// function renderCell(column, data, rowFocused) {\n//   if (column.key === 'enabled') {\n//     // Determine how to set tabIndex of Switch based on focused state of row.\n//     var tabIndex = rowFocused ? 0 : -1;\n\n//     return (\n//       <Switch\n//         defaultChecked={data[column.key] == null ? data : data[column.key]}\n//         onChange={() => {}}\n//         tabIndex={tabIndex}\n//         title={column.title} />\n//     );\n//   }\n//   return <span>{data[column.key]}</span>;\n// }\n\nclass SourceList extends React.PureComponent {\n\n  render() {\n    // let ds = new MyDataSource();\n    \n    // function slideUpDown(el) {\n    //   var elem = document.getElementsByClassName('spectrum-Tags')[0];\n    //   var elemTransition = \"all .2s ease-in-out\";\n    //   var elemHeight = \"32px\";\n\n    //   if (elem.style.height === elemHeight){\n    //     elem.style.transition = elemTransition;\n    //     elem.style.height = \"0px\";\n    //   }else{  \n    //     elem.style.transition = elemTransition;\n    //     elem.style.height = elemHeight;\n    //   }\n    // }\n\n    return (\n    <div style={{height: '100vh', width:'100vh'}}>\n      <div>header here</div>\n      <Greeting></Greeting>\n      <Greeting></Greeting>\n      something else here\n      <div>something else here</div>\n    </div>);\n  }\n\n  componentDidMount() {\n      setTimeout(() => {\n          window.dispatchEvent(new Event('resize'));\n      },100);\n  }\n}\n\nReactDOM.render(<Provider theme='light'><SourceList /></Provider>, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}