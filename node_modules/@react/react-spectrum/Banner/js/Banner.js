'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = Banner;

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _filterDOMProps = require('../../utils/filterDOMProps');

var _filterDOMProps2 = _interopRequireDefault(_filterDOMProps);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require('../../spectrum-css/banner/index.css');

  require('../../spectrum-css/banner/index-diff.css');
} else if (process.env.SCALE_LARGE) {
  require('../../spectrum-css/banner/index-lg.css');
} else {
  require('../../spectrum-css/banner/index.css');
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require('../../spectrum-css/banner/multiStops/light.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require('../../spectrum-css/banner/multiStops/dark.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require('../../spectrum-css/banner/multiStops/lightest.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require('../../spectrum-css/banner/multiStops/darkest.css');


var variants = ['info', 'warning', 'error'];

/**
 * A banner is a label with a few specific states that optionally allows for corner placement.
 */
function Banner(_ref) {
  var header = _ref.header,
      content = _ref.content,
      _ref$variant = _ref.variant,
      variant = _ref$variant === undefined ? variants[0] : _ref$variant,
      corner = _ref.corner,
      className = _ref.className,
      otherProps = _objectWithoutProperties(_ref, ['header', 'content', 'variant', 'corner', 'className']);

  return _react2.default.createElement(
    'div',
    _extends({
      className: (0, _classnames2.default)('spectrum-Banner', 'spectrum-Banner--' + variant, _defineProperty({}, 'spectrum-Banner--corner', !!corner), className)
    }, (0, _filterDOMProps2.default)(otherProps)),
    _react2.default.createElement(
      'div',
      { className: 'spectrum-Banner-header' },
      header
    ),
    _react2.default.createElement(
      'div',
      { className: 'spectrum-Banner-content' },
      content
    )
  );
}

Banner.displayName = 'Banner';

Banner.propTypes = {
  /** Content to show in the larger header portion of the Banner */
  header: _propTypes2.default.string,
  /** Content to show below the header portion of the Banner */
  content: _propTypes2.default.string,
  /** Variant of Banner to render */
  variant: _propTypes2.default.oneOf(variants),
  /** Whether to absolutely place the Banner in the top-right corner of the containing element */
  corner: _propTypes2.default.bool
};