{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class;\n\nvar _autobindDecorator = require('autobind-decorator');\n\nvar _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _filterDOMProps = require('../../utils/filterDOMProps');\n\nvar _filterDOMProps2 = _interopRequireDefault(_filterDOMProps);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nif (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {\n  require('../../spectrum-css/textfield/index.css');\n\n  require('../../spectrum-css/textfield/index-diff.css');\n} else if (process.env.SCALE_LARGE) {\n  require('../../spectrum-css/textfield/index-lg.css');\n} else {\n  require('../../spectrum-css/textfield/index.css');\n}\n\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require('../../spectrum-css/textfield/multiStops/light.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require('../../spectrum-css/textfield/multiStops/dark.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require('../../spectrum-css/textfield/multiStops/lightest.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require('../../spectrum-css/textfield/multiStops/darkest.css');\n\nvar Textfield = (0, _autobindDecorator2.default)(_class = function (_Component) {\n  _inherits(Textfield, _Component);\n\n  function Textfield() {\n    _classCallCheck(this, Textfield);\n\n    return _possibleConstructorReturn(this, (Textfield.__proto__ || Object.getPrototypeOf(Textfield)).apply(this, arguments));\n  }\n\n  _createClass(Textfield, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.autoFocus) {\n        // wait a frame to make sure the textfield in the DOM and focusable\n        requestAnimationFrame(function () {\n          return _this2.focus();\n        });\n      }\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      if (!this.props.disabled) {\n        _reactDom2.default.findDOMNode(this).focus();\n      }\n    }\n  }, {\n    key: 'onChange',\n    value: function onChange(e) {\n      if (this.props.onChange) {\n        this.props.onChange(e.target.value, e);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          className = _props.className,\n          quiet = _props.quiet,\n          disabled = _props.disabled,\n          required = _props.required,\n          invalid = _props.invalid,\n          readOnly = _props.readOnly,\n          multiLine = _props.multiLine,\n          validationState = _props.validationState,\n          otherProps = _objectWithoutProperties(_props, ['className', 'quiet', 'disabled', 'required', 'invalid', 'readOnly', 'multiLine', 'validationState']);\n\n      var Tag = multiLine ? 'textarea' : 'input';\n      var isInvalid = invalid || validationState === 'invalid';\n      delete otherProps.autoFocus;\n      delete otherProps.autocompleteInput;\n\n      if (invalid) {\n        console.warn('The \"invalid\" prop of Textfield is deprecated. Please use validationState=\"invalid\" instead.');\n      }\n\n      return _react2.default.createElement(Tag, _extends({\n        type: 'text',\n        className: (0, _classnames2.default)('spectrum-Textfield', {\n          'spectrum-Textfield--multiline': multiLine,\n          'is-invalid': isInvalid,\n          'is-valid': validationState === 'valid',\n          'spectrum-Textfield--quiet': quiet\n        }, className),\n        disabled: disabled,\n        required: required,\n        readOnly: readOnly,\n        'aria-invalid': isInvalid || null\n      }, (0, _filterDOMProps2.default)(otherProps), {\n        onChange: this.onChange\n      }));\n    }\n  }]);\n\n  return Textfield;\n}(_react.Component)) || _class;\n\nTextfield.propTypes = {\n  /** Whether to automatically focus this text field */\n  autoFocus: _propTypes2.default.bool,\n\n  /** Custom CSS class to add to the text field */\n  className: _propTypes2.default.string,\n\n  /** Whether to disable the text field */\n  disabled: _propTypes2.default.bool,\n\n  /** Whether to show the warning icon and red border. DEPRECATED: use validationState instead */\n  invalid: _propTypes2.default.bool,\n\n  /** Function called when focus is taken away from the text field */\n  onBlur: _propTypes2.default.func,\n\n  /** Function called when the text field value is changed */\n  onChange: _propTypes2.default.func,\n\n  /** Function called when focus is put on the text field */\n  onFocus: _propTypes2.default.func,\n\n  /** String to show in the text field when nothing has been input */\n  placeholder: _propTypes2.default.string,\n\n  /** Whether the text field should render using a quiet variant */\n  quiet: _propTypes2.default.bool,\n\n  /** Whether the text field can only be read */\n  readOnly: _propTypes2.default.bool,\n\n  /** Whether the text field requires user input (shows warning if empty) */\n  required: _propTypes2.default.bool,\n\n  /** Show either checkmark or warning icons */\n  validationState: _propTypes2.default.oneOf(['valid', 'invalid'])\n};\nTextfield.defaultProps = {\n  autoFocus: false,\n  disabled: false,\n  quiet: false,\n  required: false,\n  invalid: false,\n  readOnly: false\n};\nexports.default = Textfield;\nTextfield.displayName = 'Textfield';","map":null,"metadata":{},"sourceType":"script"}