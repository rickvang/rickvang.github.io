{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _List = require('../../List');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SelectList = function (_Component) {\n  _inherits(SelectList, _Component);\n\n  function SelectList(props) {\n    _classCallCheck(this, SelectList);\n\n    var _this = _possibleConstructorReturn(this, (SelectList.__proto__ || Object.getPrototypeOf(SelectList)).call(this, props));\n\n    _this.renderListOfOptions = function (options) {\n      return options.map(function (option, index) {\n        return _react2.default.createElement(_List.ListItem, {\n          key: index,\n          icon: option.icon,\n          selected: _this.isSelected(option),\n          disabled: _this.props.disabled || option.disabled,\n          onSelect: _this.handleSelect.bind(_this, option),\n          onTab: _this.props.onTab\n        }, option.label);\n      });\n    };\n\n    _this.state = {\n      value: props.value\n    };\n    return _this;\n  }\n\n  _createClass(SelectList, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(props) {\n      if (props.value && props.value !== this.state.value) {\n        this.setState({\n          value: props.value\n        });\n      }\n    }\n  }, {\n    key: 'addSelection',\n    value: function addSelection(option) {\n      return [].concat(_toConsumableArray(this.state.value || []), [option.value]);\n    }\n  }, {\n    key: 'removeSelection',\n    value: function removeSelection(option) {\n      var value = this.state.value || [];\n      var index = value.indexOf(option.value);\n      return [].concat(_toConsumableArray(value.slice(0, index)), _toConsumableArray(value.slice(index + 1, value.length)));\n    }\n  }, {\n    key: 'handleSelect',\n    value: function handleSelect(option) {\n      var nextOptions = void 0;\n\n      if (this.props.multiple) {\n        if (this.isSelected(option)) {\n          nextOptions = this.removeSelection(option);\n        } else {\n          nextOptions = this.addSelection(option);\n        }\n      } else {\n        nextOptions = option.value;\n      } // Set state if in uncontrolled mode\n\n\n      if (!('value' in this.props)) {\n        this.setState({\n          value: nextOptions\n        });\n      }\n\n      if (this.props.onChange) {\n        this.props.onChange(nextOptions);\n      }\n    }\n  }, {\n    key: 'isSelected',\n    value: function isSelected(option) {\n      return this.props.multiple ? this.state.value && this.state.value.indexOf(option.value) >= 0 : this.state.value === option.value;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          _props$options = _props.options,\n          options = _props$options === undefined ? [] : _props$options,\n          _props$multiple = _props.multiple,\n          multiple = _props$multiple === undefined ? false : _props$multiple,\n          _props$disabled = _props.disabled,\n          disabled = _props$disabled === undefined ? false : _props$disabled,\n          _props$invalid = _props.invalid,\n          invalid = _props$invalid === undefined ? false : _props$invalid,\n          _props$required = _props.required,\n          required = _props$required === undefined ? false : _props$required,\n          className = _props.className,\n          otherProps = _objectWithoutProperties(_props, ['options', 'multiple', 'disabled', 'invalid', 'required', 'className']);\n\n      delete otherProps.onTab;\n      return _react2.default.createElement(_List.List, _extends({\n        className: className,\n        'aria-multiselectable': multiple,\n        'aria-disabled': disabled,\n        'aria-invalid': invalid,\n        'aria-required': required,\n        selectable: true\n      }, otherProps), this.renderListOfOptions(options));\n    }\n  }]);\n\n  return SelectList;\n}(_react.Component);\n\nSelectList.propTypes = {\n  /** Whether the SelectList is disabled */\n  disabled: _propTypes2.default.bool,\n\n  /** Whether to show the invalid icon and styling */\n  invalid: _propTypes2.default.bool,\n  label: _propTypes2.default.string,\n\n  /** Whether multiple options are able to be selected */\n  multiple: _propTypes2.default.bool,\n\n  /** Function called when the selected options are changed */\n  onChange: _propTypes2.default.func,\n\n  /** Array of strings of options in list */\n  options: _propTypes2.default.arrayOf(_propTypes2.default.object),\n\n  /** Whether an input is required */\n  required: _propTypes2.default.bool,\n\n  /** Array of pre-selected values*/\n  value: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.string), _propTypes2.default.string])\n};\nSelectList.defaultProps = {\n  options: [],\n  multiple: false,\n  disabled: false,\n  invalid: false,\n  required: false\n};\nexports.default = SelectList;","map":null,"metadata":{},"sourceType":"script"}