{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = focusRing;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * This is a decorator that ensures a focus-ring className set by the focus-ring-polyfill\n * is retained when a focused component is rendered following a state change.\n*/\n\n\nfunction focusRing(WrappedComponent) {\n  var proto = WrappedComponent.prototype;\n  var componentWillUpdate = proto.componentWillUpdate;\n  var componentDidUpdate = proto.componentDidUpdate;\n  var FOCUS_RING_CLASSNAME = 'focus-ring';\n  var elementWithFocusRing = null;\n\n  proto.componentWillUpdate = function (props, state) {\n    // call original method\n    if (componentWillUpdate) {\n      componentWillUpdate.apply(this, arguments);\n    }\n\n    if (elementWithFocusRing == null || elementWithFocusRing !== document.activeElement) {\n      try {\n        var node = _reactDom2.default.findDOMNode(this);\n\n        elementWithFocusRing = node.parentNode.querySelector('.' + FOCUS_RING_CLASSNAME);\n      } catch (error) {// do nothing if component is not mounted\n      }\n    }\n  };\n\n  proto.componentDidUpdate = function (props, state) {\n    // call original method\n    if (componentDidUpdate) {\n      componentDidUpdate.apply(this, arguments);\n    }\n\n    try {\n      var node = _reactDom2.default.findDOMNode(this);\n\n      if (elementWithFocusRing && (document.activeElement === elementWithFocusRing || node.contains(document.activeElement)) && !elementWithFocusRing.classList.contains(FOCUS_RING_CLASSNAME)) {\n        document.activeElement.classList.add(FOCUS_RING_CLASSNAME);\n        elementWithFocusRing = null;\n      }\n    } catch (error) {// do nothing if component is not mounted\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}