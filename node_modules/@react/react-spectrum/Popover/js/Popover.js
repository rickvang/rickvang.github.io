'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _autobindDecorator = require('autobind-decorator');

var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _DialogHeader = require('../../Dialog/js/DialogHeader');

var _DialogHeader2 = _interopRequireDefault(_DialogHeader);

var _filterDOMProps = require('../../utils/filterDOMProps');

var _filterDOMProps2 = _interopRequireDefault(_filterDOMProps);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _FocusManager = require('../../utils/FocusManager');

require('../style/index.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require('../../spectrum-css/popover/index.css');

  require('../../spectrum-css/popover/index-diff.css');
} else if (process.env.SCALE_LARGE) {
  require('../../spectrum-css/popover/index-lg.css');
} else {
  require('../../spectrum-css/popover/index.css');
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require('../../spectrum-css/popover/multiStops/light.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require('../../spectrum-css/popover/multiStops/dark.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require('../../spectrum-css/popover/multiStops/lightest.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require('../../spectrum-css/popover/multiStops/darkest.css');

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require('../../spectrum-css/dialog/index.css');

  require('../../spectrum-css/dialog/index-diff.css');
} else if (process.env.SCALE_LARGE) {
  require('../../spectrum-css/dialog/index-lg.css');
} else {
  require('../../spectrum-css/dialog/index.css');
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require('../../spectrum-css/dialog/multiStops/light.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require('../../spectrum-css/dialog/multiStops/dark.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require('../../spectrum-css/dialog/multiStops/lightest.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require('../../spectrum-css/dialog/multiStops/darkest.css');

var Popover = (0, _autobindDecorator2.default)(_class = function (_Component) {
  _inherits(Popover, _Component);

  function Popover() {
    _classCallCheck(this, Popover);

    return _possibleConstructorReturn(this, (Popover.__proto__ || Object.getPrototypeOf(Popover)).apply(this, arguments));
  }

  _createClass(Popover, [{
    key: 'onFocus',
    value: function onFocus(e) {
      if (this.props.trapFocus) {
        (0, _FocusManager.trapFocus)(this, e);
      }
      if (this.props.onFocus) {
        this.props.onFocus(e);
      }
    }
  }, {
    key: 'onKeyDown',
    value: function onKeyDown(e) {
      if (this.props.trapFocus) {
        (0, _FocusManager.trapFocus)(this, e);
      }
      if (this.props.onKeyDown) {
        this.props.onKeyDown(e);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _classNames;

      var _props = this.props,
          variant = _props.variant,
          placement = _props.placement,
          arrowStyle = _props.arrowStyle,
          open = _props.open,
          title = _props.title,
          children = _props.children,
          className = _props.className,
          _props$isDialog = _props.isDialog,
          isDialog = _props$isDialog === undefined ? true : _props$isDialog,
          trapFocus = _props.trapFocus,
          _props$tabIndex = _props.tabIndex,
          tabIndex = _props$tabIndex === undefined ? null : _props$tabIndex,
          otherProps = _objectWithoutProperties(_props, ['variant', 'placement', 'arrowStyle', 'open', 'title', 'children', 'className', 'isDialog', 'trapFocus', 'tabIndex']);

      var content = isDialog ? _react2.default.createElement(
        'div',
        { className: 'spectrum-Dialog-content' },
        children
      ) : children;

      delete otherProps.onFocus;
      delete otherProps.onKeyDown;

      return _react2.default.createElement(
        'div',
        _extends({
          className: (0, _classnames2.default)('spectrum-Popover', 'spectrum-Popover--' + placement.split(' ')[0], (_classNames = {
            'spectrum-Popover--withTip': isDialog,
            'spectrum-Popover--dialog': isDialog
          }, _defineProperty(_classNames, 'spectrum-Dialog--' + variant, isDialog), _defineProperty(_classNames, 'is-open', open), _classNames), className),
          onFocus: this.onFocus,
          onKeyDown: this.onKeyDown,
          tabIndex: trapFocus && tabIndex === null ? 1 : tabIndex
        }, (0, _filterDOMProps2.default)(otherProps)),
        isDialog && title && _react2.default.createElement(_DialogHeader2.default, {
          title: title,
          variant: variant }),
        content,
        isDialog && _react2.default.createElement('div', { className: 'spectrum-Popover-tip', style: arrowStyle })
      );
    }
  }]);

  return Popover;
}(_react.Component)) || _class;

Popover.propTypes = {

  /**
   * The variant will affect color and add an icon.
   */
  variant: _propTypes2.default.oneOf(['default', 'error']),

  /**
   * The position of the popover. If used with overlay trigger and there isn't enough room
   * for the tooltip in that position, it will make a limited attempt to find a new position.
   */
  placement: _propTypes2.default.oneOf(['bottom', 'bottom left', 'bottom right', 'top', 'top left', 'top right', 'left', 'left top', 'left bottom', 'right', 'right top', 'right bottom']),

  /**
   * Whether the popover is opened.
   */
  open: _propTypes2.default.bool,

  /**
   * The title of the popover.
   */
  title: _propTypes2.default.node,

  /**
   * The css class name of the popover.
   */
  className: _propTypes2.default.string,

  /**
   * Whether the focus should be trapped.
   */
  trapFocus: _propTypes2.default.bool
};
Popover.defaultProps = {
  variant: 'default',
  placement: 'bottom',
  open: true,
  trapFocus: true
};
exports.default = Popover;


Popover.displayName = 'Popover';