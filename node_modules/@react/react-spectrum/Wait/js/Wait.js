'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _filterDOMProps = require('../../utils/filterDOMProps');

var _filterDOMProps2 = _interopRequireDefault(_filterDOMProps);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('../style/index.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require('../../spectrum-css/circleloader/index.css');

  require('../../spectrum-css/circleloader/index-diff.css');
} else if (process.env.SCALE_LARGE) {
  require('../../spectrum-css/circleloader/index-lg.css');
} else {
  require('../../spectrum-css/circleloader/index.css');
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require('../../spectrum-css/circleloader/multiStops/light.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require('../../spectrum-css/circleloader/multiStops/dark.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require('../../spectrum-css/circleloader/multiStops/lightest.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require('../../spectrum-css/circleloader/multiStops/darkest.css');


var DETERMINATE = 'determinate';
var INDETERMINATE = 'indeterminate';

var Wait = function (_React$Component) {
  _inherits(Wait, _React$Component);

  function Wait() {
    _classCallCheck(this, Wait);

    return _possibleConstructorReturn(this, (Wait.__proto__ || Object.getPrototypeOf(Wait)).apply(this, arguments));
  }

  _createClass(Wait, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          _props$value = _props.value,
          value = _props$value === undefined ? 0 : _props$value,
          _props$size = _props.size,
          size = _props$size === undefined ? 'M' : _props$size,
          _props$centered = _props.centered,
          centered = _props$centered === undefined ? false : _props$centered,
          className = _props.className,
          _props$variant = _props.variant,
          variant = _props$variant === undefined ? INDETERMINATE : _props$variant,
          otherProps = _objectWithoutProperties(_props, ['value', 'size', 'centered', 'className', 'variant']);

      // Determinate version has two high level masks, 1) right half, 2) left half
      // within each of those is a submask which rotates into view within that mask
      // but starts off on the opposite side so it's hidden
      // for first 50%, submask1 moves from -180 to 0 as it covers the first half
      // for the second 50%, submask1 stays in one place and submask2 rotates in
      // from -180 to 0


      var angle = void 0;
      var fillSubmask1Style = {};
      var fillSubmask2Style = {};
      var ariaValue = undefined;

      if (variant === DETERMINATE) {
        value = Math.min(Math.max(+value, 0), 100);
        ariaValue = value;
        if (value > 0 && value <= 50) {
          angle = -180 + value / 50 * 180;
          fillSubmask1Style.transform = 'rotate(' + angle + 'deg)';
          fillSubmask2Style.transform = 'rotate(-180deg)';
        } else if (value > 50) {
          angle = -180 + (value - 50) / 50 * 180;
          fillSubmask1Style.transform = 'rotate(0deg)';
          fillSubmask2Style.transform = 'rotate(' + angle + 'deg)';
        }
      }

      return _react2.default.createElement(
        'div',
        _extends({
          className: (0, _classnames2.default)('spectrum-CircleLoader', {
            'spectrum-CircleLoader--indeterminate': variant === INDETERMINATE,
            'spectrum-CircleLoader--small': size === 'S',
            'spectrum-CircleLoader--large': size === 'L',
            'react-spectrum-Wait--centered': centered
          }, className),
          role: 'progressbar',
          'aria-valuenow': ariaValue,
          'aria-valuemin': 0,
          'aria-valuemax': 100
        }, (0, _filterDOMProps2.default)(otherProps)),
        _react2.default.createElement('div', { className: 'spectrum-CircleLoader-track' }),
        _react2.default.createElement(
          'div',
          { className: 'spectrum-CircleLoader-fills' },
          _react2.default.createElement(
            'div',
            { className: 'spectrum-CircleLoader-fillMask1' },
            _react2.default.createElement(
              'div',
              { className: 'spectrum-CircleLoader-fillSubMask1', style: fillSubmask1Style },
              _react2.default.createElement('div', { className: 'spectrum-CircleLoader-fill' })
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'spectrum-CircleLoader-fillMask2' },
            _react2.default.createElement(
              'div',
              { className: 'spectrum-CircleLoader-fillSubMask2', style: fillSubmask2Style },
              _react2.default.createElement('div', { className: 'spectrum-CircleLoader-fill' })
            )
          )
        )
      );
    }
  }]);

  return Wait;
}(_react2.default.Component);

Wait.propTypes = {
  /** Whether to center the Wait compnent in the parent container. */
  centered: _propTypes2.default.bool,

  /** Custom CSS class to add to the Wait component */
  className: _propTypes2.default.string,

  /** Size of the Wait component */
  size: _propTypes2.default.string,

  /** Adjust the filled portion of the Wait component to a determined value */
  value: _propTypes2.default.number,

  /**
   * Determines if the Wait component should endlessly spin (indeterminate) or
   * if it should be controlled manually.
   */
  variant: _propTypes2.default.string
};
exports.default = Wait;