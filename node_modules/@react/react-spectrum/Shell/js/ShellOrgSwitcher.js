'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Button = require('../../Button');

var _Button2 = _interopRequireDefault(_Button);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Search = require('../../Search');

var _Search2 = _interopRequireDefault(_Search);

var _SelectList = require('../../SelectList');

var _SelectList2 = _interopRequireDefault(_SelectList);

var _ShellMenu = require('./ShellMenu');

var _ShellMenu2 = _interopRequireDefault(_ShellMenu);

require('../style/ShellOrgSwitcher.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ShellOrgSwitcher = function (_Component) {
  _inherits(ShellOrgSwitcher, _Component);

  function ShellOrgSwitcher() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ShellOrgSwitcher);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ShellOrgSwitcher.__proto__ || Object.getPrototypeOf(ShellOrgSwitcher)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      searchTerm: '',
      visibleOptions: _this.filterVisibleOptions(_this.props.options, '')
    }, _this.handleVisible = function () {
      if (_this.contentRef) {
        _this.contentRef.querySelector('.spectrum-Search-input').focus();
      }
    }, _this.handleSearchChange = function (searchTerm) {
      var options = _this.props.options;


      _this.setState({
        searchTerm: searchTerm,
        visibleOptions: _this.filterVisibleOptions(options, searchTerm)
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ShellOrgSwitcher, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.options !== this.props.options) {
        this.setState({
          visibleOptions: this.filterVisibleOptions(nextProps.options, this.state.searchTerm)
        });
      }
    }
  }, {
    key: 'filterVisibleOptions',
    value: function filterVisibleOptions(options, searchTerm) {
      return options.filter(function (option) {
        return option.label.toLowerCase().indexOf(searchTerm) !== -1;
      });
    }
  }, {
    key: 'getSelectedLabel',
    value: function getSelectedLabel() {
      var _props = this.props,
          options = _props.options,
          value = _props.value;


      var selectedOptions = options.filter(function (option) {
        return option.value === value;
      });
      if (selectedOptions.length) {
        return selectedOptions[0].label;
      }
      return value || '';
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props2 = this.props,
          value = _props2.value,
          className = _props2.className,
          manageOrgsUrl = _props2.manageOrgsUrl,
          onOrgChange = _props2.onOrgChange,
          otherProps = _objectWithoutProperties(_props2, ['value', 'className', 'manageOrgsUrl', 'onOrgChange']);

      var visibleOptions = this.state.visibleOptions;


      return _react2.default.createElement(
        _ShellMenu2.default,
        _extends({
          placement: 'right',
          animateFrom: 'top',
          target: _react2.default.createElement(
            _Button2.default,
            {
              variant: 'minimal',
              className: 'coral3-Shell-menu-button' },
            this.getSelectedLabel()
          ),
          onVisible: this.handleVisible
        }, otherProps),
        _react2.default.createElement(
          'div',
          {
            ref: function ref(el) {
              _this2.contentRef = el;
            },
            className: (0, _classnames2.default)('coral3-Shell-orgSwitcher', className) },
          _react2.default.createElement(_Search2.default, {
            className: 'coral3-Shell-orgSwitcher-search',
            placeholder: 'Search Organizations',
            onChange: this.handleSearchChange,
            quiet: true }),
          visibleOptions.length !== 0 && _react2.default.createElement(_SelectList2.default, {
            className: 'coral3-Shell-orgSwitcher-items',
            value: value,
            options: visibleOptions,
            onChange: onOrgChange }),
          visibleOptions.length === 0 && _react2.default.createElement(
            'div',
            { className: 'coral3-Shell-orgSwitcher-resultMessage' },
            _react2.default.createElement(
              'div',
              { className: 'coral3-Shell-orgSwitcher-resultMessage-container' },
              _react2.default.createElement(
                'div',
                { className: 'coral-Heading--1 coral3-Shell-orgSwitcher-resultMessage-heading' },
                'No organizations found.'
              )
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'coral3-Shell-orgSwitcher-footer' },
            _react2.default.createElement(
              _Button2.default,
              {
                element: 'a',
                variant: 'minimal',
                href: manageOrgsUrl,
                block: true },
              'Manage Organizations'
            )
          )
        )
      );
    }
  }]);

  return ShellOrgSwitcher;
}(_react.Component);

ShellOrgSwitcher.defaultProps = {
  value: '',
  manageOrgsUrl: '#',
  options: [],
  onOrgChange: function onOrgChange() {}
};
exports.default = ShellOrgSwitcher;


ShellOrgSwitcher.displayName = 'ShellOrgSwitcher';