{"ast":null,"code":"import _classCallCheck from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rvang/Desktop/Spectrum/testapp/src/Prototypes/PrototypingTools/ProtoScrubber.js\";\nimport React from 'react'; // I typically put this inside the shell component and is an invisible button that allows you to use spectrum components without the functionality in case you want to prototype some different use cases.\n\nvar Prototype1 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Prototype1, _React$Component);\n\n  function Prototype1() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Prototype1);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Prototype1)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.ScrubPage = function () {\n      //Clears all event listeners\n      var getErrthang = document.getElementById('proto1');\n      var gotit = getErrthang.cloneNode(true);\n      var theBody = document.getElementById('proto1');\n      theBody.parentNode.replaceChild(gotit, theBody); //Clears all link functionality and applies specific functionality to links\n\n      var getAllLinks = document.getElementsByTagName('a');\n      Array.from(getAllLinks).forEach(function (el) {\n        //this clears all a hrefs links\n        el.onclick = function () {\n          return false;\n        };\n      }); //Add Custom Functionality here\n\n      var getCheckboxes = document.querySelectorAll('.spectrum-Table-checkboxCell');\n      Array.from(getCheckboxes).forEach(function (el) {\n        el.onclick = function () {\n          console.log('selected');\n        };\n      });\n      console.log('page has been scrubbed');\n    };\n\n    return _this;\n  }\n\n  _createClass(Prototype1, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"button\", {\n        style: {\n          visibility: 'hidden'\n        },\n        id: \"PrototypeScrubber\",\n        onClick: this.ScrubPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, \"clicky\");\n    }\n  }]);\n\n  return Prototype1;\n}(React.Component); // Example of how to Call after page load from a component\n//------------------------------------------------------------------\n// componentDidMount() {\n//     // refresh to get content\n//     let resizeTable = new Promise((resolve, reject) => {\n//         setTimeout(() => {\n//             window.dispatchEvent(new Event('resize'));\n//             resolve(console.log('prom'))\n//         }, 100);\n//     })\n//     resizeTable.then(() => {\n//         setTimeout(() => {\n//             //call a hidden button created by ProtoScrubber.js to clear the page\n//             document.getElementById('PrototypeScrubber').click();\n//         }, 200);\n//     })\n// }\n\n\nexport { Prototype1 as default };","map":{"version":3,"sources":["/Users/rvang/Desktop/Spectrum/testapp/src/Prototypes/PrototypingTools/ProtoScrubber.js"],"names":["React","Prototype1","ScrubPage","getErrthang","document","getElementById","gotit","cloneNode","theBody","parentNode","replaceChild","getAllLinks","getElementsByTagName","Array","from","forEach","el","onclick","getCheckboxes","querySelectorAll","console","log","visibility","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;;IAEqBC,U;;;;;;;;;;;;;;;;;;UAMjBC,S,GAAY,YAAM;AACd;AACA,UAAIC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAlB;AACA,UAAIC,KAAK,GAAGH,WAAW,CAACI,SAAZ,CAAsB,IAAtB,CAAZ;AACA,UAAIC,OAAO,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAd;AACAG,MAAAA,OAAO,CAACC,UAAR,CAAmBC,YAAnB,CAAgCJ,KAAhC,EAAuCE,OAAvC,EALc,CAMd;;AACA,UAAIG,WAAW,GAAGP,QAAQ,CAACQ,oBAAT,CAA8B,GAA9B,CAAlB;AACAC,MAAAA,KAAK,CAACC,IAAN,CAAWH,WAAX,EAAwBI,OAAxB,CACI,UAACC,EAAD,EAAQ;AACJ;AACAA,QAAAA,EAAE,CAACC,OAAH,GAAa,YAAM;AAAE,iBAAO,KAAP;AAAc,SAAnC;AACH,OAJL,EARc,CAcd;;AACA,UAAIC,aAAa,GAAGd,QAAQ,CAACe,gBAAT,CAA0B,8BAA1B,CAApB;AACAN,MAAAA,KAAK,CAACC,IAAN,CAAWI,aAAX,EAA0BH,OAA1B,CACI,UAACC,EAAD,EAAQ;AACJA,QAAAA,EAAE,CAACC,OAAH,GAAa,YAAM;AACfG,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,SAFD;AAGH,OALL;AAOAD,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,K;;;;;;;6BA7BQ;AACL,aACI;AAAQ,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC;AAAZ,SAAf;AAAsC,QAAA,EAAE,EAAC,mBAAzC;AAA4D,QAAA,OAAO,EAAE,KAAKpB,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH;;;;EALmCF,KAAK,CAACuB,S,GAkC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SAlDqBtB,U","sourcesContent":["import React from 'react';\n\n\n// I typically put this inside the shell component and is an invisible button that allows you to use spectrum components without the functionality in case you want to prototype some different use cases.\n\nexport default class Prototype1 extends React.Component {\n    render() {\n        return (\n            <button style={{visibility:'hidden'}} id=\"PrototypeScrubber\"onClick={this.ScrubPage}>clicky</button>\n        )\n    }\n    ScrubPage = () => {\n        //Clears all event listeners\n        let getErrthang = document.getElementById('proto1');\n        let gotit = getErrthang.cloneNode(true);\n        let theBody = document.getElementById('proto1');\n        theBody.parentNode.replaceChild(gotit, theBody);\n        //Clears all link functionality and applies specific functionality to links\n        let getAllLinks = document.getElementsByTagName('a');\n        Array.from(getAllLinks).forEach(\n            (el) => {\n                //this clears all a hrefs links\n                el.onclick = () => { return false };\n            }\n        )\n        //Add Custom Functionality here\n        let getCheckboxes = document.querySelectorAll('.spectrum-Table-checkboxCell');\n        Array.from(getCheckboxes).forEach(\n            (el) => {\n                el.onclick = () => {\n                    console.log('selected');\n                }\n            }\n        )\n        console.log('page has been scrubbed')\n    }\n}\n\n\n// Example of how to Call after page load from a component\n//------------------------------------------------------------------\n// componentDidMount() {\n//     // refresh to get content\n//     let resizeTable = new Promise((resolve, reject) => {\n//         setTimeout(() => {\n//             window.dispatchEvent(new Event('resize'));\n//             resolve(console.log('prom'))\n//         }, 100);\n//     })\n//     resizeTable.then(() => {\n//         setTimeout(() => {\n//             //call a hidden button created by ProtoScrubber.js to clear the page\n//             document.getElementById('PrototypeScrubber').click();\n//         }, 200);\n//     })\n// }"]},"metadata":{},"sourceType":"module"}