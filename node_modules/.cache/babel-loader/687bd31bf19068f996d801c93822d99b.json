{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _CheckmarkSmall = require('../../Icon/core/CheckmarkSmall');\n\nvar _CheckmarkSmall2 = _interopRequireDefault(_CheckmarkSmall);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _DashSmall = require('../../Icon/core/DashSmall');\n\nvar _DashSmall2 = _interopRequireDefault(_DashSmall);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _SwitchBase = require('../../Switch/js/SwitchBase');\n\nvar _SwitchBase2 = _interopRequireDefault(_SwitchBase);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nif (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {\n  require('../../spectrum-css/checkbox/index.css');\n\n  require('../../spectrum-css/checkbox/index-diff.css');\n} else if (process.env.SCALE_LARGE) {\n  require('../../spectrum-css/checkbox/index-lg.css');\n} else {\n  require('../../spectrum-css/checkbox/index.css');\n}\n\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require('../../spectrum-css/checkbox/multiStops/light.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require('../../spectrum-css/checkbox/multiStops/dark.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require('../../spectrum-css/checkbox/multiStops/lightest.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require('../../spectrum-css/checkbox/multiStops/darkest.css');\n\nvar Checkbox = function (_Component) {\n  _inherits(Checkbox, _Component);\n\n  function Checkbox() {\n    _classCallCheck(this, Checkbox);\n\n    return _possibleConstructorReturn(this, (Checkbox.__proto__ || Object.getPrototypeOf(Checkbox)).apply(this, arguments));\n  }\n\n  _createClass(Checkbox, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.setIndeterminate();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.setIndeterminate();\n    } // There is no way to set indeterminate through markup such that it will be picked up by a CSS\n    // indeterminate pseudo-selector. It can only be done via javascript.\n\n  }, {\n    key: 'setIndeterminate',\n    value: function setIndeterminate() {\n      var indeterminate = this.props.indeterminate;\n      var input = this.inputRef && this.inputRef.getInput();\n\n      if (indeterminate != null && input) {\n        input.indeterminate = indeterminate;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          indeterminate = _props.indeterminate,\n          quiet = _props.quiet,\n          className = _props.className,\n          otherProps = _objectWithoutProperties(_props, ['indeterminate', 'quiet', 'className']); // override the aria-checked prop of SwitchBase only if it is indeterminate.\n\n\n      if (indeterminate) {\n        otherProps['aria-checked'] = 'mixed';\n      }\n\n      var markIcon = indeterminate ? _react2.default.createElement(_DashSmall2.default, {\n        size: null,\n        className: 'spectrum-Checkbox-partialCheckmark'\n      }) : _react2.default.createElement(_CheckmarkSmall2.default, {\n        size: null,\n        className: 'spectrum-Checkbox-checkmark'\n      });\n      return _react2.default.createElement(_SwitchBase2.default, _extends({\n        ref: function ref(el) {\n          return _this2.inputRef = el;\n        },\n        inputType: 'checkbox',\n        className: (0, _classnames2.default)('spectrum-Checkbox', {\n          'is-indeterminate': indeterminate,\n          'spectrum-Checkbox--quiet': quiet\n        }, className),\n        inputClassName: 'spectrum-Checkbox-input',\n        markClassName: 'spectrum-Checkbox-box',\n        markIcon: markIcon,\n        labelClassName: 'spectrum-Checkbox-label'\n      }, otherProps));\n    }\n  }]);\n\n  return Checkbox;\n}(_react.Component);\n\nCheckbox.propTypes = {\n  /**\n   * Label for the checkbox\n   */\n  label: _propTypes2.default.string,\n\n  /**\n   * Whether to render the label for the checkbox\n   */\n  renderLabel: _propTypes2.default.bool,\n\n  /**\n   * defaultChecked is undefined by default so we can respect\n   * the value that is passed in without erroneously putting\n   * both checked and defaultChecked on the input\n   */\n  defaultChecked: _propTypes2.default.bool,\n\n  /**\n   * if the checkbox can't be interacted with, and also greys it out\n   */\n  disabled: _propTypes2.default.bool,\n\n  /**\n   * Uses standard HTML required to make a form invalid, also get a highlight if not filled in\n   */\n  required: _propTypes2.default.bool,\n\n  /**\n   * If the value is invalid\n   */\n  invalid: _propTypes2.default.bool,\n\n  /**\n   * Makes it so the checkbox can't be interacted with\n   */\n  readOnly: _propTypes2.default.bool,\n\n  /**\n   * Callback for when the checkbox value changes\n   */\n  onChange: _propTypes2.default.func,\n\n  /**\n   * Uses a dash instead of a check to indicate an in between or \"unknown\" state\n   */\n  indeterminate: _propTypes2.default.bool,\n\n  /**\n  * Whether the checkbox is a quiet variation\n  */\n  quiet: _propTypes2.default.bool\n};\nCheckbox.defaultProps = {\n  renderLabel: true,\n  defaultChecked: undefined,\n  disabled: false,\n  required: false,\n  invalid: false,\n  readOnly: false,\n  onChange: function onChange() {},\n  indeterminate: false,\n  quiet: false\n};\nexports.default = Checkbox;\nCheckbox.displayName = 'Checkbox';","map":null,"metadata":{},"sourceType":"script"}