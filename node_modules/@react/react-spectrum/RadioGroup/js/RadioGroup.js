'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _filterDOMProps = require('../../utils/filterDOMProps');

var _filterDOMProps2 = _interopRequireDefault(_filterDOMProps);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require('../../spectrum-css/fieldgroup/index.css');

  require('../../spectrum-css/fieldgroup/index-diff.css');
} else if (process.env.SCALE_LARGE) {
  require('../../spectrum-css/fieldgroup/index-lg.css');
} else {
  require('../../spectrum-css/fieldgroup/index.css');
}

var RadioGroup = function (_Component) {
  _inherits(RadioGroup, _Component);

  function RadioGroup(props) {
    _classCallCheck(this, RadioGroup);

    var _this = _possibleConstructorReturn(this, (RadioGroup.__proto__ || Object.getPrototypeOf(RadioGroup)).call(this, props));

    _this.handleClickItem = function (value) {
      _this.setSelectedValue(value);
    };

    var selectedValue = props.selectedValue,
        defaultSelectedValue = props.defaultSelectedValue,
        children = props.children;


    var firstSelectedValue = void 0;
    _react2.default.Children.forEach(children, function (child) {
      if (child.props.checked) {
        firstSelectedValue = child.props.value;
      }
    });

    var defaultSelected = firstSelectedValue || defaultSelectedValue;
    _this.state = {
      selectedValue: selectedValue != null ? selectedValue : defaultSelected
    };
    return _this;
  }

  _createClass(RadioGroup, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if ('selectedValue' in nextProps) {
        this.setState({
          selectedValue: nextProps.selectedValue
        });
      }
    }
  }, {
    key: 'setSelectedValue',
    value: function setSelectedValue(value) {
      if (!('selectedValue' in this.props)) {
        this.setState({
          selectedValue: value
        });
      }

      this.props.onChange(value);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          name = _props.name,
          vertical = _props.vertical,
          labelsBelow = _props.labelsBelow,
          className = _props.className,
          children = _props.children,
          otherProps = _objectWithoutProperties(_props, ['name', 'vertical', 'labelsBelow', 'className', 'children']);

      var selectedValue = this.state.selectedValue;


      return _react2.default.createElement(
        'div',
        _extends({
          className: (0, _classnames2.default)('spectrum-FieldGroup', {
            'spectrum-FieldGroup--vertical': vertical
          }, className),
          role: 'radiogroup'
        }, (0, _filterDOMProps2.default)(otherProps)),
        _react2.default.Children.map(children, function (child) {
          var _child$props = child.props,
              value = _child$props.value,
              _onChange = _child$props.onChange;

          if (value == null) {
            throw new Error('Each Radio Button must have a value property');
          }
          var radioGroupOnClick = _this2.handleClickItem.bind(_this2, value);

          return _react2.default.cloneElement(child, {
            checked: selectedValue === value,
            labelBelow: labelsBelow,
            name: name,
            onChange: function onChange(checked, e) {
              if (_onChange) {
                _onChange(value);
              }
              radioGroupOnClick();

              // Let the RadioGroup change event propagate.
              e.stopPropagation();
            }
          });
        })
      );
    }
  }]);

  return RadioGroup;
}(_react.Component);

RadioGroup.defaultProps = {
  vertical: false,
  labelsBelow: false,
  onChange: function onChange() {}
};
exports.default = RadioGroup;


RadioGroup.displayName = 'RadioGroup';