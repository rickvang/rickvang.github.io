{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class;\n\nvar _autobindDecorator = require('autobind-decorator');\n\nvar _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);\n\nvar _closest = require('dom-helpers/query/closest');\n\nvar _closest2 = _interopRequireDefault(_closest);\n\nvar _OpenTransition = require('../../utils/OpenTransition');\n\nvar _OpenTransition2 = _interopRequireDefault(_OpenTransition);\n\nvar _ownerDocument = require('react-overlays/lib/utils/ownerDocument');\n\nvar _ownerDocument2 = _interopRequireDefault(_ownerDocument);\n\nvar _Portal = require('react-overlays/lib/Portal');\n\nvar _Portal2 = _interopRequireDefault(_Portal);\n\nvar _Position = require('./Position');\n\nvar _Position2 = _interopRequireDefault(_Position);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _RootCloseWrapper = require('react-overlays/lib/RootCloseWrapper');\n\nvar _RootCloseWrapper2 = _interopRequireDefault(_RootCloseWrapper);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar visibleOverlays = [];\n\nvar Overlay = (0, _autobindDecorator2.default)(_class = function (_React$Component) {\n  _inherits(Overlay, _React$Component);\n\n  function Overlay() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Overlay);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Overlay.__proto__ || Object.getPrototypeOf(Overlay)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      exited: !_this.props.show,\n      targetNode: _reactDom2.default.findDOMNode(_this.props.target)\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Overlay, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.mounted = true;\n      this.addOverlay();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.mounted = false;\n      this.removeOverlay();\n    }\n  }, {\n    key: 'addOverlay',\n    value: function addOverlay() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n\n      if (props.show && this.mounted && !visibleOverlays.includes(this)) {\n        visibleOverlays.push(this);\n      }\n    }\n  }, {\n    key: 'removeOverlay',\n    value: function removeOverlay() {\n      // Remove overlay from the stack of visible overlays\n      var index = visibleOverlays.indexOf(this);\n\n      if (index >= 0) {\n        visibleOverlays.splice(index, 1);\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.target && nextProps.target !== this.props.target) {\n        this.setState(_extends({}, this.state, {\n          targetNode: _reactDom2.default.findDOMNode(nextProps.target)\n        }));\n      }\n    }\n  }, {\n    key: 'onEntered',\n    value: function onEntered() {\n      this.setState(_extends({}, this.state, {\n        exited: false\n      }));\n      this.addOverlay();\n\n      if (this.props.onEntered) {\n        var _props;\n\n        (_props = this.props).onEntered.apply(_props, arguments);\n      }\n    }\n  }, {\n    key: 'onExited',\n    value: function onExited() {\n      this.setState(_extends({}, this.state, {\n        exited: true\n      }));\n      this.removeOverlay();\n\n      if (this.props.onExited) {\n        var _props2;\n\n        (_props2 = this.props).onExited.apply(_props2, arguments);\n      }\n    }\n  }, {\n    key: 'getOverlayContainer',\n    value: function getOverlayContainer(target) {\n      var immediateAvailableContainer = (0, _closest2.default)(this.state.targetNode, '.react-spectrum-provider');\n      return this.props.container || immediateAvailableContainer;\n    }\n  }, {\n    key: 'hide',\n    value: function hide() {\n      // Only hide if this is the top overlay\n      if (visibleOverlays[visibleOverlays.length - 1] === this && this.props.onHide) {\n        this.props.onHide();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props3 = this.props,\n          containerPadding = _props3.containerPadding,\n          target = _props3.target,\n          _props3$container = _props3.container,\n          container = _props3$container === undefined ? this.getOverlayContainer(target) : _props3$container,\n          placement = _props3.placement,\n          offset = _props3.offset,\n          crossOffset = _props3.crossOffset,\n          flip = _props3.flip,\n          _props3$boundariesEle = _props3.boundariesElement,\n          boundariesElement = _props3$boundariesEle === undefined ? function () {\n        return (0, _ownerDocument2.default)(_this2).body;\n      } : _props3$boundariesEle,\n          shouldUpdatePosition = _props3.shouldUpdatePosition,\n          rootClose = _props3.rootClose,\n          children = _props3.children,\n          props = _objectWithoutProperties(_props3, ['containerPadding', 'target', 'container', 'placement', 'offset', 'crossOffset', 'flip', 'boundariesElement', 'shouldUpdatePosition', 'rootClose', 'children']); // Don't un-render the overlay while it's transitioning out.\n\n\n      var mountOverlay = props.show || !this.state.exited;\n\n      if (!mountOverlay) {\n        // Don't bother showing anything if we don't have to.\n        return null;\n      }\n\n      var child = children; // Position is be inner-most because it adds inline styles into the child,\n      // which the other wrappers don't forward correctly.\n\n      child = _react2.default.createElement(_Position2.default, {\n        container: container,\n        containerPadding: containerPadding,\n        target: target,\n        placement: placement,\n        shouldUpdatePosition: shouldUpdatePosition,\n        offset: offset,\n        crossOffset: crossOffset,\n        flip: flip,\n        boundariesElement: boundariesElement\n      }, child); // This animates the child node by injecting props, so it must precede\n      // anything that adds a wrapping div.\n\n      var onExit = props.onExit,\n          onExiting = props.onExiting,\n          onEnter = props.onEnter,\n          onEntering = props.onEntering;\n      child = _react2.default.createElement(_OpenTransition2.default, {\n        'in': props.show,\n        appear: true,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: this.onExited,\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: this.onEntered\n      }, child); // This goes after everything else because it adds a wrapping div.\n\n      if (rootClose) {\n        child = _react2.default.createElement(_RootCloseWrapper2.default, {\n          onRootClose: this.hide\n        }, child);\n      }\n\n      return _react2.default.createElement(_Portal2.default, {\n        container: container\n      }, child);\n    }\n  }]);\n\n  return Overlay;\n}(_react2.default.Component)) || _class;\n\nOverlay.defaultProps = {\n  placement: 'left'\n};\nexports.default = Overlay;","map":null,"metadata":{},"sourceType":"script"}