'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _icon = require('../../utils/icon');

var _createId = require('../../utils/createId');

var _createId2 = _interopRequireDefault(_createId);

var _filterDOMProps = require('../../utils/filterDOMProps');

var _filterDOMProps2 = _interopRequireDefault(_filterDOMProps);

var _focusRing = require('../../utils/focusRing');

var _focusRing2 = _interopRequireDefault(_focusRing);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * An individual tab in a TabList or TabView
 */
var Tab = (0, _focusRing2.default)(_class = function (_Component) {
  _inherits(Tab, _Component);

  function Tab(props) {
    _classCallCheck(this, Tab);

    var _this = _possibleConstructorReturn(this, (Tab.__proto__ || Object.getPrototypeOf(Tab)).call(this, props));

    _this.handleClick = function (e) {
      if (!_this.props.disabled && _this.props.onClick) {
        _this.props.onClick(e);
      }
    };

    _this.handleKeyPress = function (e) {
      if (e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();
        _this.handleClick(e);
      }
    };

    _this.tabId = (0, _createId2.default)();
    return _this;
  }

  _createClass(Tab, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          _props$id = _props.id,
          id = _props$id === undefined ? this.tabId : _props$id,
          label = _props.label,
          children = _props.children,
          className = _props.className,
          selected = _props.selected,
          disabled = _props.disabled,
          invalid = _props.invalid,
          icon = _props.icon,
          renderChildren = _props.renderChildren,
          _props$tabIndex = _props.tabIndex,
          tabIndex = _props$tabIndex === undefined ? 0 : _props$tabIndex,
          otherProps = _objectWithoutProperties(_props, ['id', 'label', 'children', 'className', 'selected', 'disabled', 'invalid', 'icon', 'renderChildren', 'tabIndex']);

      var iconSize = label || renderChildren && children ? 'XS' : 'S';

      return _react2.default.createElement(
        'div',
        _extends({}, (0, _filterDOMProps2.default)(otherProps), {
          className: (0, _classnames2.default)('spectrum-Tabs-item', {
            'is-selected': selected,
            'is-disabled': disabled,
            'is-invalid': invalid
          }, className),
          id: id,
          role: 'tab',
          'aria-selected': selected,
          'aria-invalid': invalid || null,
          'aria-disabled': disabled || null,
          tabIndex: !disabled ? tabIndex : null,
          onClick: !disabled ? this.handleClick : null,
          onKeyPress: !disabled ? this.handleKeyPress : null }),
        (0, _icon.cloneIcon)(icon, { size: iconSize, className: 'spectrum-Tabs-item-icon' }),
        (label || renderChildren && children) && _react2.default.createElement(
          'span',
          { className: 'spectrum-Tabs-itemLabel' },
          label || renderChildren && children
        )
      );
    }
  }]);

  return Tab;
}(_react.Component)) || _class;

Tab.displayName = 'Tab';
Tab.propTypes = {
  /** Class to add to tab */
  className: _propTypes2.default.string,

  /** Whether the tab should be disabled or not */
  disabled: _propTypes2.default.bool,

  /** Icon to add to tab */
  icon: _propTypes2.default.object,

  /** Whether to disable the invalid icon on the tab */
  invalid: _propTypes2.default.bool,

  /** Tab label */
  label: _propTypes2.default.string,

  /** Whether to render children in the tab */
  renderChildren: _propTypes2.default.bool,

  /** Whether the tab is selected */
  selected: _propTypes2.default.bool,

  /** Index of the tab in the grouping */
  tabIndex: _propTypes2.default.number
};
Tab.defaultProps = {
  disabled: false,
  invalid: false,
  selected: false,
  tabIndex: 0,
  renderChildren: true
};
exports.default = Tab;