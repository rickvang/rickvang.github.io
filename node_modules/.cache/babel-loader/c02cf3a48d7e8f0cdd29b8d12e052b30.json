{"ast":null,"code":"import _classCallCheck from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rvang/Desktop/Spectrum/testapp/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Provider from '@react/react-spectrum/Provider';\nimport ProtoShell from './Components/shell/Shell';\nimport ProtoSideNav from './Components/sideNav/SideNav';\nimport './Css/spectrum-core.css';\nimport './Css/spectrum-light.css';\nimport './Css/spectrum-darkest.css';\nvar columns = [{\n  title: 'Active',\n  key: 'enabled',\n  width: 100,\n  announce: false\n}, {\n  title: 'Name',\n  key: 'name',\n  minWidth: 200,\n  sortable: true,\n  divider: true\n}, {\n  title: 'Created By',\n  key: 'createdBy',\n  width: 200,\n  sortable: true\n}]; // var ds = new TableDS();\n// className MyDataSource extends ListDataSource {\n//   async load(sortDescriptor) {\n//     // load some data here\n//     const getTestJson = await fetch('http://127.0.0.1:8887/testapi.json');\n//     const testJson = await getTestJson.json();\n//     // If sortDescriptor is provided, then sort the data accordingly.\n//     return await testJson;\n//   }\n//   async loadMore() {\n//     // load more data\n//     return ;\n//   }\n// }\n// function renderCell(column, data, rowFocused) {\n//   if (column.key === 'enabled') {\n//     // Determine how to set tabIndex of Switch based on focused state of row.\n//     var tabIndex = rowFocused ? 0 : -1;\n//     return (\n//       <Switch\n//         defaultChecked={data[column.key] == null ? data : data[column.key]}\n//         onChange={() => {}}\n//         tabIndex={tabIndex}\n//         title={column.title} />\n//     );\n//   }\n//   return <span>{data[column.key]}</span>;\n// }\n\nvar SourceList =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(SourceList, _React$PureComponent);\n\n  function SourceList() {\n    _classCallCheck(this, SourceList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SourceList).apply(this, arguments));\n  }\n\n  _createClass(SourceList, [{\n    key: \"render\",\n    value: function render() {\n      // let ds = new MyDataSource();\n      // function slideUpDown(el) {\n      //   var elem = document.getElementsByClassName('spectrum-Tags')[0];\n      //   var elemTransition = \"all .2s ease-in-out\";\n      //   var elemHeight = \"32px\";\n      //   if (elem.style.height === elemHeight){\n      //     elem.style.transition = elemTransition;\n      //     elem.style.height = \"0px\";\n      //   }else{  \n      //     elem.style.transition = elemTransition;\n      //     elem.style.height = elemHeight;\n      //   }\n      // }\n      return React.createElement(\"div\", {\n        style: {\n          height: '100vh',\n          width: '100vw'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Provider, {\n        theme: \"darkest\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(ProtoShell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(Provider, {\n        theme: \"light\",\n        style: {\n          height: '100vh',\n          width: '256px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(ProtoSideNav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"header here\"), \"something else here\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"something else here\"));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      setTimeout(function () {\n        window.dispatchEvent(new Event('resize'));\n      }, 100);\n    }\n  }]);\n\n  return SourceList;\n}(React.PureComponent);\n\nReactDOM.render(React.createElement(SourceList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/rvang/Desktop/Spectrum/testapp/src/index.js"],"names":["React","ReactDOM","Provider","ProtoShell","ProtoSideNav","columns","title","key","width","announce","minWidth","sortable","divider","SourceList","height","setTimeout","window","dispatchEvent","Event","PureComponent","render","document","getElementById"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,yBAAP;AACA,OAAO,0BAAP;AACA,OAAO,4BAAP;AAGA,IAAIC,OAAO,GAAG,CACZ;AACEC,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,GAAG,EAAE,SAFP;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CADY,EAOZ;AACEH,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,GAAG,EAAE,MAFP;AAGEG,EAAAA,QAAQ,EAAE,GAHZ;AAIEC,EAAAA,QAAQ,EAAE,IAJZ;AAKEC,EAAAA,OAAO,EAAE;AALX,CAPY,EAcZ;AACEN,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,GAAG,EAAE,WAFP;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEG,EAAAA,QAAQ,EAAE;AAJZ,CAdY,CAAd,C,CAuBA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEME,U;;;;;;;;;;;;;6BAEK;AACP;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,aACA;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBN,UAAAA,KAAK,EAAC;AAAxB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,QAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAwB,QAAA,KAAK,EAAE;AAACM,UAAAA,MAAM,EAAE,OAAT;AAAkBN,UAAAA,KAAK,EAAC;AAAxB,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF,yBASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BATF,CADA;AAYD;;;wCAEmB;AAChBO,MAAAA,UAAU,CAAC,YAAM;AACbC,QAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,KAAJ,CAAU,QAAV,CAArB;AACH,OAFS,EAER,GAFQ,CAAV;AAGH;;;;EArCsBlB,KAAK,CAACmB,a;;AAwC/BlB,QAAQ,CAACmB,MAAT,CAAgB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAgCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Provider from '@react/react-spectrum/Provider';\nimport ProtoShell from './Components/shell/Shell';\nimport ProtoSideNav from './Components/sideNav/SideNav';\n\nimport './Css/spectrum-core.css';\nimport './Css/spectrum-light.css';\nimport './Css/spectrum-darkest.css';\n\n\nlet columns = [\n  {\n    title: 'Active',\n    key: 'enabled',\n    width: 100,\n    announce: false\n  },\n  {\n    title: 'Name',\n    key: 'name',\n    minWidth: 200,\n    sortable: true,\n    divider: true\n  },\n  {\n    title: 'Created By',\n    key: 'createdBy',\n    width: 200,\n    sortable: true\n  }\n];\n\n\n// var ds = new TableDS();\n\n// className MyDataSource extends ListDataSource {\n  \n\n//   async load(sortDescriptor) {\n//     // load some data here\n//     const getTestJson = await fetch('http://127.0.0.1:8887/testapi.json');\n//     const testJson = await getTestJson.json();\n//     // If sortDescriptor is provided, then sort the data accordingly.\n//     return await testJson;\n//   }\n  \n//   async loadMore() {\n//     // load more data\n//     return ;\n//   }\n// }\n\n// function renderCell(column, data, rowFocused) {\n//   if (column.key === 'enabled') {\n//     // Determine how to set tabIndex of Switch based on focused state of row.\n//     var tabIndex = rowFocused ? 0 : -1;\n\n//     return (\n//       <Switch\n//         defaultChecked={data[column.key] == null ? data : data[column.key]}\n//         onChange={() => {}}\n//         tabIndex={tabIndex}\n//         title={column.title} />\n//     );\n//   }\n//   return <span>{data[column.key]}</span>;\n// }\n\nclass SourceList extends React.PureComponent {\n\n  render() {\n    // let ds = new MyDataSource();\n    \n    // function slideUpDown(el) {\n    //   var elem = document.getElementsByClassName('spectrum-Tags')[0];\n    //   var elemTransition = \"all .2s ease-in-out\";\n    //   var elemHeight = \"32px\";\n\n    //   if (elem.style.height === elemHeight){\n    //     elem.style.transition = elemTransition;\n    //     elem.style.height = \"0px\";\n    //   }else{  \n    //     elem.style.transition = elemTransition;\n    //     elem.style.height = elemHeight;\n    //   }\n    // }\n\n    return (\n    <div style={{height: '100vh', width:'100vw'}}>\n      <Provider theme='darkest'>\n        <ProtoShell></ProtoShell>\n      </Provider>\n      <Provider  theme='light'style={{height: '100vh', width:'256px'}}>\n        <ProtoSideNav></ProtoSideNav>\n      </Provider>\n      <div>header here</div>\n      something else here\n      <div>something else here</div>\n    </div>)\n  }\n\n  componentDidMount() {\n      setTimeout(() => {\n          window.dispatchEvent(new Event('resize'));\n      },100);\n  }\n}\n\nReactDOM.render(<SourceList />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}