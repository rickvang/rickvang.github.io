{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _icon = require('../../utils/icon');\n\nvar _filterDOMProps = require('../../utils/filterDOMProps');\n\nvar _filterDOMProps2 = _interopRequireDefault(_filterDOMProps);\n\nvar _events = require('../../utils/events');\n\nvar _focusRing = require('../../utils/focusRing');\n\nvar _focusRing2 = _interopRequireDefault(_focusRing);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nrequire('../style/index.css');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nif (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {\n  require('../../spectrum-css/button/index.css');\n\n  require('../../spectrum-css/button/index-diff.css');\n} else if (process.env.SCALE_LARGE) {\n  require('../../spectrum-css/button/index-lg.css');\n} else {\n  require('../../spectrum-css/button/index.css');\n}\n\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require('../../spectrum-css/button/multiStops/light.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require('../../spectrum-css/button/multiStops/dark.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require('../../spectrum-css/button/multiStops/lightest.css');\nif (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require('../../spectrum-css/button/multiStops/darkest.css'); // For backward compatibility with coral\n\nvar VARIANTS = {\n  quiet: {\n    variant: 'primary',\n    quiet: true\n  },\n  minimal: {\n    variant: 'secondary',\n    quiet: true\n  },\n  icon: {\n    variant: 'action',\n    quiet: true\n  }\n};\n/**\n * A **button** represents an action a user can take. Buttons can be clicked or tapped to\n * perform an action or to navigate to another page. Buttons in Spectrum have several variations\n * for different uses and multiple levels of loudness for various attention-getting needs.\n */\n\nvar Button = (0, _focusRing2.default)(_class = function (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Button.__proto__ || Object.getPrototypeOf(Button)).call.apply(_ref, [this].concat(args))), _this), _this.onClick = function (event) {\n      for (var _len2 = arguments.length, rest = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      } // This is needed when `element` is an anchor or something similar.\n      // When `element` is a button, we won't even get here if it's disabled and clicked.\n\n\n      if (_this.props.disabled) {\n        // If the element is an anchor with an href, we need to preventDefault() or the browser\n        // will follow the link.\n        event.preventDefault();\n      } else if (_this.props.onClick) {\n        var _this$props;\n\n        (_this$props = _this.props).onClick.apply(_this$props, [event].concat(rest));\n      }\n    }, _this.onKeyDownSpace = function (event) {\n      if (event.key === ' ' || event.key === 'Enter') {\n        event.preventDefault();\n\n        _this.buttonRef.click();\n      }\n    }, _this.setButtonRef = function (b) {\n      return _this.buttonRef = b;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Button, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.autoFocus) {\n        // wait a frame to make sure the button in the DOM and focusable\n        requestAnimationFrame(function () {\n          return _this2.focus();\n        });\n      }\n    }\n    /**\n     * Focus the button\n     */\n\n  }, {\n    key: 'focus',\n    value: function focus() {\n      if (this.buttonRef && !this.props.disabled && this.buttonRef.focus) {\n        this.buttonRef.focus();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          _props$element = _props.element,\n          Element = _props$element === undefined ? 'button' : _props$element,\n          label = _props.label,\n          children = _props.children,\n          _props$variant = _props.variant,\n          variant = _props$variant === undefined ? 'secondary' : _props$variant,\n          logic = _props.logic,\n          quiet = _props.quiet,\n          icon = _props.icon,\n          selected = _props.selected,\n          block = _props.block,\n          className = _props.className,\n          disabled = _props.disabled,\n          invalid = _props.invalid,\n          onMouseDown = _props.onMouseDown,\n          onMouseUp = _props.onMouseUp,\n          otherProps = _objectWithoutProperties(_props, ['element', 'label', 'children', 'variant', 'logic', 'quiet', 'icon', 'selected', 'block', 'className', 'disabled', 'invalid', 'onMouseDown', 'onMouseUp']); // Map variants for backwards compatibility\n\n\n      if (VARIANTS[variant]) {\n        var mappedVariant = VARIANTS[variant];\n        var variantName = (mappedVariant.quiet ? 'quiet ' : '') + ('\"' + mappedVariant.variant + '\"');\n        console.warn('The \"' + variant + '\" variant of Button is deprecated. Please use the ' + variantName + ' variant instead.');\n        variant = mappedVariant.variant;\n        quiet = mappedVariant.quiet;\n      } // Some button variants were broken out into their own components, map them appropriately\n\n\n      var baseButtonClass = 'spectrum-Button';\n\n      if (variant === 'action' || variant === 'toggle') {\n        baseButtonClass = 'spectrum-ActionButton';\n\n        if (variant === 'toggle') {\n          quiet = true;\n        }\n\n        variant = '';\n      } else if (logic) {\n        baseButtonClass = 'spectrum-LogicButton';\n      } else if (variant === 'clear') {\n        baseButtonClass = 'spectrum-ClearButton';\n        variant = '';\n      } else if (variant === 'field') {\n        baseButtonClass = 'spectrum-FieldButton';\n        variant = '';\n      } else if (variant === 'tool') {\n        baseButtonClass = 'spectrum-Tool';\n        variant = '';\n      }\n\n      if (Element !== 'button') {\n        otherProps.role = 'button';\n        otherProps.tabIndex = disabled ? null : otherProps.tabIndex || 0;\n        otherProps['aria-disabled'] = disabled || null;\n\n        if (Element === 'a' && disabled && otherProps.href) {\n          otherProps.href = null;\n        }\n\n        otherProps.onKeyDown = disabled ? null : this.onKeyDownSpace;\n      }\n\n      var labelContents = label || (typeof children === 'string' ? children : null);\n      var ariaExpanded = null;\n\n      if (otherProps['aria-expanded'] !== undefined) {\n        ariaExpanded = otherProps['aria-expanded'];\n      } else if (otherProps['aria-haspopup']) {\n        ariaExpanded = selected || null;\n      }\n\n      var filteredProps = typeof Element === 'string' ? (0, _filterDOMProps2.default)(otherProps) : otherProps;\n      return _react2.default.createElement(Element, _extends({}, filteredProps, {\n        className: (0, _classnames2.default)(baseButtonClass, quiet ? baseButtonClass + '--quiet' : '', variant ? baseButtonClass + '--' + variant : '', {\n          'is-selected': selected,\n          'is-disabled': disabled,\n          'is-invalid': invalid,\n          'spectrum-Button--block': block\n        }, className),\n        disabled: disabled,\n        'aria-invalid': invalid || null,\n        'aria-expanded': ariaExpanded,\n        onClick: this.onClick,\n        onMouseDown: _events.focusAfterMouseEvent.bind(this, onMouseDown),\n        onMouseUp: _events.focusAfterMouseEvent.bind(this, onMouseUp),\n        ref: this.setButtonRef\n      }), (0, _icon.cloneIcon)(icon, {\n        size: 'S'\n      }), labelContents && _react2.default.createElement('span', {\n        className: baseButtonClass + '-label'\n      }, labelContents), typeof children !== 'string' && children);\n    }\n  }]);\n\n  return Button;\n}(_react.Component)) || _class;\n\nButton.propTypes = {\n  /**\n   * The variant of button to display\n   */\n  variant: _propTypes2.default.oneOf(['cta', 'primary', 'secondary', 'warning', 'action', 'toggle', 'and', 'or', 'icon', 'quiet', 'minimal', 'dropdown', 'clear', 'field', 'tool', 'overBackground']),\n\n  /**\n   * Whether the button should render using a quiet variant\n   */\n  quiet: _propTypes2.default.bool,\n\n  /**\n   * Whether the button is a logic button variant\n   */\n  logic: _propTypes2.default.bool,\n\n  /**\n   * Whether the button is disabled\n   */\n  disabled: _propTypes2.default.bool,\n\n  /**\n   * Whether the button represents a selected state\n   */\n  selected: _propTypes2.default.bool,\n\n  /**\n   * Whether the button represents an invalid state\n   */\n  invalid: _propTypes2.default.bool,\n\n  /**\n   * An icon to render in the button.\n   */\n  icon: _propTypes2.default.element,\n\n  /**\n   * The label to display in the button\n   */\n  label: _propTypes2.default.string,\n\n  /**\n   * Whether the button is a block element\n   */\n  block: _propTypes2.default.bool,\n\n  /**\n   * The DOM element to use to render the button\n   */\n  element: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n\n  /**\n   * Whether the button should be auto focused on mount\n   */\n  autoFocus: _propTypes2.default.bool,\n\n  /**\n   * A click handler for the button\n   */\n  onClick: _propTypes2.default.func\n};\nButton.defaultProps = {\n  autoFocus: false,\n  block: false,\n  disabled: false,\n  element: 'button',\n  invalid: false,\n  label: '',\n  logic: false,\n  quiet: false,\n  selected: false,\n  variant: 'secondary'\n};\nexports.default = Button;","map":null,"metadata":{},"sourceType":"script"}