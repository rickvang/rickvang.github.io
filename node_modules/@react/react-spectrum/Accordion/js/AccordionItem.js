'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _ChevronRightMedium = require('../../Icon/core/ChevronRightMedium');

var _ChevronRightMedium2 = _interopRequireDefault(_ChevronRightMedium);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _createId = require('../../utils/createId');

var _createId2 = _interopRequireDefault(_createId);

var _filterDOMProps = require('../../utils/filterDOMProps');

var _filterDOMProps2 = _interopRequireDefault(_filterDOMProps);

var _focusRing = require('../../utils/focusRing');

var _focusRing2 = _interopRequireDefault(_focusRing);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * An AccordionItem component represents an item in an accordion
 */
var AccordionItem = (0, _focusRing2.default)(_class = function (_Component) {
  _inherits(AccordionItem, _Component);

  function AccordionItem(props) {
    _classCallCheck(this, AccordionItem);

    var _this = _possibleConstructorReturn(this, (AccordionItem.__proto__ || Object.getPrototypeOf(AccordionItem)).call(this, props));

    _this.headerId = (0, _createId2.default)();
    _this.contentId = (0, _createId2.default)();
    return _this;
  }

  _createClass(AccordionItem, [{
    key: 'onHeaderKeyPress',
    value: function onHeaderKeyPress(event) {
      if (event.key === 'Enter' || event.key === ' ') {
        event.preventDefault();
        this.props.onItemClick();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          className = _props.className,
          onItemClick = _props.onItemClick,
          header = _props.header,
          selected = _props.selected,
          disabled = _props.disabled,
          ariaLevel = _props.ariaLevel,
          otherProps = _objectWithoutProperties(_props, ['children', 'className', 'onItemClick', 'header', 'selected', 'disabled', 'ariaLevel']);

      return _react2.default.createElement(
        'div',
        _extends({}, (0, _filterDOMProps2.default)(otherProps), {
          className: (0, _classnames2.default)('spectrum-Accordion-item', { 'is-open': selected, 'is-disabled': disabled }, className),
          role: 'presentation' }),
        _react2.default.createElement(
          'div',
          {
            id: this.headerId,
            className: 'spectrum-Accordion-itemHeader',
            'aria-controls': this.contentId,
            'aria-selected': selected,
            'aria-expanded': selected,
            'aria-disabled': disabled,
            role: 'tab',
            tabIndex: !disabled ? 0 : null,
            onClick: !disabled ? onItemClick : null,
            onKeyPress: !disabled ? this.onHeaderKeyPress.bind(this) : null },
          _react2.default.createElement(
            'span',
            { role: 'heading', 'aria-level': ariaLevel },
            header
          )
        ),
        _react2.default.createElement(_ChevronRightMedium2.default, { role: 'presentation', size: null, className: 'spectrum-Accordion-itemIndicator' }),
        _react2.default.createElement(
          'div',
          {
            id: this.contentId,
            role: 'tabpanel',
            'aria-labelledby': this.headerId,
            'aria-hidden': !selected,
            'aria-expanded': selected,
            className: 'spectrum-Accordion-itemContent' },
          selected ? children : null
        )
      );
    }
  }]);

  return AccordionItem;
}(_react.Component)) || _class;

AccordionItem.propTypes = {
  /** A string or node which will be placed at the top of the accordion item. */
  header: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
  selected: _propTypes2.default.bool,
  disabled: _propTypes2.default.bool,
  ariaLevel: _propTypes2.default.number,
  onItemClick: _propTypes2.default.func
};
AccordionItem.defaultProps = {
  header: '',
  selected: false,
  disabled: false,
  ariaLevel: 3,
  onItemClick: function onItemClick() {}
};
exports.default = AccordionItem;