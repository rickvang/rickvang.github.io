'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class;

var _ArrowDownSmall = require('../../Icon/core/ArrowDownSmall');

var _ArrowDownSmall2 = _interopRequireDefault(_ArrowDownSmall);

var _autobindDecorator = require('autobind-decorator');

var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _createId = require('../../utils/createId');

var _createId2 = _interopRequireDefault(_createId);

var _focusRing = require('../../utils/focusRing');

var _focusRing2 = _interopRequireDefault(_focusRing);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TableCell = (0, _focusRing2.default)(_class = (0, _autobindDecorator2.default)(_class = function (_React$Component) {
  _inherits(TableCell, _React$Component);

  function TableCell(props) {
    _classCallCheck(this, TableCell);

    var _this = _possibleConstructorReturn(this, (TableCell.__proto__ || Object.getPrototypeOf(TableCell)).call(this, props));

    _this.cellId = (0, _createId2.default)();
    return _this;
  }

  _createClass(TableCell, [{
    key: 'getCellStyle',
    value: function getCellStyle(column) {
      var style = {
        width: column.width,
        minWidth: column.minWidth,
        maxWidth: column.maxWidth
      };

      if (column.width) {
        style.flexShrink = 0;
      } else {
        style.flexGrow = 1;
      }

      return style;
    }
  }, {
    key: 'onKeyPress',
    value: function onKeyPress(e) {
      if (e.key === 'Enter' || e.key === ' ') {
        if (this.props.onClick) {
          e.preventDefault();
          this.props.onClick(e);
        }
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          column = _props.column,
          _props$id = _props.id,
          id = _props$id === undefined ? this.cellId : _props$id,
          isHeaderRow = _props.isHeaderRow,
          sortDir = _props.sortDir,
          onClick = _props.onClick,
          onDoubleClick = _props.onDoubleClick,
          className = _props.className,
          children = _props.children,
          allowsMultipleSelection = _props.allowsMultipleSelection,
          _props$tabIndex = _props.tabIndex,
          tabIndex = _props$tabIndex === undefined ? null : _props$tabIndex,
          rowFocused = _props.rowFocused;

      var isSortable = isHeaderRow && column && column.sortable;
      className = (0, _classnames2.default)(className, {
        'spectrum-Table-headCell': isHeaderRow,
        'spectrum-Table-cell': !isHeaderRow,
        'is-sortable': isSortable,
        'is-sorted-desc': isHeaderRow && sortDir === 1,
        'is-sorted-asc': isHeaderRow && sortDir === -1,
        'spectrum-Table-cell--divider': !isHeaderRow && column && column.divider,
        'spectrum-Table-cell--alignCenter': column && column.align === 'center',
        'spectrum-Table-cell--alignRight': column && column.align === 'right'
      });

      var ariaSort = null;
      if (isSortable) {
        switch (sortDir) {
          case 1:
            ariaSort = 'descending';
            break;
          case -1:
            ariaSort = 'ascending';
            break;
          default:
            ariaSort = 'none';
        }
      }

      if (isSortable) {
        tabIndex = rowFocused || !allowsMultipleSelection ? 0 : -1;
      }

      return _react2.default.createElement(
        'div',
        {
          className: className,
          style: column && this.getCellStyle(column),
          onClick: onClick,
          onDoubleClick: onDoubleClick,
          onKeyPress: isSortable ? this.onKeyPress : null,
          id: id,
          role: isHeaderRow ? 'columnheader' : 'gridcell',
          'aria-sort': ariaSort,
          'aria-label': this.props['aria-label'],
          'aria-colindex': this.props['aria-colindex'],
          tabIndex: tabIndex },
        children,
        isSortable && _react2.default.createElement(_ArrowDownSmall2.default, { className: 'spectrum-Table-sortedIcon', size: null })
      );
    }
  }]);

  return TableCell;
}(_react2.default.Component)) || _class) || _class;

exports.default = TableCell;