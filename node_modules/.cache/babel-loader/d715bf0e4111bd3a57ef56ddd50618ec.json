{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class;\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _filterDOMProps = require('../../utils/filterDOMProps');\n\nvar _filterDOMProps2 = _interopRequireDefault(_filterDOMProps);\n\nvar _events = require('../../utils/events');\n\nvar _focusRing = require('../../utils/focusRing');\n\nvar _focusRing2 = _interopRequireDefault(_focusRing);\n\nvar _string = require('../../utils/string');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SwitchBase = (0, _focusRing2.default)(_class = function (_Component) {\n  _inherits(SwitchBase, _Component);\n\n  function SwitchBase(props) {\n    _classCallCheck(this, SwitchBase);\n\n    var _this = _possibleConstructorReturn(this, (SwitchBase.__proto__ || Object.getPrototypeOf(SwitchBase)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var checked = props.checked,\n        defaultChecked = props.defaultChecked;\n    _this.state = {\n      checked: checked !== undefined ? checked : defaultChecked || false\n    };\n    return _this;\n  }\n\n  _createClass(SwitchBase, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if ('checked' in nextProps) {\n        this.setState({\n          checked: nextProps.checked\n        });\n      }\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      if (this.inputRef && !this.disabled) {\n        this.inputRef.focus();\n      }\n    }\n  }, {\n    key: 'setChecked',\n    value: function setChecked(checked) {\n      if (!('checked' in this.props)) {\n        this.setState({\n          checked: checked\n        });\n      }\n    }\n  }, {\n    key: 'getInput',\n    value: function getInput() {\n      return this.inputRef;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          label = _props.label,\n          value = _props.value,\n          name = _props.name,\n          disabled = _props.disabled,\n          required = _props.required,\n          invalid = _props.invalid,\n          readOnly = _props.readOnly,\n          className = _props.className,\n          style = _props.style,\n          children = _props.children,\n          inputType = _props.inputType,\n          renderLabel = _props.renderLabel,\n          inputClassName = _props.inputClassName,\n          markClassName = _props.markClassName,\n          markIcon = _props.markIcon,\n          labelClassName = _props.labelClassName,\n          onMouseDown = _props.onMouseDown,\n          onMouseUp = _props.onMouseUp,\n          otherProps = _objectWithoutProperties(_props, ['label', 'value', 'name', 'disabled', 'required', 'invalid', 'readOnly', 'className', 'style', 'children', 'inputType', 'renderLabel', 'inputClassName', 'markClassName', 'markIcon', 'labelClassName', 'onMouseDown', 'onMouseUp']);\n\n      var checked = this.state.checked;\n      var shouldRenderLabel = renderLabel && (label || children);\n      var Element = shouldRenderLabel ? 'label' : 'div'; // Don't let native browser change events bubble up to the root div.\n      // Otherwise we double dispatch.\n\n      delete otherProps.onChange; // Add aria-label that concatenates label and children\n      // when renderLabel is false and no other aria-label is provided.\n\n      var ariaLabel = null;\n\n      if (otherProps['aria-label']) {\n        ariaLabel = otherProps['aria-label'];\n        delete otherProps['aria-label'];\n      } else if (!renderLabel && (label || children)) {\n        var labels = [];\n\n        if (label) {\n          labels.push(label);\n        }\n\n        if (children) {\n          var str = (0, _string.getTextFromReact)(children);\n\n          if (str !== label) {\n            labels.push(str);\n          }\n        }\n\n        ariaLabel = labels.join(' ');\n      }\n\n      return _react2.default.createElement(Element, {\n        className: (0, _classnames2.default)(className, {\n          'is-invalid': invalid,\n          'is-disabled': disabled\n        }),\n        style: style\n      }, _react2.default.createElement('input', _extends({\n        ref: function ref(el) {\n          return _this2.inputRef = el;\n        },\n        type: inputType,\n        className: inputClassName,\n        checked: checked,\n        disabled: disabled,\n        name: name,\n        value: value,\n        required: required ? true : null,\n        readOnly: readOnly,\n        onChange: this.handleChange,\n        onMouseDown: _events.focusAfterMouseEvent.bind(this, onMouseDown),\n        onMouseUp: _events.focusAfterMouseEvent.bind(this, onMouseUp),\n        'aria-invalid': invalid || null,\n        'aria-checked': checked,\n        'aria-label': ariaLabel\n      }, (0, _filterDOMProps2.default)(otherProps))), _react2.default.createElement('span', {\n        className: markClassName\n      }, markIcon), shouldRenderLabel && _react2.default.createElement('span', {\n        className: labelClassName\n      }, label,\n      /* When both label and children are present,\n       include a space character so that the text\n       doesn't get smushed together. */\n      label && children && ' ', children));\n    }\n  }]);\n\n  return SwitchBase;\n}(_react.Component)) || _class;\n\nSwitchBase.defaultProps = {\n  renderLabel: true,\n  // defaultChecked is undefined by default so we can repect\n  // the value that is passed in without erroneously putting\n  // both checked and defaultChecked on the input\n  defaultChecked: undefined,\n  disabled: false,\n  required: false,\n  invalid: false,\n  readOnly: false,\n  onChange: function onChange() {}\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.handleChange = function (e) {\n    var onChange = _this3.props.onChange;\n    var checked = e.target.checked;\n\n    _this3.setChecked(checked);\n\n    onChange(checked, e);\n  };\n};\n\nexports.default = SwitchBase;\nSwitchBase.displayName = 'SwitchBase';","map":null,"metadata":{},"sourceType":"script"}