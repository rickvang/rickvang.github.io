'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = Radio;

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _SwitchBase = require('../../Switch/js/SwitchBase');

var _SwitchBase2 = _interopRequireDefault(_SwitchBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

if (process.env.SCALE_MEDIUM && process.env.SCALE_LARGE) {
  require('../../spectrum-css/radio/index.css');

  require('../../spectrum-css/radio/index-diff.css');
} else if (process.env.SCALE_LARGE) {
  require('../../spectrum-css/radio/index-lg.css');
} else {
  require('../../spectrum-css/radio/index.css');
}

if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHT) require('../../spectrum-css/radio/multiStops/light.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARK) require('../../spectrum-css/radio/multiStops/dark.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_LIGHTEST) require('../../spectrum-css/radio/multiStops/lightest.css');
if (!process.env.THEME_LIGHT && !process.env.THEME_DARK && !process.env.THEME_LIGHTEST && !process.env.THEME_DARKEST || process.env.THEME_DARKEST) require('../../spectrum-css/radio/multiStops/darkest.css');
function Radio(_ref) {
  var className = _ref.className,
      labelBelow = _ref.labelBelow,
      quiet = _ref.quiet,
      otherProps = _objectWithoutProperties(_ref, ['className', 'labelBelow', 'quiet']);

  return _react2.default.createElement(_SwitchBase2.default, _extends({
    inputType: 'radio',
    className: (0, _classnames2.default)('spectrum-Radio', {
      'spectrum-Radio--labelBelow': labelBelow,
      'spectrum-Radio--quiet': quiet
    }, className),
    inputClassName: 'spectrum-Radio-input',
    markClassName: 'spectrum-Radio-button',
    labelClassName: 'spectrum-Radio-label'
  }, otherProps));
}

Radio.displayName = 'Radio';
Radio.propTypes = {
  /**
  * Class given to radio
  */
  className: _propTypes2.default.string,

  /**
  * Whether label is below radio
  */
  labelBelow: _propTypes2.default.bool,

  /**
  * Whether switch is a quiet variation
  */
  quiet: _propTypes2.default.bool
};