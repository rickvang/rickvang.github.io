{"ast":null,"code":"import _classCallCheck from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rvang/Desktop/Spectrum/testapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rvang/Desktop/Spectrum/testapp/src/Components_old/TableView.js\";\nimport React from 'react'; // import {TableView} from '@react/react-spectrum/TableView/js/';\n\nimport { TableView } from '@react/react-spectrum/TableView';\nimport ListDataSource from '@react/react-spectrum/ListDataSource';\nimport Switch from '@react/react-spectrum/Switch'; // var tableData = [\n//   {'id': 1, 'name': 'Python, carpet', 'enabled': true, 'createdBy': 'Alexandro Hindrich'},\n//   {'id': 2, 'name': 'Cormorant, flightless', 'enabled': false, 'createdBy': 'Felicity McRinn'},\n//   {'id': 3, 'name': 'Cape cobra', 'enabled': false, 'createdBy': 'Emalee Worsfield'},\n//   {'id': 4, 'name': 'Red lava crab', 'enabled': true, 'createdBy': 'Cedric Henriet'},\n//   {'id': 5, 'name': 'Tiger', 'enabled': true, 'createdBy': 'Roselin Burk'},\n//   {'id': 6, 'name': 'Blue-tongued skink', 'enabled': false, 'createdBy': 'Dru Kretschmer'},\n//   {'id': 7, 'name': 'Springbuck', 'enabled': false, 'createdBy': 'Brockie Eastham'},\n//   {'id': 8, 'name': 'Woodpecker, downy', 'enabled': true, 'createdBy': 'Lexis Bravey'},\n//   {'id': 9, 'name': 'Cape white-eye', 'enabled': true, 'createdBy': 'Vevay Wessel'},\n//   {'id': 10, 'name': 'African wild cat', 'enabled': false, 'createdBy': 'Melamie Klais'},\n// ];\n// let columns = [\n//   {\n//     title: 'Active',\n//     key: 'enabled',\n//     width: 100,\n//     announce: false\n//   },\n//   {\n//     title: 'Name',\n//     key: 'name',\n//     minWidth: 200,\n//     sortable: true,\n//     divider: true\n//   },\n//   {\n//     title: 'Created By',\n//     key: 'createdBy',\n//     width: 200,\n//     sortable: true\n//   }\n// ];\n// class TableDS extends ListDataSource {\n//   constructor(data = tableData) {\n//     super();\n//     this.data = data;\n//   }\n//   async load(sortDescriptor) {\n//     let data = this.data.slice();\n//     if (sortDescriptor) {\n//       data.sort((a, b) => a[sortDescriptor.column.key] < b[sortDescriptor.column.key] ? -sortDescriptor.direction : sortDescriptor.direction);\n//     }\n//     return data;\n//   }\n//   async loadMore() {\n//     return new Promise((resolve) => {\n//       setTimeout(() => {\n//         resolve(this.data);\n//       }, 2000);\n//     });\n//   }\n// }\n// var ds = new TableDS();\n// function renderCell(column, data, rowFocused) {\n//   if (column.key === 'enabled') {\n//     // Determine how to set tabIndex of Switch based on focused state of row.\n//     var tabIndex = rowFocused ? 0 : -1;\n//     return (\n//       <Switch\n//         defaultChecked={data[column.key] == null ? data : data[column.key]}\n//         onChange={() => {}}\n//         tabIndex={tabIndex}\n//         title={column.title} />\n//     );\n//   }\n//   return <span>{'' + (data[column.key] || data)}</span>;\n// }\n\nvar ProtoTableView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProtoTableView, _React$Component);\n\n  function ProtoTableView() {\n    _classCallCheck(this, ProtoTableView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProtoTableView).apply(this, arguments));\n  }\n\n  _createClass(ProtoTableView, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TableView, {\n        columns: [{\n          title: 'Active',\n          key: 'enabled',\n          width: 100\n        }, {\n          title: 'Name',\n          key: 'name',\n          minWidth: 200\n        }, {\n          title: 'Created By',\n          key: 'createdBy',\n          width: 200\n        }],\n        dataSource: {\n          _events: {\n            startTransaction: [bound(_startTransaction), bound(_startTransaction)],\n            endTransaction: [bound(_endTransaction), bound(_endTransaction)],\n            insertItem: [bound(_insertItem), bound(_insertItem)]\n          },\n          _eventsCount: 10,\n          _maxListeners: null\n        },\n        renderCell: renderCell,\n        onCellClick: cellClick,\n        onCellDoubleClick: cellDoubleClick,\n        onSelectionChange: selectionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }) // <div style={{\"height\": \"442px\"}}>\n      // <TableView\n      //   renderCell={renderCell}\n      //   columns={columns}\n      //   dataSource={ds}\n      //   allowsSelection={true}\n      //   allowsMultipleSelection={false}\n      //   canReorderItems={true}\n      // >\n      // </TableView>\n      // </div>\n      ;\n    } //   componentDidMount() {\n    //     setTimeout(() => {\n    //         window.dispatchEvent(new Event('resize'));\n    //     },100);\n    // }\n\n  }]);\n\n  return ProtoTableView;\n}(React.Component);\n\nexport { ProtoTableView as default };","map":{"version":3,"sources":["/Users/rvang/Desktop/Spectrum/testapp/src/Components_old/TableView.js"],"names":["React","TableView","ListDataSource","Switch","ProtoTableView","title","key","width","minWidth","_events","startTransaction","bound","_startTransaction","endTransaction","_endTransaction","insertItem","_insertItem","_eventsCount","_maxListeners","renderCell","cellClick","cellDoubleClick","selectionChange","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAAQC,SAAR,QAAwB,iCAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,MAAP,MAAmB,8BAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEqBC,c;;;;;;;;;;;;;6BACT;AACN,aACE,oBAAC,SAAD;AACN,QAAA,OAAO,EAAE,CAAC;AACNC,UAAAA,KAAK,EAAE,QADD;AAENC,UAAAA,GAAG,EAAE,SAFC;AAGNC,UAAAA,KAAK,EAAE;AAHD,SAAD,EAIL;AACAF,UAAAA,KAAK,EAAE,MADP;AAEAC,UAAAA,GAAG,EAAE,MAFL;AAGAE,UAAAA,QAAQ,EAAE;AAHV,SAJK,EAQL;AACAH,UAAAA,KAAK,EAAE,YADP;AAEAC,UAAAA,GAAG,EAAE,WAFL;AAGAC,UAAAA,KAAK,EAAE;AAHP,SARK,CADH;AAcN,QAAA,UAAU,EAAE;AACVE,UAAAA,OAAO,EAAE;AACPC,YAAAA,gBAAgB,EAAE,CAACC,KAAK,CAAEC,iBAAF,CAAN,EAA2BD,KAAK,CAAEC,iBAAF,CAAhC,CADX;AAEPC,YAAAA,cAAc,EAAE,CAACF,KAAK,CAAEG,eAAF,CAAN,EAAyBH,KAAK,CAAEG,eAAF,CAA9B,CAFT;AAGPC,YAAAA,UAAU,EAAE,CAACJ,KAAK,CAAEK,WAAF,CAAN,EAAqBL,KAAK,CAAEK,WAAF,CAA1B;AAHL,WADC;AAOVC,UAAAA,YAAY,EAAE,EAPJ;AAQVC,UAAAA,aAAa,EAAE;AARL,SAdN;AAyBN,QAAA,UAAU,EAAEC,UAzBN;AA0BN,QAAA,WAAW,EAAEC,SA1BP;AA2BN,QAAA,iBAAiB,EAAEC,eA3Bb;AA4BN,QAAA,iBAAiB,EAAEC,eA5Bb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA+BE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AA1CF;AA4CD,K,CACH;AACA;AACA;AACA;AACA;;;;;EAnD0CtB,KAAK,CAACuB,S;;SAA7BnB,c","sourcesContent":["import React from 'react';\n\n// import {TableView} from '@react/react-spectrum/TableView/js/';\nimport {TableView} from '@react/react-spectrum/TableView';\nimport ListDataSource from '@react/react-spectrum/ListDataSource';\nimport Switch from '@react/react-spectrum/Switch';\n\n// var tableData = [\n//   {'id': 1, 'name': 'Python, carpet', 'enabled': true, 'createdBy': 'Alexandro Hindrich'},\n//   {'id': 2, 'name': 'Cormorant, flightless', 'enabled': false, 'createdBy': 'Felicity McRinn'},\n//   {'id': 3, 'name': 'Cape cobra', 'enabled': false, 'createdBy': 'Emalee Worsfield'},\n//   {'id': 4, 'name': 'Red lava crab', 'enabled': true, 'createdBy': 'Cedric Henriet'},\n//   {'id': 5, 'name': 'Tiger', 'enabled': true, 'createdBy': 'Roselin Burk'},\n//   {'id': 6, 'name': 'Blue-tongued skink', 'enabled': false, 'createdBy': 'Dru Kretschmer'},\n//   {'id': 7, 'name': 'Springbuck', 'enabled': false, 'createdBy': 'Brockie Eastham'},\n//   {'id': 8, 'name': 'Woodpecker, downy', 'enabled': true, 'createdBy': 'Lexis Bravey'},\n//   {'id': 9, 'name': 'Cape white-eye', 'enabled': true, 'createdBy': 'Vevay Wessel'},\n//   {'id': 10, 'name': 'African wild cat', 'enabled': false, 'createdBy': 'Melamie Klais'},\n// ];\n// let columns = [\n//   {\n//     title: 'Active',\n//     key: 'enabled',\n//     width: 100,\n//     announce: false\n//   },\n//   {\n//     title: 'Name',\n//     key: 'name',\n//     minWidth: 200,\n//     sortable: true,\n//     divider: true\n//   },\n//   {\n//     title: 'Created By',\n//     key: 'createdBy',\n//     width: 200,\n//     sortable: true\n//   }\n// ];\n\n// class TableDS extends ListDataSource {\n//   constructor(data = tableData) {\n//     super();\n//     this.data = data;\n//   }\n\n//   async load(sortDescriptor) {\n//     let data = this.data.slice();\n//     if (sortDescriptor) {\n//       data.sort((a, b) => a[sortDescriptor.column.key] < b[sortDescriptor.column.key] ? -sortDescriptor.direction : sortDescriptor.direction);\n//     }\n\n//     return data;\n//   }\n\n//   async loadMore() {\n//     return new Promise((resolve) => {\n//       setTimeout(() => {\n//         resolve(this.data);\n//       }, 2000);\n//     });\n//   }\n// }\n\n// var ds = new TableDS();\n\n// function renderCell(column, data, rowFocused) {\n//   if (column.key === 'enabled') {\n//     // Determine how to set tabIndex of Switch based on focused state of row.\n//     var tabIndex = rowFocused ? 0 : -1;\n\n//     return (\n//       <Switch\n//         defaultChecked={data[column.key] == null ? data : data[column.key]}\n//         onChange={() => {}}\n//         tabIndex={tabIndex}\n//         title={column.title} />\n//     );\n//   }\n//   return <span>{'' + (data[column.key] || data)}</span>;\n// }\n  \nexport default class ProtoTableView extends React.Component {\n    render(){\n      return (\n        <TableView\n  columns={[{\n      title: 'Active',\n      key: 'enabled',\n      width: 100,\n    },{\n      title: 'Name',\n      key: 'name',\n      minWidth: 200,\n    },{\n      title: 'Created By',\n      key: 'createdBy',\n      width: 200,\n    }]}\n  dataSource={{\n    _events: {\n      startTransaction: [bound( _startTransaction),bound( _startTransaction)],\n      endTransaction: [bound (_endTransaction),bound (_endTransaction)],\n      insertItem: [bound (_insertItem),bound (_insertItem)],\n      \n    },\n    _eventsCount: 10,\n    _maxListeners: null,\n    \n  }}\n  renderCell={renderCell}\n  onCellClick={cellClick}\n  onCellDoubleClick={cellDoubleClick}\n  onSelectionChange={selectionChange}\n/>\n        // <div style={{\"height\": \"442px\"}}>\n        // <TableView\n        //   renderCell={renderCell}\n        //   columns={columns}\n        //   dataSource={ds}\n          \n        //   allowsSelection={true}\n        //   allowsMultipleSelection={false}\n        //   canReorderItems={true}\n        // >\n        // </TableView>\n        // </div>\n      )\n    }\n  //   componentDidMount() {\n  //     setTimeout(() => {\n  //         window.dispatchEvent(new Event('resize'));\n  //     },100);\n  // }\n  }\n"]},"metadata":{},"sourceType":"module"}